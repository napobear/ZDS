// Jed2vlog, ispLEVER version 1.07 
// Header :
//    File Name :
//       untitled 
//    Circuit Name :
//       mmu_gal 
//    Last Update :
//       Thu Jun 25 12:18:40 2015
//    Device Information :
//       PLD Type P16V8AS
//    Delay Model Selected :TYP
//    Jedec Information :
//	ispLEVER Classic 1.7.00.05.28.13 Lattice Semiconductor Corp.
//	JEDEC file for: P16V8AS V9.0
//	Created on: Thu Jun 25 12:18:12 2015
//	
//	mmu_gal.bls 
//	
// endHeader


// Delay Assigments
`timescale 1ns /100ps
//----------------------------------------------------------------------//
//                                                                      //
//              MAIN PLD NETLIST MODULE                                 //
//                                                                      //
//----------------------------------------------------------------------//

module mmu_gal(M1,A2,A1,A0,RD,RST,WR,IORQ,A7,PIN10,A6,PIN12,PIN13,A3,MMURD,
             MMUWR,A4,A5,MEMENA,PIN20);
	output MMURD, MMUWR;
	inout PIN12,PIN13, A3, A4, A5, MEMENA;
	input M1, A2, A1, A0, RD, RST, WR, IORQ, A7, PIN10, A6, PIN20;
	supply0 GND;
	supply1 PWR;

//Pin Assignments:
//        PIN01 = M1;
//        PIN02 = A2;
//        PIN03 = A1;
//        PIN04 = A0;
//        PIN05 = RD;
//        PIN06 = RST;
//        PIN07 = WR;
//        PIN08 = IORQ;
//        PIN09 = A7;
//        PIN11 = A6;
//        PIN14 = A3;
//        PIN15 = MMURD;
//        PIN16 = MMUWR;
//        PIN17 = A4;
//        PIN18 = A5;
//        PIN19 = MEMENA;

// Delay Parameters:
//   TYP delay used
parameter tpLH09 = 0:0:0;
parameter tpHL09 = 0:0:0;
parameter tpLH12 = 0:0:0;
parameter tpHL12 = 0:0:0;
parameter tpLH03 = 0:0:0;
parameter tpHL03 = 0:0:0;
parameter tpLH05 = 0:0:0;
parameter tpHL05 = 0:0:0;
parameter tpLH_inco_lump = 3:7:10;
parameter tpHL_inco_lump = 3:7:10;
parameter tpLH_oe = 10:10:10;
parameter tpHL_oe = 10:10:10;
parameter tpLH_oe_pterm = 10:10:10;
parameter tpHL_oe_pterm = 10:10:10;

//   Input Buffer:
	andinv_mmu_gal  INBUF01( INBUF01_o, INBUF01_ob, M1);
	andinv_mmu_gal  INBUF02( INBUF02_o, INBUF02_ob, A2);
	andinv_mmu_gal  INBUF03( INBUF03_o, INBUF03_ob, A1);
	andinv_mmu_gal  INBUF04( INBUF04_o, INBUF04_ob, A0);
	andinv_mmu_gal  INBUF05( INBUF05_o, INBUF05_ob, RD);
	andinv_mmu_gal  INBUF06( INBUF06_o, INBUF06_ob, RST);
	andinv_mmu_gal  INBUF07( INBUF07_o, INBUF07_ob, WR);
	andinv_mmu_gal  INBUF08( INBUF08_o, INBUF08_ob, IORQ);
	andinv_mmu_gal  INBUF09( INBUF09_o, INBUF09_ob, A7);
	andinv_mmu_gal  INBUF11( INBUF11_o, INBUF11_ob, A6);
	andinv_mmu_gal  INBUF12( INBUF12_o, INBUF12_ob, PIN12);
	andinv_mmu_gal  INBUF13( INBUF13_o, INBUF13_ob, PIN13);
	andinv_mmu_gal  INBUF14( INBUF14_o, INBUF14_ob, A3);
	andinv_mmu_gal  INBUF17( INBUF17_o, INBUF17_ob, A4);
	andinv_mmu_gal  INBUF18( INBUF18_o, INBUF18_ob, A5);
	andinv_mmu_gal  INBUF19( INBUF19_o, INBUF19_ob, MEMENA);

//   Product Terms (AND array):
	and  #(tpLH03,tpHL03) PT000_0( PT000_0_o, INBUF19_ob, INBUF06_o);
	and  #(tpLH03,tpHL03) PT001_32( PT001_32_o, INBUF02_ob, INBUF01_o, INBUF03_ob, INBUF04_o, INBUF18_o, INBUF17_ob, INBUF06_o, INBUF14_ob, INBUF08_ob, INBUF09_ob, INBUF11_ob);
	and  #(tpLH03,tpHL03) PT024_768( PT024_768_o, INBUF02_ob, INBUF01_o, INBUF03_ob, INBUF04_ob, INBUF18_o, INBUF17_ob, INBUF14_ob, INBUF07_ob, INBUF08_ob, INBUF09_ob, INBUF11_ob);
	and  #(tpLH03,tpHL03) PT032_1024( PT032_1024_o, INBUF02_ob, INBUF01_o, INBUF03_ob, INBUF04_ob, INBUF18_o, INBUF05_ob, INBUF17_ob, INBUF14_ob, INBUF08_ob, INBUF09_ob, INBUF11_ob);

//   Sum Terms (OR arrray):
	or  #(tpLH_inco_lump,tpHL_inco_lump) ST015( ST015_o, PT032_1024_o);
	or  #(tpLH_inco_lump,tpHL_inco_lump) ST016( ST016_o, PT024_768_o);
	or  #(tpLH_inco_lump,tpHL_inco_lump) ST019( ST019_o, PT000_0_o, PT001_32_o);

//   Macro Cells:

//   Feedback Node:

//   Output Buffer:
	notif1  #(tpLH09,tpHL09) OUTBUF12( PIN12, GND, PWR);
	notif1  #(tpLH09,tpHL09) OUTBUF13( PIN13, GND, PWR);
	notif1  #(tpLH09,tpHL09) OUTBUF14( A3, GND, GND);
	notif1  #(tpLH09,tpHL09) OUTBUF15( MMURD, ST015_o, PWR);
	notif1  #(tpLH09,tpHL09) OUTBUF16( MMUWR, ST016_o, PWR);
	notif1  #(tpLH09,tpHL09) OUTBUF17( A4, GND, GND);
	notif1  #(tpLH09,tpHL09) OUTBUF18( A5, GND, GND);
	notif1  #(tpLH09,tpHL09) OUTBUF19( MEMENA, ST019_o, PWR);
endmodule
/************************************************************************
*                                                                       *
*   MODULE: ANDINV                                                      *
*     Input Buffer with dual outputs.                                   *
*                                                                       *
*************************************************************************/
module andinv_mmu_gal(out,outb,in);
output out,outb;
input  in;
parameter tpLH_iob = 0:0:0; 
parameter tpHL_iob = 0:0:0; 
        
   and #(tpLH_iob,tpHL_iob) n1(out,in);
   not #(tpLH_iob,tpHL_iob) n2(outb,in);
endmodule
