-- Jed2svhdl, ispLEVER version 1.07 
-- Header :
--    File Name :
--       simpletoggle 
--    Circuit Name :
--       simpletoggle 
--    Last Update :
--       Sat Jun 14 19:55:20 2014
--    Device Information :
--       PLD Type P16V8AS
--    Delay Model Selected :MAX
--    Jedec Information :
--	ispLEVER Classic 1.7.00.05.28.13 Lattice Semiconductor Corp.
--	JEDEC file for: P16V8AS V9.0
--	Created on: Sat Jun 14 19:54:58 2014
--	
--	simpletoggle.bls 
--	
-- endHeader

LIBRARY j2svlib;
USE j2svlib.j2svlib.all;
LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE std.textio.all;
--------------------------------------------------------------------------
--                                                                      --
--              MAIN PLD NETLIST MODULE                                 --
--                                                                      --
--------------------------------------------------------------------------

ENTITY simpletoggle IS
   GENERIC (
-- Delay Parameters:
--   MAX delay used
       tpLH09 : time := 0 ns;
       tpHL09 : time := 0 ns;
       tpLH_iob : time := 0 ns;
       tpHL_iob : time := 0 ns;
       tpLH03 : time := 0 ns;
       tpHL03 : time := 0 ns;
       tpLH05 : time := 0 ns;
       tpHL05 : time := 0 ns;
       tpLH_inco_lump : time := 10 ns;
       tpHL_inco_lump : time := 10 ns;
       tpLH_oe : time := 10 ns;
       tpHL_oe : time := 10 ns;
       tpLH_oe_pterm : time := 10 ns;
       tpHL_oe_pterm : time := 10 ns);
   PORT (
	R: IN STD_LOGIC := '0';
	T: IN STD_LOGIC := '0';
	PIN03: IN STD_LOGIC := '0';
	PIN04: IN STD_LOGIC := '0';
	PIN05: IN STD_LOGIC := '0';
	PIN06: IN STD_LOGIC := '0';
	PIN07: IN STD_LOGIC := '0';
	PIN08: IN STD_LOGIC := '0';
	PIN09: IN STD_LOGIC := '0';
	PIN11: IN STD_LOGIC := '0';
	PIN12: INOUT STD_LOGIC;
	PIN13: INOUT STD_LOGIC;
	PIN14: INOUT STD_LOGIC;
	PIN15: OUT STD_LOGIC;
	PIN16: OUT STD_LOGIC;
	PIN17: INOUT STD_LOGIC;
	Q0: OUT STD_LOGIC;
	Q1: OUT STD_LOGIC);

--Pin Assignments:
    -- alias PIN01 is: STD_LOGIC R;
    -- alias PIN02 is: STD_LOGIC T;
    -- alias PIN18 is: STD_LOGIC Q0;
    -- alias PIN19 is: STD_LOGIC Q1;

END simpletoggle;

ARCHITECTURE structure OF simpletoggle IS

-- Signal Declaration :
   SIGNAL  Q1_ODUMMY, Q0_ODUMMY, ST019_o, ST018_o, PT008_256_o,
           PT000_0_o, INBUF19_ob, INBUF19_o, INBUF18_ob, INBUF18_o,
           INBUF17_ob, INBUF17_o, INBUF14_ob, INBUF14_o, INBUF13_ob,
           INBUF13_o, INBUF12_ob, INBUF12_o, INBUF11_ob, INBUF11_o,
           INBUF09_ob, INBUF09_o, INBUF08_ob, INBUF08_o, INBUF07_ob,
           INBUF07_o, INBUF06_ob, INBUF06_o, INBUF05_ob, INBUF05_o,
           INBUF04_ob, INBUF04_o, INBUF03_ob, INBUF03_o, INBUF02_ob,
           INBUF02_o, INBUF01_ob, INBUF01_o
           : STD_LOGIC ;
   SIGNAL  PWR : STD_LOGIC := '1' ;
   SIGNAL  GND : STD_LOGIC := '0' ;
   SIGNAL  PWRUPSTATE : STD_LOGIC := '0' ;

--   PLD Netlist ---------
  BEGIN

--   Input Buffer:
      INBUF01_o <= R after g_delay ( INBUF01_o,tpLH_iob,tpHL_iob);
      INBUF01_ob <=  not(R) after g_delay ( INBUF01_ob,tpLH_iob,tpHL_iob);
      INBUF02_o <= T after g_delay ( INBUF02_o,tpLH_iob,tpHL_iob);
      INBUF02_ob <=  not(T) after g_delay ( INBUF02_ob,tpLH_iob,tpHL_iob);
      INBUF03_o <= PIN03 after g_delay ( INBUF03_o,tpLH_iob,tpHL_iob);
      INBUF03_ob <=  not(PIN03) after g_delay ( INBUF03_ob,tpLH_iob,tpHL_iob);
      INBUF04_o <= PIN04 after g_delay ( INBUF04_o,tpLH_iob,tpHL_iob);
      INBUF04_ob <=  not(PIN04) after g_delay ( INBUF04_ob,tpLH_iob,tpHL_iob);
      INBUF05_o <= PIN05 after g_delay ( INBUF05_o,tpLH_iob,tpHL_iob);
      INBUF05_ob <=  not(PIN05) after g_delay ( INBUF05_ob,tpLH_iob,tpHL_iob);
      INBUF06_o <= PIN06 after g_delay ( INBUF06_o,tpLH_iob,tpHL_iob);
      INBUF06_ob <=  not(PIN06) after g_delay ( INBUF06_ob,tpLH_iob,tpHL_iob);
      INBUF07_o <= PIN07 after g_delay ( INBUF07_o,tpLH_iob,tpHL_iob);
      INBUF07_ob <=  not(PIN07) after g_delay ( INBUF07_ob,tpLH_iob,tpHL_iob);
      INBUF08_o <= PIN08 after g_delay ( INBUF08_o,tpLH_iob,tpHL_iob);
      INBUF08_ob <=  not(PIN08) after g_delay ( INBUF08_ob,tpLH_iob,tpHL_iob);
      INBUF09_o <= PIN09 after g_delay ( INBUF09_o,tpLH_iob,tpHL_iob);
      INBUF09_ob <=  not(PIN09) after g_delay ( INBUF09_ob,tpLH_iob,tpHL_iob);
      INBUF11_o <= PIN11 after g_delay ( INBUF11_o,tpLH_iob,tpHL_iob);
      INBUF11_ob <=  not(PIN11) after g_delay ( INBUF11_ob,tpLH_iob,tpHL_iob);
      INBUF12_o <= PIN12 after g_delay ( INBUF12_o,tpLH_iob,tpHL_iob);
      INBUF12_ob <=  not(PIN12) after g_delay ( INBUF12_ob,tpLH_iob,tpHL_iob);
      INBUF13_o <= PIN13 after g_delay ( INBUF13_o,tpLH_iob,tpHL_iob);
      INBUF13_ob <=  not(PIN13) after g_delay ( INBUF13_ob,tpLH_iob,tpHL_iob);
      INBUF14_o <= PIN14 after g_delay ( INBUF14_o,tpLH_iob,tpHL_iob);
      INBUF14_ob <=  not(PIN14) after g_delay ( INBUF14_ob,tpLH_iob,tpHL_iob);
      INBUF17_o <= PIN17 after g_delay ( INBUF17_o,tpLH_iob,tpHL_iob);
      INBUF17_ob <=  not(PIN17) after g_delay ( INBUF17_ob,tpLH_iob,tpHL_iob);
      INBUF18_o <= Q0_ODUMMY after g_delay ( INBUF18_o,tpLH_iob,tpHL_iob);
      INBUF18_ob <=  not(Q0_ODUMMY) after g_delay ( INBUF18_ob,tpLH_iob,tpHL_iob);
      INBUF19_o <= Q1_ODUMMY after g_delay ( INBUF19_o,tpLH_iob,tpHL_iob);
      INBUF19_ob <=  not(Q1_ODUMMY) after g_delay ( INBUF19_ob,tpLH_iob,tpHL_iob);

--   Product Terms (AND array):
      PT000_0_o <= INBUF02_ob AND INBUF01_o AND INBUF18_o after g_delay ( PT000_0_o,tpLH03,tpHL03);
      PT008_256_o <= INBUF02_ob AND INBUF19_o after g_delay ( PT008_256_o,tpLH03,tpHL03);

--   Sum Terms (OR arrray):
      ST018_o <= PT008_256_o after g_delay ( ST018_o,tpLH_inco_lump,tpHL_inco_lump);
      ST019_o <= PT000_0_o after g_delay ( ST019_o,tpLH_inco_lump,tpHL_inco_lump);

--   Macro Cells:

--   Feedback Node:

--   Output Buffer:
      g_notif1( PIN12, GND, PWR, tpLH09,tpHL09);
      g_notif1( PIN13, GND, PWR, tpLH09,tpHL09);
      g_notif1( PIN14, GND, PWR, tpLH09,tpHL09);
      g_notif1( PIN15, GND, PWR, tpLH09,tpHL09);
      g_notif1( PIN16, GND, PWR, tpLH09,tpHL09);
      g_notif1( PIN17, GND, PWR, tpLH09,tpHL09);
      g_notif1( Q0_ODUMMY, ST018_o, PWR, tpLH09,tpHL09);
      g_notif1( Q1_ODUMMY, ST019_o, PWR, tpLH09,tpHL09);
      Q0 <= Q0_ODUMMY;
      Q1 <= Q1_ODUMMY;
END structure;
