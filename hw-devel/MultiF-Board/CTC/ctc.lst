   1:			
   2:			;;
   3:			;; CTC test for NEZ80 (Darkstar) MultiF-Board
   4:			;;
   5:			
   6:			
   7:	00E8          	CTCBASE		EQU	$E8
   8:			
   9:	00E8          	CTCCHAN0	EQU	CTCBASE+0	; Channel 1 - Free
  10:	00E9          	CTCCHAN1	EQU	CTCBASE+1	; Channel 2 - Free
  11:	00EA          	CTCCHAN2	EQU	CTCBASE+2	; Channel 3 - UART 1 Interrupt
  12:	00EB          	CTCCHAN3	EQU	CTCBASE+3	; Channel 4 - UART 0 Interrupt
  13:			
  14:			
  15:			
  16:	000A          	LF	EQU	0AH
  17:	000D          	CR	EQU	0DH
  18:	0008          	BS	EQU	08H		;Back space (required for sector display)
  19:	0007          	BELL	EQU	07H
  20:	0009          	TAB	EQU	09H		;TAB ACROSS (8 SPACES FOR SD-BOARD)
  21:	001B          	ESC	EQU	1BH
  22:	001C          	CLEAR	EQU	1CH		;SD Systems Video Board, Clear to EOL. (Use 80 spaces if EOL not available
  23:							;on other video cards)
  24:	0001          	RDCON	EQU	1		;For CP/M I/O
  25:	0002          	WRCON	EQU	2
  26:	0009          	PRINT	EQU	9
  27:	000B          	CONST	EQU	11		;CONSOLE STAT
  28:	0005          	BDOS	EQU	5
  29:			
  30:	0000          	FALSE	EQU	0
  31:	FFFF          	TRUE	EQU	-1
  32:			
  33:	0000          	QUIT	EQU	0
  34:			
  35:	0100          		ORG	$100
  36:				
  37:	0100          	INITIALIZE:
  38:			
  39:			; initialize CTC Chan 0 as timer and test interrupts
  40:			
  41:	0100  F3      		DI
  42:	0101  ED5E    		IM	2
  43:			
  44:	0103  3E10    		LD	A,$10		; Vector table base MSB ($1000)
  45:	0105  ED47    		LD	I,A
  46:			
  47:	0107  3E03    		LD	A,00000011b
  48:	0109  D3E8    		OUT	(CTCCHAN0),A
  49:			
  50:	010B  3EA7    		LD	A,10100111b	; Command word
  51:	010D  D3E8    		OUT	(CTCCHAN0),A
  52:			
  53:	010F  3EFF    		LD	A,$FF		; 4M / 256 / 256 = 122 ticks per sec.
  54:	0111  D3E8    		OUT	(CTCCHAN0),A
  55:			
  56:	0113  3E00    		LD	A,$00		; CTC handler locations in int. vector
  57:	0115  D3E8    		OUT	(CTCCHAN0),A
  58:			
  59:	0117  117701  		LD	DE,MSINIT	; Wait for start
  60:	011A  CD7201  		CALL	PSTRING
  61:	011D  CD6601  		CALL	ZCI
  62:			
  63:	0120  FB      		EI			; let things run
  64:			
  65:	0121          	ENDLOOP:
  66:	0121  C32101  		JP	ENDLOOP
  67:	0124  CD4901  		CALL	ZCSTS
  68:	0127  FE01    		CP	$01
  69:	0129  20F6    		JR	NZ,ENDLOOP
  70:	012B  F3      		DI
  71:	012C  C30000  		JP	QUIT
  72:			
  73:	012F          	IHANDLCH0:
  74:	012F  119801  		LD	DE,MSICH0
  75:	0132  180F    		JR	DONEINT
  76:	0134          	IHANDLCH1:
  77:	0134  11AF01  		LD	DE,MSICH1
  78:	0137  180A    		JR	DONEINT
  79:	0139          	IHANDLCH2:
  80:	0139  11C601  		LD	DE,MSICH2
  81:	013C  1805    		JR	DONEINT
  82:	013E          	IHANDLCH3:
  83:	013E  11DD01  		LD	DE,MSICH3
  84:	0141  1800    		JR	DONEINT
  85:	0143          	DONEINT:
  86:	0143  CD7201  		CALL	PSTRING
  87:	0146  FB      		EI
  88:	0147  ED4D    		RETI
  89:			
  90:			
  91:	0149          	ZCSTS:
  92:	0149  C5      		PUSH	BC
  93:	014A  D5      		PUSH	DE
  94:	014B  E5      		PUSH	HL
  95:	014C  0E0B    		LD	C,CONST
  96:	014E  CD0500  		CALL	BDOS		;Returns with 1 in [A] if character at keyboard
  97:	0151  E1      		POP	HL
  98:	0152  D1      		POP	DE
  99:	0153  C1      		POP	BC
 100:	0154  FE01    		CP	1
 101:	0156  C9      		RET	
 102:				
 103:			; 
 104:	0157          	ZCO:	;Write character that is in [C]
 105:	0157  F5      		PUSH	AF
 106:	0158  C5      		PUSH	BC
 107:	0159  D5      		PUSH	DE
 108:	015A  E5      		PUSH	HL
 109:	015B  59      		LD	E,C
 110:	015C  0E02    		LD	C,WRCON
 111:	015E  CD0500  		CALL	BDOS
 112:	0161  E1      		POP	HL
 113:	0162  D1      		POP	DE
 114:	0163  C1      		POP	BC
 115:	0164  F1      		POP	AF
 116:	0165  C9      		RET	
 117:			
 118:	0166          	ZCI:	;Return keyboard character in [A]
 119:	0166  C5      		PUSH	BC
 120:	0167  D5      		PUSH	DE
 121:	0168  E5      		PUSH	HL
 122:	0169  0E01    		LD	C,RDCON
 123:	016B  CD0500  		CALL	BDOS
 124:	016E  E1      		POP	HL
 125:	016F  D1      		POP	DE
 126:	0170  C1      		POP	BC
 127:	0171  C9      		RET	
 128:			;
 129:			;
 130:			;	;Print a string in [DE] up to '$'
 131:	0172          	PSTRING:
 132:	0172  0E09    		LD	C,PRINT
 133:	0174  C30500  		JP	BDOS		;PRINT MESSAGE, 
 134:			
 135:			;
 136:			;-------------------------------------------------------------------------------
 137:			
 138:	0177  43544320	MSINIT		DB 'CTC initalized, a key to go...',CR,LF,'$'
	      696E6974
	      616C697A
	      65642C20
	      61206B65
	      7920746F
	      20676F2E
	      2E2E0D0A
	      24
 139:	0198  4368616E	MSICH0		DB 'Channel 0 interrupt!',CR,LF,'$'
	      6E656C20
	      3020696E
	      74657272
	      75707421
	      0D0A24
 140:	01AF  4368616E	MSICH1		DB 'Channel 1 interrupt!',CR,LF,'$'
	      6E656C20
	      3120696E
	      74657272
	      75707421
	      0D0A24
 141:	01C6  4368616E	MSICH2		DB 'Channel 2 interrupt!',CR,LF,'$'
	      6E656C20
	      3220696E
	      74657272
	      75707421
	      0D0A24
 142:	01DD  4368616E	MSICH3		DB 'Channel 3 interrupt!',CR,LF,'$'
	      6E656C20
	      3320696E
	      74657272
	      75707421
	      0D0A24
 143:			;
 144:			;-------------------------------------------------------------------------------
 145:				
 146:			
 147:	1000          		ORG	$1000
 148:	1000          	INTVEC:
 149:	1000  2F01    	THNDLCH0:	DW	IHANDLCH0
 150:	1002  3401    	THNDLCH1:	DW	IHANDLCH1
 151:	1004  3901    	THNDLCH2:	DW	IHANDLCH2
 152:	1006  3E01    	THNDLCH3:	DW	IHANDLCH3
 153:	1008          	TVECFILL:	DS	247
 154:	10FF  00      	TVECEND:	DB	0
 155:			
 156:			
 157:			;-------------------------------------------------------------------------------
 158:			
 159:			
 160:	1100          		END



Statistics:

    43	symbols
   253	bytes



Symbol Table:

bdos           =   5     ihandlch0        12f     rdcon          =   1     
bell           =   7+    ihandlch1        134     tab            =   9+    
bs             =   8+    ihandlch2        139     thndlch0        1000+    
clear          =  1c+    ihandlch3        13e     thndlch1        1002+    
const          =   b     initialize       100+    thndlch2        1004+    
cr             =   d     intvec          1000+    thndlch3        1006+    
ctcbase        =  e8     lf             =   a     true           =ffff+    
ctcchan0       =  e8     msich0           198     tvecend         10ff+    
ctcchan1       =  e9+    msich1           1af     tvecfill        1008+    
ctcchan2       =  ea+    msich2           1c6     wrcon          =   2     
ctcchan3       =  eb+    msich3           1dd     zci              166     
doneint          143     msinit           177     zco              157+    
endloop          121     print          =   9     zcsts            149     
esc            =  1b+    pstring          172     
false          =   0+    quit           =   0     
