   1:			
   2:				.Z80
   3:				ASEG
   4:			
   5:			include darkstar.equ
**** darkstar.equ ****
   1:			;****** Equ's file autogenerated by genequs ver: 1.0
   2:			;****** Input files:
   3:			;****** SysCommon.lst
   4:	FDC4          	FIN            	EQU	0FDC4H
   5:	FD89          	DLY1           	EQU	0FD89H
   6:	FD87          	DLY2           	EQU	0FD87H
   7:	FDE1          	FOUT           	EQU	0FDE1H
   8:	FE70          	U1NUL          	EQU	0FE70H
   9:	FE25          	U0ISR          	EQU	0FE25H
  10:	FE59          	U1ISR          	EQU	0FE59H
  11:	FD85          	DELAY          	EQU	0FD85H
  12:	FE4E          	UISRE          	EQU	0FE4EH
  13:	FDB5          	FSTAT          	EQU	0FDB5H
  14:	FE32          	UISRI          	EQU	0FE32H
  15:	FC4B          	BBU1ST         	EQU	0FC4BH
  16:	FC45          	BBU1RX         	EQU	0FC45H
  17:	FC3F          	BBU1TX         	EQU	0FC3FH
  18:	FD29          	BBEXEC         	EQU	0FD29H
  19:	FD05          	BBHDRD         	EQU	0FD05H
  20:	FD6A          	BBVOID         	EQU	0FD6AH
  21:	FE86          	UASTKB         	EQU	0FE86H
  22:	FD6B          	MMPMAP         	EQU	0FD6BH
  23:	FE0F          	INTRDI         	EQU	0FE0FH
  24:	FC2D          	SCONIN         	EQU	0FC2DH
  25:	FC15          	VCONIN         	EQU	0FC15H
  26:	FCE1          	BBDIV16        	EQU	0FCE1H
  27:	FCFF          	BBHDWR         	EQU	0FCFFH
  28:	FD78          	MMGETP         	EQU	0FD78H
  29:	FDFE          	INTREN         	EQU	0FDFEH
  30:	FE79          	RLDROM         	EQU	0FE79H
  31:	FCE7          	BBMUL16        	EQU	0FCE7H
  32:	FC00          	SYSCOM         	EQU	0FC00H
  33:	FE84          	UASTAV         	EQU	0FE84H
  34:	FE19          	SYTIMR         	EQU	0FE19H
  35:	FC33          	SCONST         	EQU	0FC33H
  36:	FC1B          	VCONST         	EQU	0FC1BH
  37:	FC39          	BBU0INI        	EQU	0FC39H
  38:	FC51          	BBU1INI        	EQU	0FC51H
  39:	FC87          	BBFREAD        	EQU	0FC87H
  40:	FD23          	BBEIDCK        	EQU	0FD23H
  41:	FD0B          	BBHDGEO        	EQU	0FD0BH
  42:	FEB4          	BBSTACK        	EQU	0FEB4H
  43:	FC81          	BBFHOME        	EQU	0FC81H
  44:	FD94          	BBCONIN        	EQU	0FD94H
  45:	FC27          	CRDUREG        	EQU	0FC27H
  46:	FFF0          	SINTVEC        	EQU	0FFF0H
  47:	FEB4          	SYSCMLO        	EQU	0FEB4H
  48:	FE22          	VOIDISR        	EQU	0FE22H
  49:	FC9F          	BBSTTIM        	EQU	0FC9FH
  50:	FDAA          	BBCONST        	EQU	0FDAAH
  51:	FC27          	SCONOUT        	EQU	0FC27H
  52:	FC0F          	VCONOUT        	EQU	0FC0FH
  53:	FCED          	BBOFFCAL       	EQU	0FCEDH
  54:	FC57          	BBINICTC       	EQU	0FC57H
  55:	FE90          	BBSTBASE       	EQU	0FE90H
  56:	FC5D          	BBRESCTC       	EQU	0FC5DH
  57:	FCA5          	BBRDTIME       	EQU	0FCA5H
  58:	FCC3          	BBCPTIME       	EQU	0FCC3H
  59:	FD5A          	BBCALRET       	EQU	0FD5AH
  60:	FCB7          	BBDMASET       	EQU	0FCB7H
  61:	FC00          	BBJTOBNK       	EQU	0FC00H
  62:	FCBD          	BBDSKSEL       	EQU	0FCBDH
  63:	FCF3          	BBHDINIT       	EQU	0FCF3H
  64:	FCB1          	BBSECSET       	EQU	0FCB1H
  65:	FD11          	BBHDBOOT       	EQU	0FD11H
  66:	FC69          	BBUPLCHR       	EQU	0FC69H
  67:	FC99          	BBPRNCHR       	EQU	0FC99H
  68:	FCCF          	BBVCPMBT       	EQU	0FCCFH
  69:	FC93          	BBFLOPIO       	EQU	0FC93H
  70:	FD1D          	BBEPMNGR       	EQU	0FD1DH
  71:	FCD5          	BBSIDSET       	EQU	0FCD5H
  72:	FD17          	BBLDPART       	EQU	0FD17H
  73:	FC75          	BBRDVDSK       	EQU	0FC75H
  74:	FC8D          	BBFWRITE       	EQU	0FC8DH
  75:	FCC9          	BBCPBOOT       	EQU	0FCC9H
  76:	FC21          	BBCURSET       	EQU	0FC21H
  77:	FCAB          	BBTRKSET       	EQU	0FCABH
  78:	FC7B          	BBWRVDSK       	EQU	0FC7BH
  79:	FD9F          	BBCONOUT       	EQU	0FD9FH
  80:	FCF9          	BBDRIVEID      	EQU	0FCF9H
  81:	FC63          	BBPSNDBLK      	EQU	0FC63H
  82:	FC03          	BBCRTCINI      	EQU	0FC03H
  83:	FC6F          	BBPRCVBLK      	EQU	0FC6FH
  84:	FC09          	BBCRTFILL      	EQU	0FC09H
  85:	FCDB          	BBFDRVSEL      	EQU	0FCDBH
  86:			;****** EOF ***
  87:			
**** lbatst.asm ****
   6:			include Common.inc.asm
**** Common.inc.asm ****
   1:			;
   2:			;=======================================================================
   3:			;
   4:			; Modular Z80 DarkStar (NE Z80) SysBios
   5:			;
   6:			;=======================================================================
   7:			;
   8:			; Original code:
   9:			; Z80 Nuova Elettronica Monitor 390 su eprom 2532 (4k)
  10:			;
  11:			; Disassembled and reconstructed by
  12:			; Piergiorgio Betti <pbetti@lpconsul.net> on 2005 01 26
  13:			;
  14:			; Latest non modular BIOS is DARKSTAR-MONITOR-0.9.0.asm
  15:			; dated 20140531
  16:			; - Following addition of MultiF-Board doing complete rewrite of the
  17:			;   monitor/BIOS has been started.
  18:			;   Major goals:
  19:			;   o Modularization: Now monitor can grow up to 256kb instead of 4kb
  20:			;     :-)
  21:			;   o Specialized images fitted in memory page (4kb) or multiples
  22:			;   o Full support for new hardware
  23:			;   o I/O rewrite for MODE 2 interrupts
  24:			;   Minor goals:
  25:			;   o Full code clean-up & reoarganization
  26:			; ---------------------------------------------------------------------
  27:			; Revisions:
  28:			; 20140905 - Modified hexadecimal constants to 0xxH format to widely
  29:			;            accepeted by different assemblers
  30:			; ---------------------------------------------------------------------
  31:			
  32:			
  33:			; ---------------------------------------------------------------------
  34:			; SYSBIOS
  35:			;
  36:			; This is the BIOS non-resident portion of the new (banked)
  37:			; BIOS/Monitor for the NE Z80 (aka DarkStar)
  38:			;
  39:			; ---------------------------------------------------------------------
  40:			;
  41:			; Full BIOS memory scheme:
  42:			;
  43:			;	+-----------------+
  44:			;	+    SysCommon    +   <-- Resident portion. Common to all images
  45:			;	+   FC00 - FFFF   +
  46:			;	+-----------------+
  47:			;	+-----------------+   +-----------------+   +-----------------+
  48:			;	+     SysBios     +   +   BootMonitor   +   +     [Other]     +
  49:			;	+   F000 - FBFF   +   +   F000 - FBFF   +   +   F000 - FBFF   +
  50:			;	+-----------------+   +-----------------+   +-----------------+
  51:			;
  52:			;	         ^                     ^                     ^
  53:			;	         |                     |                     |
  54:			;	         ---------------------------------------------
  55:			;	                      Variable section
  56:			;
  57:			; The above are always assembled at ORG F000 and linked and allocated
  58:			; in the EEPROM in this way:
  59:			;
  60:			;	+-----------------+
  61:			;	+    SysCommon    +
  62:			;	+   FC00 - FFFF   +
  63:			;	+     SysBios     +     <-- EEPROM page 1 ($C1000)
  64:			;	+   F000 - FBFF   +
  65:			;	+-----------------+
  66:			;	+-----------------+
  67:			;	+    SysCommon    +
  68:			;	+   FC00 - FFFF   +
  69:			;	+   BootMonitor   +     <-- EEPROM page 0 ($C0000)
  70:			;	+   F000 - FBFF   +
  71:			;	+-----------------+
  72:			;
  73:			; ---------------------------------------------------------------------
  74:			;
  75:			; Define which assembler we are using
  76:			;
  77:			
  78:			; PASMO	EQU	1
  79:	0001          	MZMAC	EQU	1
  80:			; ZMAC	EQU	1			; ZMAC Z80 assembler, not Linux/Unix version
  81:			
  82:			; ... only one at a time can be active (1) ...
  83:			
  84:			;
  85:			; Monitor version numbers (major.minor)
  86:			;
  87:	0033          	MONMAJ		EQU	'3'
  88:	0031          	MONMIN		EQU	'1'
  89:			
  90:			;
  91:			; Buffers addresses labels
  92:			;
  93:			
  94:			; -- Global --
  95:	0003          	IOBYTE		EQU	0003H		; byte: Intel IOBYTE (CP/M 2.2 only)
  96:	0004          	CDISK		EQU	0004H		; byte: Last logged drive (CP/M 2.2 only)
  97:	0006          	BTPASIZ		EQU	0006H		; word: size of tpa + 1
  98:			;
  99:			; -- Private --
 100:	000B          	HMEMPAG		EQU	000BH		; byte: highest ram page
 101:	000C          	BBCBANK		EQU	000CH		; byte: current bank
 102:	000D          	BBCSTCK		EQU	000DH		; word: current stack
 103:					;
 104:	004F          	PRVTOP		EQU	004FH		; top of private area storage
 105:	004F          	COLBUF		EQU	PRVTOP		; byte:
 106:	004E          	DSELBF		EQU	COLBUF-1	; byte: floppy drive select status
 107:								; - bits: 0 = drive 0
 108:								; - bits: 1 = drive 1
 109:								; - bits: 2 = drive 2
 110:								; - bits: 3 = drive 3
 111:								; - bits: 4 = unused
 112:								; - bits: 5 = head select
 113:								; - bits: 6 = motor on (disabled by jumper)
 114:								; - bits: 7 = unused
 115:	004D          	KBDBYTE		EQU	DSELBF-1	; byte: store keyboard input
 116:	004C          	MIOBYTE		EQU	KBDBYTE-1	; byte:
 117:								; - bits: 0: 0 = floppy write		1 = floppy read
 118:								;         1: 0 = no ctrl on keypress	1 = ctrl on keypress
 119:								;         2: 0 = scroll			1 = no scroll
 120:								;         3: 0 = accept lowercase	1 = convert to uppercase
 121:								;         4: 0 = destr. bkspace		1 = non destr. bkspace
 122:								;         5: 0 = console out		1 = serial out
 123:								;         6: 0 = disp. all chars	1 = obscure non punct.
 124:								;         7: 0 = ctrl chr set 1		1 = ctrl chr set 2
 125:	004B          	TMPBYTE		EQU	MIOBYTE-1	; byte: transients flags
 126:								; - bits: 0: 0 = high in cursor addressing
 127:								;         1: 0 = ESC catched by ANSI driver
 128:								;         2: 0 = CSI catched by ANSI driver
 129:								;         3: 0 = Two byte code ESC seq. from serial
 130:								;         4: 0 = Plain serial i/o (disable ANSI driver)
 131:								;         5: 0 = store interrupt status (on/off)
 132:								;         6: 0 = floppy home on err	1 = no home on err
 133:								;         7: 0 = unlock LBA free addressing (unpartitioned)
 134:	004A          	CURSSHP		EQU	TMPBYTE-1	; cursor shape
 135:	0048          	CURPBUF		EQU	CURSSHP-2	; word: cursor position
 136:	0046          	FTRKBUF		EQU	CURPBUF-2	; word: track # for i/o (0 - 65535)
 137:	0045          	FDRVBUF		EQU	FTRKBUF-1	; byte: drive number for i/0 (0 - 15)
 138:	0043          	FSECBUF		EQU	FDRVBUF-2	; word: sector # for i/o (1 .. 65535)
 139:	0041          	FRDPBUF		EQU	FSECBUF-2	; word: dma address for i/o
 140:	003F          	FSEKBUF		EQU	FRDPBUF-2	; word: current track number for drive A/B
 141:	003E          	RAM3BUF		EQU	FSEKBUF-1	; byte:
 142:	003D          	RAM2BUF		EQU	RAM3BUF-1	; byte:
 143:	003C          	RAM1BUF		EQU	RAM2BUF-1	; byte:
 144:	003B          	RAM0BUF		EQU	RAM1BUF-1	; byte:
 145:	003A          	RST7SP3		EQU	003AH		; keep clear area of RST38 (RST7)
 146:	0039          	RST7SP2		EQU	0039H
 147:	0038          	RST7SP1		EQU	0038H
 148:	0030          	VDSKBUF		EQU	RST7SP1-8	; table: 8 bytes command structure buffer
 149:	002E          	APPBUF		EQU	VDSKBUF-2	; word: generic buffer
 150:	002D          	COPSYS		EQU	APPBUF-1	; Op system type for partition selection
 151:	002C          	UART0BR		EQU	COPSYS-1	; UART 0 baudrate
 152:	002B          	UART1BR		EQU	UART0BR-1	; UART 1 baudrate
 153:	002A          	CTC0TC		EQU	UART1BR-1	; CTC channel 0 time constant
 154:	0029          	CTC1TC		EQU	CTC0TC-1	; CTC channel 1 time constant
 155:	0028          	TIMRCON		EQU	CTC1TC-1	; timer buf
 156:	0027          	CNFBYTE		EQU	TIMRCON-1	; config byte
 157:								; - bits: 0: 0 = UART1 intr disabled	1 = RST8 redir UART1
 158:								;         1: 0 = unused/reserved
 159:								;         2: 0 = unused/reserved
 160:								;         3: 0 = unused/reserved
 161:								;         4: 0 = unused/reserved
 162:								;         5: 0 = unused/reserved
 163:								;         6: 0 = unused/reserved
 164:								;         7: 0 = unused/reserved
 165:	000F          	FIFOSTO		EQU	000FH		; fifo queues storage start
 166:	0008          	FIFSIZE		EQU	8		; fifo queue lenght
 167:	000B          	FIFBLOK		EQU	11		; fifo queue size
 168:	000F          	FIFOU0		EQU	FIFOSTO		; uart 0 queue (alternate console)
 169:	001A          	FIFOKB		EQU	FIFOU0+FIFBLOK	; keyboard queue
 170:	0025          	FIFOEND		EQU	FIFOKB+FIFBLOK	; fifo blocks end
 171:			;
 172:	3000          	BLDOFFS		EQU	3000H		; place for disk bootloader
 173:			
 174:			;
 175:			; Some commodity equs
 176:			;
 177:	000D          	CR		EQU	0DH		; ascii CR & LF
 178:	000A          	LF		EQU	0AH
 179:	000C          	FF		EQU	0CH		; FORM FEED (clear screen)
 180:	001B          	ESC		EQU	1BH		; ESCape
 181:	FFFF          	TRUE		EQU	-1
 182:	0000          	FALSE		EQU	0
 183:	0100          	TPA		EQU	0100H		; TPA base address (for CP/M)
 184:			
 185:			;
 186:			; Modules equs
 187:			;
 188:				; delay
 189:	00F6          	MSCNT		EQU	246
 190:				; mmu
 191:	000D          	MMUTSTPAGE	EQU	0DH		; logical page used for sizing
 192:	D000          	MMUTSTADDR	EQU	MMUTSTPAGE<<12	; logical page used for sizing
 193:			
 194:			; Conventionally all bios/monitor images start at $F000.
 195:			; Except for special cases all code is copied to ram @ $F000.
 196:			; In this case eeprom page 0 is directly mapped into logical space
 197:			; by hardware so we can initialize the system at cold boot.
 198:			;
 199:			; We assume to initialize MMU as follow:
 200:			;
 201:			; +--------+
 202:			; |  F000  |	-> $C0000  eeprom page 0
 203:			; +--------+
 204:			; +--------+
 205:			; |  EFFF  |
 206:			; +--------+
 207:			;     ...       -> $00000 to $0EFFF ram
 208:			; +--------+
 209:			; |  0000  |
 210:			; +--------+
 211:			;
 212:			
 213:			
 214:			; include	modules/hwequs.inc.asm
 215:			; Hardware equates
 216:			; ---------------------------------------------------------------------
 217:			
 218:			; ---------------------------------------------------------------------
 219:			; LX529 VIDEO BOARD:
 220:			; ---------------------------------------------------------------------
 221:	0080          	CRTBASE		EQU	80H
 222:				; RAM0 for ascii chars & semi6. Combined with RAM1 and RAM2 for graphics
 223:	0080          	CRTRAM0DAT	EQU	CRTBASE		; RAM0 access: PIO0 port A data register
 224:	0082          	CRTRAM0CNT	EQU	CRTBASE+2	; RAM0 access: PIO0 port A control register
 225:				; Printer port
 226:	0081          	CRTPRNTDAT	EQU	CRTBASE+1	; PRINTER (output): PIO0 port B data register
 227:	0083          	CRTPRNTCNT	EQU	CRTBASE+3	; PRINTER (output): PIO0 port B control register
 228:								; STROBE is generated by hardware
 229:				; RAM1 for graphics. (pixel index by RAM0+RAM1+RAM2)
 230:	0084          	CRTRAM1DAT	EQU	CRTBASE+4	; RAM1 access: PIO1 port A data register
 231:	0086          	CRTRAM1CNT	EQU	CRTBASE+6	; RAM1 access: PIO1 port A control register
 232:				; Keyboard port (negated). Bit 7 is for strobe
 233:	0085          	CRTKEYBDAT	EQU	CRTBASE+5	; KEYBOARD (input): PIO1 port B data register
 234:	0087          	CRTKEYBCNT	EQU	CRTBASE+7	; KEYBOARD (input): PIO1 port B control register
 235:	0007          	KEYBSTRBBIT	EQU	7		; Strobe bit
 236:				; RAM2 for graphics. (pixel index by RAM0+RAM1+RAM2)
 237:	0088          	CRTRAM2DAT	EQU	CRTBASE+8	; RAM2 access: PIO2 port A data register
 238:	008A          	CRTRAM2CNT	EQU	CRTBASE+10	; RAM2 access: PIO2 port A control register
 239:				; Service/User port
 240:	0089          	CRTSERVDAT	EQU	CRTBASE+9	; Service (i/o): PIO2 port B data register
 241:	008B          	CRTSERVCNT	EQU	CRTBASE+11	; Service (i/o): PIO2 port B control register
 242:	0000          	PRNTBUSYBIT	EQU	0		; Printer BUSY bit		(in)	1
 243:	0001          	CRTWIDTHBIT	EQU	1		; Set 40/80 chars per line	(out)	0
 244:	0002          	PIO2BIT2	EQU	2		; user 1 (input)		(in)	1
 245:	0003          	PIO2BIT3	EQU	3		; user 2 (input)		(in)	1
 246:	0004          	PIO2BIT4	EQU	4		; user 3 (input)		(in)	1
 247:	0005          	CLKSCLK		EQU	5		; DS1320 clock line		(out)	0
 248:	0006          	CLKIO		EQU	6		; DS1320 I/O line		(i/o)	1
 249:	0007          	CLKRST		EQU	7		; DS1320 RST line		(out)	0
 250:				; normal set for PIO2 (msb) 01011101 (lsb) that is hex $5D
 251:								; Other bits available to user
 252:				; RAM3 control chars/graphics attributes
 253:	008E          	CRTRAM3PORT	EQU	CRTBASE+14	; RAM3 port
 254:	0000          	CRTBLINKBIT	EQU	0		; Blink
 255:	0001          	CRTREVRSBIT	EQU	1		; Reverse
 256:	0002          	CRTUNDERBIT	EQU	2		; Underline
 257:	0003          	CRTHILITBIT	EQU	3		; Highlight
 258:	0004          	CRTMODEBIT	EQU	4		; ASCII/GRAPHIC mode
 259:				; Beeper port
 260:	008F          	CRTBEEPPORT	EQU	CRTBASE+15	; Beeper port
 261:				; 6545 CRT controller ports
 262:	008C          	CRT6545ADST	EQU	CRTBASE+12	; Address & Status register
 263:	008D          	CRT6545DATA	EQU	CRTBASE+13	; Data register
 264:				; Cursor modes
 265:	0040          	BLISLOWBLOK	EQU	40H		; Blink, slow, block
 266:	004A          	BLISLOWLINE	EQU	4AH		; Blink, slow, line
 267:	0060          	BLIFASTBLOK	EQU	60H		; Blink, fast, block
 268:	006A          	BLIFASTLINE	EQU	6AH		; Blink, fast, line
 269:	0020          	CURSOROFF	EQU	20H		; Off
 270:	0000          	FIXBLOCK	EQU	00H		; Fixed, block
 271:	000A          	CURSORON	EQU	0AH		; On
 272:			
 273:			; ---------------------------------------------------------------------
 274:			; LX390 FDC CONTROLLER:
 275:			; ---------------------------------------------------------------------
 276:	00D0          	FDCBASE		EQU	0D0H
 277:	00D0          	FDCCMDSTATR	EQU	FDCBASE		; Command and status register
 278:	00D1          	FDCTRAKREG	EQU	FDCBASE+1	; Track register
 279:	00D2          	FDCSECTREG	EQU	FDCBASE+2	; Sector register
 280:	00D7          	FDCDATAREG	EQU	FDCBASE+7	; Data register *** Verificare che sia $d7
 281:	00D6          	FDCDRVRCNT	EQU	FDCBASE+6	; Driver select/control register
 282:			;
 283:	0007          	FDCRESTC	EQU	007H		; 1771 restore (seek to trak 0) cmd
 284:	0017          	FDCSEEKC	EQU	017H		; seek cmd
 285:	0088          	FDCREADC	EQU	088H		; read cmd
 286:	00A8          	FDCWRITC	EQU	0A8H		; write cmd
 287:			;
 288:			; ---------------------------------------------------------------------
 289:			; LX389: PARALLEL INTERFACE
 290:			; ---------------------------------------------------------------------
 291:			; alternate printer port
 292:	0003          	ALTPRNPRT	EQU	03H
 293:			;
 294:			; parallel port PC link
 295:	0003          	PPDATAP		EQU	03H		; Data port
 296:	0002          	PPCNTRP		EQU	02H		; Control port
 297:	0000          	PPSTROB		EQU	0		; Strobe bit
 298:	0001          	PPAKSTB		EQU	1		; Acknowledge/Stop bit
 299:			;
 300:	0000          	PPDINI		EQU	00H		; 00000000 Dnl Init byte
 301:	0004          	PPDRDY		EQU	04H		; 00000100 Dnl Ready
 302:	0006          	PPDSTP		EQU	06H		; 00000110 Dnl Stop
 303:	0002          	PPDOKG		EQU	02H		; 00000010 Dnl Ok Go
 304:	0001          	PPUINI		EQU	01H		; 00000001 Upl Init byte
 305:	0005          	PPURDY		EQU	05H		; 00000101 Upl Ready
 306:	0007          	PPUACK		EQU	07H		; 00000111 Upl Acknowledge
 307:	0003          	PPUOKG		EQU	03H		; 00000011 Upl Ok Go
 308:			;
 309:			; virtual disks (PC-linked over parallel port)
 310:	0000          	VDRDSEC		EQU	0		; read sector command
 311:	0001          	VDWRSEC		EQU	1		; write sector command
 312:	000A          	VDBUFSZ		EQU	10		; 9 bytes block
 313:			; ---------------------------------------------------------------------
 314:			; MULTF-BOARD: MMU, IDE, SERIAL, CTC
 315:			; ---------------------------------------------------------------------
 316:			; -- I/O --
 317:	0020          	MMUPORT		EQU	20H
 318:	0021          	MENAPRT		EQU	21H
 319:			; -- Map --
 320:	00C0          	EEPAGE0		EQU	0C0H		; page 0 of eeprom
 321:	F000          	EEPSTA		EQU	0F000H		; eeprom location after MMU reset
 322:	00EF          	MMTPAPAG	EQU	(EEPSTA>>8)-1	; TPA top page (256 bytes pages)
 323:	00FF          	IMTPAG		EQU	0FFH		; eeprom page with image table
 324:	0400          	IMTSIZ		EQU	1024		; size
 325:	E000          	RAMTBL		EQU	0E000H		; ram table location
 326:	0030          	TBLBLK		EQU	48		; block size
 327:	0014          	MAXBLK		EQU	20		; max images
 328:	03C0          	RTBSIZ		EQU	TBLBLK * MAXBLK	; real table size
 329:								; A table block is:
 330:	0008          	TNAMELEN	EQU	8		;	name		: 8 bytes
 331:	0002          	TPAGELEN	EQU	2		;	page offset	: 2 bytes
 332:	0004          	TIADDRLEN	EQU	4		;	image address	: 4 bytes
 333:	0004          	TSIZELEN	EQU	4		;	image size	: 4 bytes
 334:	0014          	TDESCLEN	EQU	20		;	description	: 20 bytes
 335:			; -- IDE --
 336:	00E0          	IDEPORTA	EQU	0E0H		;lower 8 bits of IDE interface
 337:	00E1          	IDEPORTB	EQU	0E1H		;upper 8 bits of IDE interface
 338:	00E2          	IDEPORTC	EQU	0E2H		;control lines for IDE interface
 339:	00E3          	IDEPORTCTRL	EQU	0E3H		;8255 configuration port
 340:			
 341:	0092          	READCFG8255	EQU	10010010b	;Set 8255 IDEportC to output, IDEportA/B input
 342:	0080          	WRITECFG8255	EQU	10000000b	;Set all three 8255 ports to output mode
 343:			;IDE control lines for use with IDEportC.
 344:	0001          	IDEA0LINE	EQU	01H		;direct from 8255 to IDE interface
 345:	0002          	IDEA1LINE	EQU	02H		;direct from 8255 to IDE interface
 346:	0004          	IDEA2LINE	EQU	04H		;direct from 8255 to IDE interface
 347:	0008          	IDECS0LINE	EQU	08H		;inverter between 8255 and IDE interface
 348:	0010          	IDECS1LINE	EQU	10H		;inverter between 8255 and IDE interface
 349:	0020          	IDEWRLINE	EQU	20H		;inverter between 8255 and IDE interface
 350:	0040          	IDERDLINE	EQU	40H		;inverter between 8255 and IDE interface
 351:	0080          	IDERSTLINE	EQU	80H		;inverter between 8255 and IDE interface
 352:			;Symbolic constants for the IDE Drive registers
 353:	0008          	REGDATA		EQU	IDECS0LINE
 354:	0009          	REGERR		EQU	IDECS0LINE + IDEA0LINE
 355:	000A          	REGSECCNT	EQU	IDECS0LINE + IDEA1LINE
 356:	000B          	REGSECTOR	EQU	IDECS0LINE + IDEA1LINE + IDEA0LINE
 357:	000C          	REGCYLLSB	EQU	IDECS0LINE + IDEA2LINE
 358:	000D          	REGCYLMSB	EQU	IDECS0LINE + IDEA2LINE + IDEA0LINE
 359:	000E          	REGSHD		EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE		;(0EH)
 360:	000F          	REGCOMMAND	EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE + IDEA0LINE	;(0FH)
 361:	000F          	REGSTATUS	EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE + IDEA0LINE
 362:	0016          	REGCONTROL	EQU	IDECS1LINE + IDEA2LINE + IDEA1LINE
 363:	0016          	REGASTATUS	EQU	IDECS1LINE + IDEA2LINE + IDEA1LINE
 364:			;IDE Command Constants.
 365:	0010          	CMDRECAL	EQU	010H
 366:	0020          	CMDREAD		EQU	020H
 367:	0030          	CMDWRITE	EQU	030H
 368:	0091          	CMDINIT		EQU	091H
 369:	00EC          	CMDID		EQU	0ECH
 370:	00E0          	CMDSPINDOWN	EQU	0E0H
 371:	00E1          	CMDSPINUP	EQU	0E1H
 372:			; -- 16C550 UARTS --
 373:	00C0          	UART0BASE	EQU	0C0H		; Port base address for 0
 374:	00C8          	UART1BASE	EQU	0C8H		; Port base address for 1
 375:	00C0          	UART0		EQU	UART0BASE	; Select UART 0
 376:	00C8          	UART1		EQU	UART1BASE	; Select UART 1
 377:	0000          	R0RXTX		EQU	0		; (r/w) RXD/TXD Transmit/Receive Buffer
 378:	0000          	R0BRDL		EQU	0		; (r/w) DLL  if bit 7 of LCR is set: Baud Rate Divisor LSB
 379:	0001          	R1IER		EQU	1		; (r/w) IER - Interrupt Enable Register
 380:	0001          	R1BRDM		EQU	1		; (r/w) DLM if bit 7 of LCR is set: Baud Rate Divisor MSB
 381:	0002          	R2IIR		EQU	2		; (r)   IIR - Interrupt Identification Register
 382:	0002          	R2FCR		EQU	2		; (w)   FCR - FIFO Control Register
 383:	0003          	R3LCR		EQU	3		; (r/w) LCR - Line Control Register
 384:	0004          	R4MCR		EQU	4		; (r/w) MCR - Modem Control Register
 385:	0005          	R5LSR		EQU	5		; (r)   LSR - Line Status Register
 386:	0006          	R6MSR		EQU	6		; (r)   MSR - Modem Status Register
 387:	0007          	R7SPR		EQU	7		; (r/w) SPR - Scratch Pad Register
 388:				; speeds:
 389:	0060          	UART1200	EQU	96		; = 1,843,200 / ( 16 x 1200 )
 390:	0030          	UART2400	EQU	48		; = 1,843,200 / ( 16 x 2400 )
 391:	0018          	UART4800	EQU	24		; = 1,843,200 / ( 16 x 4800 )
 392:	000C          	UART9600	EQU	12		; = 1,843,200 / ( 16 x 9600 )
 393:	0006          	UART19K2	EQU	06		; = 1,843,200 / ( 16 x 19,200 )
 394:	0003          	UART38K4	EQU	03		; = 1,843,200 / ( 16 x 38,400 )
 395:	0002          	UART57K6	EQU	02		; = 1,843,200 / ( 16 x 57,600 )
 396:	0001          	UART115K2	EQU	01		; = 1,843,200 / ( 16 x 115,200 )
 397:			
 398:	0006          	U0DEFSPEED	EQU	UART19K2	; UART 0 default speed
 399:	000C          	U1DEFSPEED	EQU	UART9600	; UART 1 default speed
 400:			; -- Z80CTC --
 401:	00E8          	CTCBASE		EQU	0E8H
 402:	00E8          	CTCCHAN0	EQU	CTCBASE+0	; Channel 1 - Free
 403:	00E9          	CTCCHAN1	EQU	CTCBASE+1	; Channel 2 - System Timer
 404:	00EA          	CTCCHAN2	EQU	CTCBASE+2	; Channel 3 - UART 1 Interrupt
 405:	00EB          	CTCCHAN3	EQU	CTCBASE+3	; Channel 4 - UART 0 Interrupt
 406:	0020          	CTC0TCHI	EQU	32		; hi speed chan. 0 tc: 4Mhz / 256 / 32 = 488.28 Hz
 407:	0005          	CTC1TC100HZ	EQU	5		; lo speed chan. 1 tc: 488.28 Hz / 5 = ~ 97.6 Hz
 408:	000A          	CTC1TC50HZ	EQU	10		; lo speed chan. 1 tc: 488.28 Hz / 10 = ~ 48.8 Hz
 409:	0013          	CTC1TC25HZ	EQU	19		; lo speed chan. 1 tc: 488.28 Hz / 19 = ~ 25 Hz
 410:	0030          	CTC1TC10HZ	EQU	48		; lo speed chan. 1 tc: 488.28 Hz / 48 = ~ 10 Hz
 411:	00F4          	CTC1TC2HZ	EQU	244		; lo speed chan. 1 tc: 488.28 Hz / 244 = ~ 2 Hz
 412:	0013          	SYSHERTZ	EQU	CTC1TC25HZ	; System timer hertz
 413:			; -- EEPROM --
 414:	0001          	EEP29EE		EQU	01H		; type 29EE020
 415:	0002          	EEP29XE		EQU	02H		; type 29LE020 or 29VE020
 416:	0004          	EEP29C		EQU	04H		; type 29C020
 417:	0008          	EEPUNSUPP	EQU	08H		; unsupported
 418:	0010          	EEPROGLOCK	EQU	10H		; programming locked
 419:				;
 420:	0080          	EERINEPROM	EQU	80H		; tried to program eeprom running inside it
 421:			
 422:			;
 423:			; MMU organization
 424:			;
 425:			; MMU manage 16 4kb pages in Z80 address space (logical)
 426:			; It can assign any of 256 4k pages (physical) from its
 427:			; 1Mb address space.
 428:			;
 429:			; To load phisycal page XXh to logical page (in CPU address space) Y,
 430:			; you should consider that MMU is at a fixed address 20h and that
 431:			; logical 4K page Y is derived in the MMU by the usage of A12,A13,A14
 432:			; and A15 address lines during an I/O instruction.
 433:			;
 434:			; So to address phys. ram page 00h at the top of logical space page Fh
 435:			; you need to have Fh * on top address lines * because this address
 436:			; is the index to MMU page.
 437:			;
 438:			; So:
 439:			;
 440:			; 	LD	A,00h		<--- phis. page number	00xxxh (4k page)
 441:			; 	LD	B,F0h		<--- log. page number 	 Fxxxh (cpu page)
 442:			; 	LD	C,20h		<--- MMU I/O address
 443:			; 	OUT	(C),A
 444:			; 	RET
 445:			;
 446:			; The OUT instruction place:
 447:			; A on data lines D0-D7
 448:			; Fh (from B register) on A12-A15
 449:			; on port 20h (C register)
 450:			;
 451:			;
 452:			; Memory is organized as follow:
 453:			;
 454:			;	Slot 1	-> RAM	  -> 512k from 00000h to 7ffffh (mandatory)
 455:			;	Slot 2	-> RAM	  -> 128k from 80000h to 9ffffh (option 1)
 456:			;	Slot 2	-> RAM    -> 256k from 80000h to bffffh (option 2)
 457:			;	Slot 3	-> EEPROM -> 256k from c0000h to fffffh (mandatory)
 458:			;
 459:			
 460:			
 461:			;-------------------------------------
 462:			; Production / Testing
 463:			
 464:	0000          	BBDEBUG	EQU	FALSE
 465:			
 466:			
 467:			;-------------------------------------
 468:			; Segments, pages locations
 469:			
 470:	0000          	IF	BBDEBUG
 476:			ELSE
 477:			
 478:	00C0          	BBIMGP	EQU	EEPAGE0		; Image location
 479:	000E          	BBAPPP	EQU	0EH
 480:	000F          	BBPAG	EQU	0FH		; Base page location
 481:			
 482:			ENDIF
 483:			
 484:	000D          	TRNPAG	EQU	0DH		; Page used for transient MMU ops
 485:	F000          	BBBASE	EQU	BBPAG << 12	; non resident base address
 486:	FC00          	BBCOMN	EQU	BBBASE + 0C00H	; resident portion address
 487:			
 488:	F000          	SYSBASE EQU	BBBASE		; use this to have 60K TPA
 489:			; SYSBASE EQU	BBCOMN		; use this to have 63K TPA
 490:			
 491:			;-------------------------------------
**** lbatst.asm ****
   7:			
   8:			
   9:			
  10:	FFFF          	TRUE		EQU	-1	; DEFINE LOGICAL VALUES:
  11:	0000          	FALSE		EQU	NOT TRUE
  12:			
  13:			
  14:	0007          	BELL		EQU	07H
  15:	000D          	CR		EQU	0DH
  16:	000A          	LF		EQU	0AH
  17:	0005          	HRETRIES	EQU	5
  18:			
  19:			
  20:			
  21:	0100          		org	$100
  22:			
  23:	0100          	BEGIN:
  24:			
  25:	0100  00      		NOP
  26:	0101  00      		NOP
  27:			
  28:	0102  3E02    		ld	a,'C'-'A'
  29:	0104  320400  		ld 	(CDISK),a
  30:			
  31:	0107  00      		NOP
  32:	0108  00      		NOP
  33:			
  34:			
  35:			
  36:	0109  CDE703  		CALL	HDINIT
  37:	010C  CDBF04  		CALL	GETPTABLE
  38:			; 	CALL	HDCPM
  39:			
  40:	010F  0E02    		ld	c,'C'-'A'
  41:	0111  CDBDFC  		call	BBDSKSEL
  42:	0114  210000  		LD	HL,0
  43:	0117  0E00    		LD	C,0
  44:	0119  3E33    		ld	a,'3'
  45:	011B  322D00  		ld	(COPSYS),a
  46:			
  47:	011E          	CALR:
  48:	011E  3A4003  		LD	A,(AUTO)
  49:	0121  B7      		OR	A
  50:	0122  280D    		JR	Z,WKEY
  51:	0124  C5      		PUSH	BC
  52:	0125  E5      		PUSH	HL
  53:	0126  CDAAFD  		CALL	BBCONST
  54:	0129  2004    		JR	NZ,NOKEY
  55:	012B  AF      		XOR	A
  56:	012C  324003  		LD	(AUTO),A
  57:	012F  E1      	NOKEY:	POP	HL
  58:	0130  C1      		POP	BC
  59:			
  60:			
  61:	0131  C5      	WKEY:	PUSH	BC
  62:	0132  E5      		PUSH	HL
  63:	0133  CD94FD  		CALL	BBCONIN
  64:	0136  E1      		POP	HL
  65:	0137  C1      		POP	BC
  66:			
  67:	0138  FE7F    		CP	$7F
  68:	013A  CA00F0  		JP	Z,$F000
  69:	013D  FE2B    		CP	'+'
  70:	013F  2005    		JR	NZ,DODEC
  71:	0141  110001  		LD	DE,$100
  72:	0144  19      		ADD	HL,DE
  73:	0145  0D      		DEC	C
  74:	0146  FE2D    	DODEC:	CP	'-'
  75:	0148  2007    		JR	NZ,BACK
  76:	014A  110001  		LD	DE,$100
  77:	014D  B7      		OR	A
  78:	014E  ED52    		SBC	HL,DE
  79:	0150  0D      		DEC	C
  80:	0151  FE2A    	BACK:	CP	'*'
  81:	0153  2002    		JR	NZ,HALF
  82:	0155  0D      		DEC	C
  83:	0156  0D      		DEC	C
  84:	0157  FE2F    	HALF:	CP	'/'
  85:	0159  2007    		JR	NZ,SAUT
  86:	015B  111000  		LD	DE,$10
  87:	015E  B7      		OR	A
  88:	015F  ED52    		SBC	HL,DE
  89:	0161  0D      		DEC	C
  90:	0162  FE30    	SAUT:	CP	'0'
  91:	0164  2005    		JR	NZ,CONT
  92:	0166  3EFF    		LD	A,$FF
  93:	0168  324003  		LD	(AUTO),A
  94:			
  95:	016B          	CONT:
  96:	016B  E5      		PUSH	HL
  97:	016C  C5      		PUSH	BC
  98:	016D  CD3702  		CALL	HL2ASCB
  99:	0170  C1      		POP	BC
 100:	0171  E1      		POP	HL
 101:			
 102:	0172  E5      		PUSH	HL
 103:	0173  C5      		PUSH	BC
 104:	0174  79      		LD	A,C
 105:	0175  CD1E02  		CALL	H2AJ1
 106:	0178  CD3A02  		CALL	SPACER
 107:	017B  C1      		POP	BC
 108:	017C  E1      		POP	HL
 109:			
 110:	017D  C5      		push	bc
 111:	017E  4D      		ld	c,l
 112:	017F  44      		ld	b,h
 113:	0180  CDABFC  		call	BBTRKSET
 114:	0183  01E506  		ld	bc,DMASP
 115:	0186  CDB7FC  		call	BBDMASET
 116:	0189  C1      		pop	bc
 117:	018A  0600    		ld	b,0
 118:	018C  CDB1FC  		call	BBSECSET
 119:			
 120:			
 121:	018F  E5      		PUSH	HL
 122:	0190  C5      		PUSH	BC
 123:			; 	CALL	BBHDRD
 124:	0191  CD4205  		CALL	READSECTOR
 125:	0194  C20000  		jp	nz,0
 126:	0197  CD8602  		call	HEXDUMP
 127:	019A  CD6402  		call	zcrlf
 128:	019D  C1      		POP	BC
 129:	019E  E1      		POP	HL
 130:	019F  79      		LD	A,C
 131:	01A0  3C      		INC	A
 132:	01A1  FEFF    		CP	255
 133:	01A3  4F      		LD	C,A
 134:	01A4  DA1E01  		JP	C,CALR
 135:	01A7  0E00    		LD	C,0
 136:	01A9  23      		INC	HL
 137:	01AA  C31E01  		JP	CALR
 138:			
 139:	01AD          	HDCPM:
 140:	01AD  3A0400  		LD	A,(CDISK)		; get logged drive
 141:	01B0  4F      		LD	C,A
 142:	01B1  CDE006  		CALL	DSKSEL
 143:	01B4  010030  		LD	BC,BLDOFFS		; read in loader @ BLDOFFS
 144:	01B7  CDDB06  		CALL	DMASET
 145:	01BA  010000  		LD	BC,$00
 146:	01BD  CDD106  		CALL	TRKSET
 147:	01C0  010100  		LD	BC,$01
 148:	01C3  CDD606  		CALL	SECSET
 149:	01C6  CD4205  		CALL	READSECTOR
 150:	01C9  1600    		LD	D,0			; error type (no volume)
 151:	01CB  C0      		RET	NZ
 152:	01CC  ED5BDD01		LD	DE,(HDBSIG)		; check for a valid bootloader
 153:	01D0  2A0030  		LD	HL,(BLDOFFS)
 154:	01D3  B7      		OR	A
 155:	01D4  ED52    		SBC	HL,DE
 156:	01D6  1601    		LD	D,1			; error type (no bootloader)
 157:	01D8  C0      		RET	NZ			; no bootlader found
 158:	01D9  C30230  		JP	BLDOFFS+2		; jump to the loader if all ok
 159:	01DC  C9      		RET
 160:			
 161:	01DD  55AA    	HDBSIG:	DEFB	$55,$AA
 162:			
 163:			;
 164:			
 165:	01DF  F5      	PHEX:	PUSH	AF
 166:	01E0  C5      		PUSH	BC
 167:	01E1  F5      		PUSH	AF
 168:	01E2  0F      		RRCA
 169:	01E3  0F      		RRCA
 170:	01E4  0F      		RRCA
 171:	01E5  0F      		RRCA
 172:	01E6  CDF001  		CALL	ZCONV
 173:	01E9  F1      		POP	AF
 174:	01EA  CDF001  		CALL	ZCONV
 175:	01ED  C1      		POP	BC
 176:	01EE  F1      		POP	AF
 177:	01EF  C9      		RET
 178:			;
 179:	01F0  E60F    	ZCONV:	AND	0FH		;HEX to ASCII and print it
 180:	01F2  C690    		ADD	A,90H
 181:	01F4  27      		DAA
 182:	01F5  CE40    		ADC	A,40H
 183:	01F7  27      		DAA
 184:	01F8  4F      		LD	C,A
 185:	01F9  CDFD01  		CALL	ZCO
 186:	01FC  C9      		RET
 187:			
 188:			
 189:			
 190:	01FD  F5      	ZCO:	PUSH	AF	;Write character that is in [C]
 191:	01FE  CD9FFD  		CALL	BBCONOUT
 192:	0201  F1      		POP	AF
 193:	0202  C9      		RET
 194:			
 195:			
 196:			
 197:			; Print a string in [DE] up to '$'
 198:	0203          	PSTRING:
 199:	0203  C5      		PUSH	BC
 200:	0204  D5      		PUSH	DE
 201:	0205  E5      		PUSH	HL
 202:	0206  EB      		EX	DE,HL
 203:	0207  7E      	PSTRX:	LD	A,(HL)
 204:	0208  FE24    		CP	'$'
 205:	020A  CA1502  		JP	Z,DONEP
 206:	020D  4F      		LD	C,A
 207:	020E  CDFD01  		CALL	ZCO
 208:	0211  23      		INC	HL
 209:	0212  C30702  		JP	PSTRX
 210:	0215  E1      	DONEP:	POP	HL
 211:	0216  D1      		POP	DE
 212:	0217  C1      		POP	BC
 213:	0218  C9      		RET
 214:			
 215:			
 216:			
 217:	0219          	HL2ASC:
 218:			
 219:	0219  7C      	H2AEN1:	LD	A,H
 220:	021A  CD1E02  		CALL	H2AJ1
 221:	021D  7D      		LD	A,L
 222:	021E  F5      	H2AJ1:	PUSH	AF
 223:	021F  0F      		RRCA
 224:	0220  0F      		RRCA
 225:	0221  0F      		RRCA
 226:	0222  0F      		RRCA
 227:	0223  CD2702  		CALL	H2AJ2
 228:	0226  F1      		POP	AF
 229:	0227  CD4002  	H2AJ2:	CALL	NIB2ASC
 230:	022A  CD9FFD  		CALL	BBCONOUT
 231:	022D  C9      		RET
 232:			
 233:	022E  CD1E02  	H2AJ3:	CALL	H2AJ1           ; entry point to display HEX and a "-"
 234:	0231          	MPROMPT:
 235:	0231  0E2D    		LD	C,$2D
 236:	0233  CD9FFD  		CALL	BBCONOUT
 237:	0236  C9      		RET
 238:			
 239:			
 240:			
 241:			;;
 242:			;; HL2ASCB - convert & display HL 2 ascii leave a blank after
 243:	0237          	HL2ASCB:
 244:	0237  CD1902  		CALL	HL2ASC           ; was 00FA63 CD 46 FA
 245:	023A  0E20    	SPACER:	LD	C,$20
 246:	023C  CD9FFD  		CALL	BBCONOUT
 247:	023F  C9      		RET
 248:			
 249:	0240          	NIB2ASC:
 250:	0240  E60F    		AND	$0F             ; was 00FDE0 E6 0F
 251:	0242  C690    		ADD	A,$90
 252:	0244  27      		DAA
 253:	0245  CE40    		ADC	A,$40
 254:	0247  27      		DAA
 255:	0248  4F      		LD	C,A
 256:	0249  C9      		RET
 257:			
 258:	024A          	OUTSTR:
 259:	024A  C5      		PUSH	BC
 260:	024B  4E      	OSLP0:	LD	C,(HL)
 261:	024C  41      		LD	B,C
 262:	024D  CBB9    		RES	7,C
 263:	024F  CD9FFD  		CALL	BBCONOUT
 264:	0252  23      		INC	HL
 265:	0253  78      		LD	A,B
 266:	0254  07      		RLCA
 267:	0255  30F4    		JR	NC,OSLP0
 268:	0257  C1      		POP	BC
 269:	0258  C9      		RET
 270:			
 271:			
 272:			;; OUTCRLF - CR/LF through OUTSTR
 273:			;
 274:			
 275:	0259          	OUTCRLF:
 276:	0259  E5      		PUSH	HL			; was 00FAB0 E5
 277:	025A  216202  	OCRLF1:	LD	HL,CRLFTAB
 278:	025D  CD4A02  		CALL	OUTSTR
 279:	0260  E1      		POP	HL
 280:	0261  C9      		RET
 281:			
 282:	0262          	CRLFTAB:
 283:	0262  0D8A    		DB	$0D,$8A
 284:			
 285:	0264          	ZCRLF:
 286:	0264  F5      		PUSH	AF
 287:	0265  0E0D    		LD	C,CR
 288:	0267  CDFD01  		CALL	ZCO
 289:	026A  0E0A    		LD	C,LF
 290:	026C  CDFD01  		CALL	ZCO
 291:	026F  F1      		POP	AF
 292:	0270  C9      		RET
 293:			
 294:	0271  F5      	ZBITS:	PUSH	AF
 295:	0272  C5      		PUSH	BC
 296:	0273  D5      		PUSH	DE
 297:	0274  5F      		LD	E,A
 298:	0275  0608    		LD	B,8
 299:	0277  CB23    	BQ2:	SLA	E		;Z80 Op code for SLA A,E
 300:	0279  3E18    		LD	A,18H
 301:	027B  8F      		ADC	A,A
 302:	027C  4F      		LD	C,A
 303:	027D  CDFD01  		CALL	ZCO
 304:	0280  10F5    		DJNZ	BQ2
 305:	0282  D1      		POP	DE
 306:	0283  C1      		POP	BC
 307:	0284  F1      		POP	AF
 308:	0285  C9      		RET
 309:			
 310:	0286          	HEXDUMP:			;print a hexdump of the data in the 512 byte buffer (@DMA)
 311:	0286  F5      		PUSH	AF
 312:	0287  C5      		PUSH	BC
 313:	0288  D5      		PUSH	DE
 314:	0289  E5      		PUSH	HL
 315:			
 316:	028A  21E506  		LD	HL,DMASP
 317:	028D  E5      		PUSH	HL
 318:	028E  110700  		LD	DE,7
 319:	0291  19      		ADD	HL,DE
 320:	0292  5D      		LD	E,L
 321:	0293  54      		LD	D,H
 322:	0294  E1      		POP	HL
 323:	0295  CD9D02  		CALL	MEMDUMP
 324:			
 325:	0298  E1      		POP	HL
 326:	0299  D1      		POP	DE
 327:	029A  C1      		POP	BC
 328:	029B  F1      		POP	AF
 329:	029C  C9      		RET
 330:			
 331:	029D          	MEMDUMP:
 332:	029D  D9      		EXX
 333:	029E  06FF    		LD	B,255	; row counter, for the sake of simplicity
 334:	02A0  D9      		EXX
 335:	02A1  224103  		LD	(DMASAVE),HL
 336:	02A4          	MDP6:
 337:	02A4  E5      		PUSH	HL
 338:	02A5  2A4103  		LD	HL,(DMASAVE)
 339:	02A8  4D      		LD	C,L
 340:	02A9  44      		LD	B,H
 341:	02AA  E1      		POP	HL
 342:	02AB  E5      		PUSH	HL
 343:	02AC  ED42    		SBC	HL,BC
 344:			; 	CALL	HL2ASCB
 345:	02AE  CD3A02  		CALL	SPACER
 346:	02B1  E1      		POP	HL
 347:	02B2  7D      		LD	A,L
 348:			; 	CALL	DMPALIB
 349:	02B3  E5      		PUSH	HL
 350:	02B4  7E      	MDP2:	LD	A,(HL)
 351:	02B5  CD1E02  		CALL	H2AJ1
 352:	02B8  CD2A03  		CALL	CHKEOR
 353:	02BB  3823    		JR	C,MDP1
 354:	02BD  CD3A02  		CALL	SPACER
 355:	02C0  7D      		LD	A,L
 356:	02C1  E60F    		AND	$0F
 357:	02C3  20EF    		JR	NZ,MDP2
 358:	02C5  E1      	MDP7:	POP	HL
 359:	02C6  7D      		LD	A,L
 360:	02C7  E60F    		AND	$0F
 361:			; 	CALL	DMPALIA
 362:	02C9  7E      	MDP5:	LD	A,(HL)
 363:	02CA  4F      		LD	C,A
 364:	02CB  FE20    		CP	$20
 365:	02CD  3802    		JR	C,MDP3
 366:	02CF  1802    		JR	MDP4
 367:	02D1  0E2E    	MDP3:	LD	C,$2E
 368:	02D3  CDFD01  	MDP4:	CALL	ZCO
 369:	02D6  CDE802  		CALL	CHKBRK
 370:	02D9  7D      		LD	A,L
 371:	02DA  E60F    		AND	$0F
 372:	02DC  20EB    		JR	NZ,MDP5
 373:	02DE  18C4    		JR	MDP6
 374:	02E0  93      	MDP1:	SUB	E
 375:			; 	CALL	DMPALIB
 376:	02E1  CD3A02  		call	spacer
 377:	02E4  18DF    		JR	MDP7
 378:			
 379:			;;
 380:	02E6  D1      	CBKEND:	POP	DE
 381:	02E7  C9      		RET
 382:			
 383:	02E8          	CHKBRK:
 384:	02E8  CD2A03  		CALL	CHKEOR			; was 00F949 CD 3C F9
 385:	02EB  38F9    		JR	C,CBKEND
 386:	02ED  CD3403  		CALL	ZCSTS
 387:	02F0  B7      		OR	A
 388:	02F1  C8      		RET	Z
 389:	02F2  CDF902  		CALL	COIUPC
 390:	02F5  FE13    		CP	$13
 391:	02F7  20ED    		JR	NZ,CBKEND
 392:			; 	JP	COIUPC
 393:			;;
 394:			;;
 395:			;; COIUPC- convert reg A uppercase
 396:	02F9          	COIUPC:
 397:	02F9  CD2003  		CALL	ZCI
 398:	02FC  FE60    		CP	$60
 399:	02FE  FA0803  		JP	M,COIRE
 400:	0301  FE7B    		CP	$7B
 401:	0303  F20803  		JP	P,COIRE
 402:	0306  CBAF    		RES	5,A
 403:	0308  C9      	COIRE:	RET
 404:			
 405:			;;
 406:	0309          	WPAUSE:
 407:	0309  114403  		LD	DE,WPAUSEMSG
 408:	030C  CD0302  		CALL	PSTRING
 409:	030F  CD2003  		CALL	ZCI
 410:	0312  C9      		RET
 411:			;;
 412:			;; DMPALIB - beginning align (spacing) for a memdump
 413:	0313          	DMPALIB:
 414:	0313  E60F    		AND	$0F
 415:	0315  47      		LD	B,A
 416:	0316  87      		ADD	A,A
 417:	0317  80      		ADD	A,B
 418:			;;
 419:			;; DMPALIB - ascii align (spacing) for a memdump
 420:	0318          	DMPALIA:
 421:	0318  47      		LD	B,A
 422:	0319  04      		INC	B
 423:	031A  CD3A02  	ALIBN:	CALL	SPACER
 424:	031D  10FB    		DJNZ	ALIBN
 425:	031F  C9      		RET
 426:			
 427:	0320          	ZCI:	;Return keyboard character in [A]
 428:	0320  C5      		PUSH	BC
 429:	0321  D5      		PUSH	DE
 430:	0322  E5      		PUSH	HL
 431:	0323  CD94FD  		CALL	BBCONIN
 432:	0326  E1      		POP	HL
 433:	0327  D1      		POP	DE
 434:	0328  C1      		POP	BC
 435:	0329  C9      		RET
 436:			
 437:			;; inc HL and do a 16 bit compare between HL and DE
 438:	032A          	CHKEOR:
 439:	032A  23      		INC	HL
 440:	032B  7C      		LD	A,H
 441:	032C  B5      		OR	L
 442:	032D  37      		SCF
 443:	032E  C8      		RET	Z
 444:	032F  7B      		LD	A,E
 445:	0330  95      		SUB	L
 446:	0331  7A      		LD	A,D
 447:	0332  9C      		SBC	A,H
 448:	0333  C9      		RET
 449:			
 450:	0334          	ZCSTS:
 451:	0334  C5      		PUSH	BC
 452:	0335  D5      		PUSH	DE
 453:	0336  E5      		PUSH	HL
 454:	0337  CDAAFD  		CALL	BBCONST
 455:	033A  E1      		POP	HL
 456:	033B  D1      		POP	DE
 457:	033C  C1      		POP	BC
 458:	033D  FE01    		CP	1
 459:	033F  C9      		RET
 460:			
 461:	0340  00      	AUTO:		DB	0
 462:	0341  0000    	DMASAVE		DW	0
 463:	0343  00      	DMPPAUSE	DB	0
 464:	0344  2D2D206D	WPAUSEMSG	DB	"-- more --",CR,LF,'$'
	      6F726520
	      2D2D0D0A
	      24
 465:			;------------------------------------------------------------------------
 466:			
 467:			
 468:			;
 469:			;=======================================================================
 470:			;
 471:			; Modular Z80 DarkStar (NE Z80) Monitor
 472:			;
 473:			;=======================================================================
 474:			;
 475:			; IDE Interface on Multif-Board (8255)
 476:			; ---------------------------------------------------------------------
 477:			
 478:			;
 479:			;
 480:			; IDE Status Register:
 481:			;  bit 7: Busy	1=busy, 0=not busy
 482:			;  bit 6: Ready 1=ready for command, 0=not ready yet
 483:			;  bit 5: DF	1=fault occured insIDE drive
 484:			;  bit 4: DSC	1=seek complete
 485:			;  bit 3: DRQ	1=data request ready, 0=not ready to xfer yet
 486:			;  bit 2: CORR	1=correctable error occured
 487:			;  bit 1: IDX	vendor specific
 488:			;  bit 0: ERR	1=error occured
 489:			;
 490:			
 491:	D000          	IDBUFR		EQU	TRNPAG << 12
 492:	0005          	HRETRIES	EQU	5
 493:	0008          	SIGNSIZE	EQU	8
 494:	0008          	ENTRYSIZE	EQU	8
 495:	000F          	PTBLSIZE	EQU	15
 496:			
 497:				; TODO: All routines here are written for a single drive system,
 498:				;       had to be revised...
 499:			
 500:			PARRCRD	macro				; partition table record format
 501:				DEFB	0			; active
 502:				DEFB	0			; letter
 503:				DEFB	0			; type
 504:				DEFW	0			; start
 505:				DEFW	0			; end
 506:				DEFB	0			; reserved
 507:				endm
 508:			
 509:				; Local storage for disks geometry
 510:	0351  0000    	DSK0CYLS:	DEFW	0		; For IDE disk 0 or master
 511:	0353  0000    	DSK0HEADS:	DEFW	0
 512:	0355  0000    	DSK0SECTORS:	DEFW	0
 513:	0357  0000    	PTSTART:	DEFW	0
 514:	0359  0000    	PTEND:		DEFW	0
 515:	035B  00      	IDTSAV:		DEFB	0		; page # save
 516:	035C  00      	INRETRY:	DEFB	0		; retry on r/w errors
 517:				; This are partition management
 518:	035D  FF      	HDLOG:		DEFB	$FF		; logged drive
 519:	035E  00      	TBLOADED:	DEFB	0		; flag partition loaded
 520:	035F          	PARTBL:					; local, simplified, copy of the partition table
 521:	035F          			PARRCRD			; entry 0 ...
 522:	0367          			PARRCRD
 523:	036F          			PARRCRD
 524:	0377          			PARRCRD
 525:	037F          			PARRCRD
 526:	0387          			PARRCRD
 527:	038F          			PARRCRD
 528:	0397          			PARRCRD
 529:	039F          			PARRCRD
 530:	03A7          			PARRCRD
 531:	03AF          			PARRCRD
 532:	03B7          			PARRCRD
 533:	03BF          			PARRCRD
 534:	03C7          			PARRCRD
 535:	03CF          			PARRCRD
 536:	03D7          			PARRCRD			; ... entry 16
 537:	03DF  41554155	SIGNSTRING:	DEFB	"AUAUUAUA"	; signature string
	      55415541
 538:			
 539:			
 540:			;;
 541:			;; Initialize interface
 542:			;;
 543:	03E7          	HDINIT:
 544:	03E7  3E92    		LD	A,READCFG8255		; 10010010b
 545:	03E9  D3E3    		OUT	(IDEPORTCTRL),A		; config 8255 chip, READ mode
 546:			
 547:	03EB  3E80    		LD	A,IDERSTLINE
 548:	03ED  D3E2    		OUT	(IDEPORTC),A		; hard reset the disk drive
 549:			
 550:	03EF  0620    		LD	B,$20			; tunable
 551:	03F1          	HDRESDLY:
 552:	03F1  05      		DEC	B
 553:	03F2  20FD    		JR	NZ,HDRESDLY		; delay (reset pulse width)
 554:			
 555:	03F4  AF      		XOR	A
 556:	03F5  D3E2    		OUT	(IDEPORTC),A		; no IDE control lines asserted
 557:	03F7  112000  		LD	DE,32
 558:	03FA  CD85FD  		CALL	DELAY			; pause 32 ms.
 559:			
 560:	03FD  16E0    		LD	D,11100000B		; data for IDE SDH reg (512 bytes, LBA mode, single drive, head 0)
 561:	03FF  1E0E    		LD	E,REGSHD
 562:	0401  CDB906  		CALL	IDEWR8D
 563:			
 564:	0404  06FF    		LD	B,$FF			; tunable
 565:	0406          	HDWAITINI:
 566:	0406  1E0F    		LD	E,REGSTATUS		; get status after initilization
 567:	0408  CDA806  		CALL	IDERD8D			; check status
 568:	040B  CB7A    		BIT	7,D
 569:	040D  CA2604  		JP	Z,DONEINIT		; return if ready bit is zero
 570:			
 571:				;Delay to allow drive to get up to speed
 572:	0410  C5      		PUSH	BC			; (the 0FFH above)
 573:	0411  01FFFF  		LD	BC,$FFFF
 574:	0414  1602    	DELAY2:	LD	D,2			; may need to adjust delay time to allow cold drive to
 575:	0416  15      	DELAY1:	DEC	D			; to speed
 576:	0417  C21604  		JP	NZ,DELAY1
 577:	041A  0B      		DEC	BC
 578:	041B  79      		LD	A,C
 579:	041C  B0      		OR	B
 580:	041D  C21404  		JP	NZ,DELAY2
 581:	0420  C1      		POP	BC
 582:	0421  10E3    		DJNZ	HDWAITINI
 583:	0423  AF      		XOR	A			; flag error on return
 584:	0424  3D      		DEC	A
 585:	0425  C9      		RET
 586:	0426          	DONEINIT:
 587:	0426  C9      		RET
 588:			
 589:			
 590:			;;
 591:			;; Get drive identification block
 592:			;;
 593:	0427          	DRIVEID:
 594:				; Mount transient page used for id buffer
 595:	0427  060D    		LD	B, TRNPAG
 596:	0429  CD78FD  		CALL	MMGETP
 597:	042C  325B03  		LD	(IDTSAV), A		; save current
 598:				;
 599:	042F  3A0B00  		LD	A,(HMEMPAG)		; bios scratch page (phy)
 600:	0432  060D    		LD	B,TRNPAG		; transient page
 601:	0434  CD6BFD  		CALL	MMPMAP			; mount it
 602:				;
 603:	0437  CD7206  		CALL	IDEWAITNOTBUSY
 604:	043A  3841    		JR	C,IDRNOK
 605:			
 606:	043C  16EC    		LD	D,CMDID
 607:	043E  1E0F    		LD	E,REGCOMMAND
 608:	0440  CDB906  		CALL	IDEWR8D			; issue the command
 609:			
 610:	0443  CD8D06  		CALL	IDEWAITDRQ		; wait for Busy=0, DRQ=1
 611:	0446  3835    		JR	C,IDRNOK
 612:			
 613:	0448  0600    		LD	B,0
 614:	044A  2100D0  		LD	HL,IDBUFR		; store data here
 615:	044D  CD5E05  		CALL	MORERD16
 616:				;;
 617:				;; workaround for first word lossy drivers
 618:				;;
 619:	0450  3A12D0  		LD	A,(IDBUFR+18)
 620:	0453  FE20    		CP	' '
 621:	0455  202C    		JR	NZ,IDRTRN
 622:				; first word loss...
 623:	0457  0603    		LD	B,3			; # of retrys
 624:	0459          	IDRETRY:
 625:	0459  C5      		PUSH	BC
 626:	045A  CD7206  		CALL	IDEWAITNOTBUSY
 627:	045D  381E    		JR	C,IDRNOK
 628:			
 629:	045F  16EC    		LD	D,CMDID
 630:	0461  1E0F    		LD	E,REGCOMMAND
 631:	0463  CDB906  		CALL	IDEWR8D
 632:			
 633:	0466  CD8D06  		CALL	IDEWAITDRQ		; Wait for Busy=0, DRQ=1
 634:	0469  3812    		JR	C,IDRNOK
 635:			
 636:	046B  0600    		LD	B,0
 637:	046D  2100D0  		LD	HL,IDBUFR		; store data here
 638:	0470  CD6605  		CALL	MORERD16I		; get words, try to recover 1st word already
 639:								; on ide bus
 640:	0473  C1      		POP	BC
 641:	0474  3A12D0  		LD	A,(IDBUFR+18)
 642:	0477  FE20    		CP	' '
 643:	0479  2008    		JR	NZ,IDRTRN
 644:	047B  10DC    		DJNZ	IDRETRY
 645:	047D          	IDRNOK:
 646:	047D  CD8B04  		CALL	RSIDBUF
 647:	0480  AF      		XOR	A
 648:	0481  3D      		DEC	A
 649:	0482  C9      		RET				; * sigh * :-(
 650:	0483          	IDRTRN:
 651:				; prior to return we save disk params locally
 652:	0483  CD9404  		CALL	SAVEGEO
 653:	0486  CD8B04  		CALL	RSIDBUF
 654:	0489  AF      		XOR	A			; reset z flag
 655:	048A  C9      		RET
 656:			
 657:			;;
 658:			;; restore scratch
 659:			;;
 660:	048B          	RSIDBUF:
 661:	048B  3A5B03  		LD	A,(IDTSAV)		; old
 662:	048E  060D    		LD	B,TRNPAG		; transient page
 663:	0490  CD6BFD  		CALL	MMPMAP			; mount it
 664:	0493  C9      		RET
 665:			
 666:			;;
 667:			;; Save disk geometry
 668:			;;
 669:	0494          	SAVEGEO:
 670:				; TODO: should work also for slave
 671:	0494  2102D0  		LD	HL,IDBUFR + 2		; cyls
 672:	0497  4E      		LD	C,(HL)
 673:	0498  23      		INC	HL
 674:	0499  46      		LD	B,(HL)
 675:	049A  ED435103		LD	(DSK0CYLS), BC
 676:	049E  2106D0  		LD	HL,IDBUFR + 6		; heads
 677:	04A1  4E      		LD	C,(HL)
 678:	04A2  23      		INC	HL
 679:	04A3  46      		LD	B,(HL)
 680:	04A4  ED435303		LD	(DSK0HEADS), BC
 681:	04A8  210CD0  		LD	HL,IDBUFR + 12		; sectors
 682:	04AB  4E      		LD	C,(HL)
 683:	04AC  23      		INC	HL
 684:	04AD  46      		LD	B,(HL)
 685:	04AE  ED435503		LD	(DSK0SECTORS), BC
 686:	04B2  C9      		RET
 687:			
 688:			;;
 689:			;; Return disk geometry
 690:			;;
 691:			;; IX < cylinders, IY < heads, HL < sectors
 692:	04B3          	GETHDGEO:
 693:	04B3  DD2A5103		LD	IX,(DSK0CYLS)
 694:	04B7  FD2A5303		LD	IY,(DSK0HEADS)
 695:	04BB  2A5503  		LD	HL,(DSK0SECTORS)
 696:	04BE  C9      		RET
 697:			
 698:			;;
 699:			;; Get partition table
 700:			;;
 701:	04BF          	GETPTABLE:
 702:	04BF  214B00  		LD	HL,TMPBYTE		; enable unpartitioned addressing
 703:	04C2  CBFE    		SET	7,(HL)
 704:	04C4  ED4B5503		LD	BC,(DSK0SECTORS)	; verify we know disk geometry
 705:	04C8  79      		LD	A,C
 706:	04C9  B0      		OR	B
 707:	04CA  2005    		JR	NZ,GETOT00
 708:	04CC  CD2704  		CALL	DRIVEID			; no: load it
 709:	04CF  2064    		JR	NZ,GETPERR		; damn !
 710:	04D1          	GETOT00:
 711:				; mount transient page used for operations
 712:	04D1  060D    		LD	B, TRNPAG
 713:	04D3  CD78FD  		CALL	MMGETP
 714:	04D6  325B03  		LD	(IDTSAV), A		; save current
 715:				;
 716:	04D9  3A0B00  		LD	A,(HMEMPAG)		; bios scratch page (phy)
 717:	04DC  060D    		LD	B,TRNPAG		; transient page
 718:	04DE  CD6BFD  		CALL	MMPMAP			; mount it
 719:				; read table
 720:	04E1  010000  		LD	BC,0			; track 0
 721:	04E4  CDD106  		CALL	TRKSET
 722:	04E7  010100  		LD	BC,1			; sector 1
 723:	04EA  CDD606  		CALL	SECSET
 724:	04ED  0100D0  		LD	BC,IDBUFR		; DMA @ temp page
 725:	04F0  CDDB06  		CALL	DMASET
 726:	04F3  CD4205  		CALL	READSECTOR
 727:	04F6  203D    		JR	NZ,GETPERR		; :-(
 728:				; check signature for valid table
 729:	04F8  11DF03  		LD	DE,SIGNSTRING
 730:	04FB  2100D0  		LD	HL,IDBUFR
 731:	04FE  010800  		LD	BC,SIGNSIZE
 732:	0501          	GETOT01:
 733:	0501  1A      		LD	A,(DE)			; do compare
 734:	0502  13      		INC	DE
 735:	0503  EDA1    		CPI
 736:	0505  202E    		JR	NZ,GETPERR		; invalid table
 737:	0507  E20C05  		JP	PO,GETOT02
 738:	050A  18F5    		JR	GETOT01
 739:	050C          	GETOT02:
 740:				; copy table in, only active entries are copied
 741:	050C  D9      		EXX
 742:	050D  060F    		LD	B,PTBLSIZE		; count on table entries
 743:	050F  D9      		EXX
 744:	0510  2100D0  		LD	HL,IDBUFR+SIGNSIZE-ENTRYSIZE
 745:	0513  115F03  		LD	DE,PARTBL
 746:	0516          	GETOT04:
 747:	0516  0608    		LD	B,ENTRYSIZE
 748:	0518          	GETOT07:
 749:	0518  23      		INC	HL
 750:	0519  10FD    		DJNZ	GETOT07
 751:	051B          	GETOT05:
 752:	051B  010800  		LD	BC,ENTRYSIZE
 753:	051E  7E      		LD	A,(HL)
 754:	051F  FE59    		CP	'Y'			; is active ?
 755:	0521  2009    		JR	NZ,GETOT03
 756:	0523  EDB0    		LDIR
 757:	0525  D9      		EXX
 758:	0526  05      		DEC	B
 759:	0527  D9      		EXX
 760:	0528  20F1    		JR	NZ,GETOT05
 761:	052A  1805    		JR	GETOT06
 762:	052C          	GETOT03:
 763:	052C  D9      		EXX
 764:	052D  05      		DEC	B
 765:	052E  D9      		EXX
 766:	052F  20E5    		JR	NZ,GETOT04
 767:	0531          	GETOT06:
 768:	0531  AF      		XOR	A
 769:	0532  F5      		PUSH	AF
 770:	0533  1803    		JR	GETPEXI
 771:	0535          	GETPERR:				; failure
 772:	0535  AF      		XOR	A
 773:	0536  3D      		DEC	A
 774:	0537  F5      		PUSH	AF
 775:	0538          	GETPEXI:
 776:				; prior to return we save disk params locally
 777:	0538  CD8B04  		CALL	RSIDBUF
 778:	053B  214B00  		LD	HL,TMPBYTE		; disable unpartitioned addressing
 779:	053E  CBBE    		RES	7,(HL)
 780:	0540  F1      		POP	AF
 781:	0541  C9      		RET
 782:			
 783:			;;
 784:			;; Read sector (512 bytes) from IDE
 785:			;;
 786:	0542          	READSECTOR:
 787:	0542  CD4806  		CALL	WRLBA			; tell which sector we want to read from.
 788:	0545  C0      		RET	NZ			; LBA error
 789:	0546  CD7206  		CALL	IDEWAITNOTBUSY
 790:	0549  DA8305  		JP	C,RDSNOK		; status error
 791:			
 792:	054C  1620    		LD	D,CMDREAD
 793:	054E  1E0F    		LD	E,REGCOMMAND
 794:	0550  CDB906  		CALL	IDEWR8D			; send sec read command to drive.
 795:	0553  CD8D06  		CALL	IDEWAITDRQ		; wait until it's got the data
 796:	0556  DA8305  		JP	C,RDSNOK		; read/status error
 797:			;
 798:	0559  2A4100  		LD	HL,(FRDPBUF)		; DMA address
 799:	055C  0600    		LD	B,0			; read 512 bytes to [HL] (256X2 bytes)
 800:	055E          	MORERD16:
 801:	055E  3E08    		LD	A,REGDATA		; REG register address
 802:	0560  D3E2    		OUT	(IDEPORTC),A
 803:			
 804:	0562  F640    		OR	IDERDLINE		; pulse RD line
 805:	0564  D3E2    		OUT	(IDEPORTC),A
 806:	0566          	MORERD16I:
 807:	0566  DBE0    		IN	A,(IDEPORTA)		; read lower byte
 808:	0568  77      		LD	(HL),A
 809:	0569  23      		INC	HL
 810:	056A  DBE1    		IN	A,(IDEPORTB)		; read upper byte
 811:	056C  77      		LD	(HL),A
 812:	056D  23      		INC	HL
 813:			
 814:	056E  3E08    		LD	A,REGDATA		; deassert RD line
 815:	0570  D3E2    		OUT	(IDEPORTC),A
 816:	0572  10EA    		DJNZ	MORERD16
 817:			
 818:	0574  1E0F    		LD	E,REGSTATUS
 819:	0576  CDA806  		CALL	IDERD8D
 820:	0579  7A      		LD	A,D
 821:	057A  E601    		AND	$01
 822:	057C  2005    		JR	NZ,RDSNOK
 823:	057E          	RDSOK:
 824:	057E  AF      		XOR	A			; ok
 825:	057F  325C03  		LD	(INRETRY),A		; clean, in case...
 826:	0582  C9      		RET
 827:	0583          	RDSNOK:
 828:	0583  3A5C03  		LD	A,(INRETRY)		; in a retry loop ?
 829:	0586  B7      		OR	A
 830:	0587  214205  		LD	HL,READSECTOR		; where to come back
 831:	058A  2002    		JR	NZ,IORETR		; handle retry
 832:	058C  3E06    		LD	A,HRETRIES+1		; no. start it
 833:			; 	JR	IORETR
 834:			
 835:				; ... fall through
 836:			
 837:				; retry handle, common for both read and write
 838:	058E  3D      	IORETR:	DEC	A
 839:	058F  325C03  		LD	(INRETRY),A		; update count
 840:	0592  2804    		JR	Z,UNRECOV		; unrecoverable error!
 841:	0594  CDE703  		CALL	HDINIT			; reset drive
 842:	0597  E9      		JP	(HL)			; redo
 843:	0598          	UNRECOV:
 844:	0598  3D      		DEC	A
 845:	0599  C9      		RET				; error
 846:			
 847:			;;
 848:			;; Write a sector, specified by the 3 bytes in LBA
 849:			;;
 850:	059A          	WRITESECTOR:
 851:	059A  CD4806  		CALL	WRLBA			; set LBA sector
 852:	059D  C0      		RET	NZ			; LBA error
 853:	059E  CD7206  		CALL	IDEWAITNOTBUSY		; make sure drive is ready
 854:	05A1  DAE005  		JP	C,WRSNOK
 855:			
 856:	05A4  1630    		LD	D,CMDWRITE
 857:	05A6  1E0F    		LD	E,REGCOMMAND
 858:	05A8  CDB906  		CALL	IDEWR8D			; tell drive to write a sector
 859:	05AB  CD8D06  		CALL	IDEWAITDRQ		; wait unit it wants the data
 860:	05AE  DAE005  		JP	C,WRSNOK
 861:			;
 862:	05B1  2A4100  		LD	HL,(FRDPBUF)
 863:	05B4  0600    		LD	B,0			; 256X2 bytes
 864:			
 865:	05B6  3E80    		LD	A,WRITECFG8255
 866:	05B8  D3E3    		OUT	(IDEPORTCTRL),A
 867:	05BA  7E      	WRSEC1:	LD	A,(HL)
 868:	05BB  23      		INC	HL
 869:	05BC  D3E0    		OUT	(IDEPORTA),A		; write the lower byte
 870:	05BE  7E      		LD	A,(HL)
 871:	05BF  23      		INC	HL
 872:	05C0  D3E1    		OUT	(IDEPORTB),A		; write upper byte
 873:	05C2  3E08    		LD	A,REGDATA
 874:	05C4  F5      		PUSH	AF
 875:	05C5  D3E2    		OUT	(IDEPORTC),A		; send write command
 876:	05C7  F620    		OR	IDEWRLINE		; send WR pulse
 877:	05C9  D3E2    		OUT	(IDEPORTC),A
 878:	05CB  F1      		POP	AF
 879:	05CC  D3E2    		OUT	(IDEPORTC),A
 880:	05CE  10EA    		DJNZ	WRSEC1
 881:			
 882:	05D0  3E92    		LD	A,READCFG8255		; set 8255 back to read mode
 883:	05D2  D3E3    		OUT	(IDEPORTCTRL),A
 884:			
 885:	05D4  1E0F    		LD	E,REGSTATUS
 886:	05D6  CDA806  		CALL	IDERD8D
 887:	05D9  7A      		LD	A,D
 888:	05DA  E601    		AND	$01
 889:	05DC  2002    		JR	NZ,WRSNOK
 890:	05DE          	WRSOK:
 891:	05DE  AF      		XOR	A			; ok
 892:	05DF  C9      		RET
 893:	05E0          	WRSNOK:
 894:	05E0  3A5C03  		LD	A,(INRETRY)		; in a retry loop ?
 895:	05E3  B7      		OR	A
 896:	05E4  219A05  		LD	HL,WRITESECTOR		; where to come back
 897:	05E7  20A5    		JR	NZ,IORETR		; handle retry
 898:	05E9  3E06    		LD	A,HRETRIES+1		; no. start it
 899:	05EB  18A1    		JR	IORETR
 900:			
 901:			;;
 902:			;; calculate partition offset and validate requested track
 903:			;;
 904:	05ED          	TRKOFF:
 905:	05ED  3A5D03  		LD	A,(HDLOG)		; check for disk change
 906:	05F0  47      		LD	B,A
 907:	05F1  3A4500  		LD	A,(FDRVBUF)
 908:	05F4  B8      		CP	B
 909:	05F5  2838    		JR	Z,NODCHG		; unchanged
 910:				;
 911:	05F7  060F    		LD	B,PTBLSIZE		; changed, search in table
 912:	05F9  1E08    		LD	E,ENTRYSIZE
 913:	05FB  1600    		LD	D,0
 914:	05FD  04      		INC	B
 915:	05FE  C641    		ADD	A,'A'			; transform in letter
 916:	0600  4F      		LD	C,A			; save on C
 917:	0601  FD215703		LD	IY,PARTBL-ENTRYSIZE	; point to table, back one slot
 918:	0605  FD19    	TONEXT:	ADD	IY,DE			; point to next
 919:	0607  05      		DEC	B
 920:	0608  283A    		JR	Z,TOFERR		; not found !
 921:	060A  FDBE01  		CP	(IY+1)			; compare
 922:	060D  20F6    		JR	NZ,TONEXT
 923:	060F  3A2D00  		LD	A,(COPSYS)		; verify type
 924:	0612  B7      		OR	A
 925:	0613  2808    		JR	Z,NOTPCK		; unspecified
 926:	0615  FDBE02  		CP	(IY+2)
 927:	0618  2803    		JR	Z,NOTPCK		; ok, go on
 928:	061A  79      		LD	A,C			; restore drive letter
 929:	061B  18E8    		JR	TONEXT			; try again
 930:	061D          	NOTPCK: ;
 931:	061D  FD6E03  		LD	L,(IY+3)		; found, save data
 932:	0620  FD6604  		LD	H,(IY+4)		; start cyl
 933:	0623  225703  		LD	(PTSTART),HL
 934:	0626  FD6E05  		LD	L,(IY+5)
 935:	0629  FD6606  		LD	H,(IY+6)		; end cyl
 936:	062C  225903  		LD	(PTEND),HL
 937:	062F          	NODCHG:	; add offset, check partition boundaries
 938:	062F  2A4600  		LD	HL,(FTRKBUF)
 939:	0632  ED5B5703		LD	DE,(PTSTART)
 940:	0636  19      		ADD	HL,DE			; in partition offset. simple!
 941:	0637  4D      		LD	C,L
 942:	0638  44      		LD	B,H			; move on BC
 943:	0639  ED5B5903		LD	DE,(PTEND)		; address larger than partition ?
 944:	063D  B7      		OR	A
 945:	063E  ED52    		SBC	HL,DE
 946:	0640  3002    		JR	NC,TOFERR		; ouch!
 947:	0642  AF      		XOR	A
 948:	0643  C9      		RET
 949:	0644  AF      	TOFERR:	XOR	A
 950:	0645  3D      		DEC	A
 951:	0646  E1      		POP	HL			; do not reenter in WRLBA
 952:	0647  C9      		RET
 953:			
 954:			
 955:			;;
 956:			;; Setup LBA sector on IDE drive
 957:			;;
 958:	0648          	WRLBA:
 959:	0648  ED4B4600		LD	BC,(FTRKBUF)		; load requested track
 960:	064C  214B00  		LD	HL,TMPBYTE		; check for free/non free addressing
 961:	064F  CB7E    		BIT	7,(HL)
 962:	0651  CCED05  		CALL	Z,TRKOFF
 963:			
 964:	0654  50      		LD	D,B			; send high TRK#
 965:	0655  1E0D    		LD	E,REGCYLMSB
 966:	0657  CDB906  		CALL	IDEWR8D
 967:			
 968:	065A  51      		LD	D,C			; send low TRK#
 969:	065B  1E0C    		LD	E,REGCYLLSB
 970:	065D  CDB906  		CALL	IDEWR8D
 971:			
 972:	0660  3A4300  		LD	A,(FSECBUF)		; get requested sector
 973:	0663  57      		LD	D,A
 974:	0664  1E0B    		LD	E,REGSECTOR
 975:	0666  CDB906  		CALL	IDEWR8D
 976:			
 977:	0669  1601    		LD	D,1			; one sector at a time (for now ?)
 978:	066B  1E0A    		LD	E,REGSECCNT
 979:	066D  CDB906  		CALL	IDEWR8D
 980:			
 981:	0670  AF      		XOR	A			; reset flags
 982:	0671  C9      		RET
 983:			
 984:			
 985:			;;
 986:			;; wait for drive to clear busy flag
 987:			;;
 988:	0672          	IDEWAITNOTBUSY:				; drive ready if 01000000
 989:	0672  06FF    		LD	B,$FF
 990:	0674  0EFF    		LD	C,$FF			; delay, must be above 80H for 4MHz Z80
 991:	0676          	MOREWAIT:
 992:	0676  1E0F    		LD	E,REGSTATUS		; wait for RDY bit to be set
 993:	0678  CDA806  		CALL	IDERD8D
 994:	067B  7A      		LD	A,D
 995:	067C  E6C0    		AND	11000000B
 996:	067E  EE40    		XOR	01000000B
 997:	0680  CA8B06  		JP	Z,DONENOTBUSY
 998:	0683  10F1    		DJNZ	MOREWAIT
 999:	0685  0D      		DEC	C
1000:	0686  C27606  		JP	NZ,MOREWAIT
1001:	0689  37      		SCF				; set carry to indicate an error
1002:	068A  C9      		RET
1003:	068B          	DONENOTBUSY:
1004:	068B  B7      		OR	A			; clear carry it indicate no error
1005:	068C  C9      		RET
1006:			
1007:			;;
1008:			;; wait for drive to set data ready flag
1009:			;;
1010:	068D          	IDEWAITDRQ:
1011:	068D  06FF    		LD	B,$FF
1012:	068F  0EFF    		LD	C,$FF
1013:	0691          	MOREDRQ:
1014:	0691  1E0F    		LD	E,REGSTATUS		; wait for DRQ bit to be set
1015:	0693  CDA806  		CALL	IDERD8D
1016:	0696  7A      		LD	A,D
1017:	0697  E688    		AND	10001000B
1018:	0699  FE08    		CP	00001000B
1019:	069B  CAA606  		JP	Z,DONEDRQ
1020:	069E  10F1    		DJNZ	MOREDRQ
1021:	06A0  0D      		DEC	C
1022:	06A1  C29106  		JP	NZ,MOREDRQ
1023:	06A4  37      		SCF				; set carry to indicate error
1024:	06A5  C9      		RET
1025:	06A6          	DONEDRQ:
1026:	06A6  B7      		OR	A			; clear carry
1027:	06A7  C9      		RET
1028:			
1029:			
1030:			;------------------------------------------------------------------
1031:			; Low Level 8 bit R/W to the drive controller. These are the routines
1032:			; that talk directly to the drive controller registers, via the
1033:			; 8255 chip.
1034:			; Note the 16 bit I/O to the drive (which is only for SEC R/W) is done
1035:			; directly in the routines READSECTOR & WRITESECTOR for speed reasons.
1036:			;
1037:			
1038:			;;
1039:			;; Read 8 bits from IDE register in [E], return info in [D]
1040:			;;
1041:	06A8          	IDERD8D:
1042:	06A8  7B      		LD	A,E
1043:	06A9  D3E2    		OUT	(IDEPORTC),A		; drive address onto control lines
1044:			
1045:	06AB  F640    		OR	IDERDLINE		; RD pulse pin (40H)
1046:	06AD  D3E2    		OUT	(IDEPORTC),A		; assert read pin
1047:			
1048:	06AF  DBE0    		IN	A,(IDEPORTA)
1049:	06B1  57      		LD	D,A			; return with data in [D]
1050:			
1051:	06B2  7B      		LD	A,E			; clear WR line
1052:	06B3  D3E2    		OUT	(IDEPORTC),A
1053:			
1054:	06B5  AF      		XOR	A
1055:	06B6  D3E2    		OUT	(IDEPORTC),A		; zero all port C lines
1056:	06B8  C9      		RET
1057:			
1058:			;;
1059:			;; Write Data in [D] to IDE register in [E]
1060:			;;
1061:	06B9          	IDEWR8D:
1062:	06B9  3E80    		LD	A,WRITECFG8255		; set 8255 to write mode
1063:	06BB  D3E3    		OUT	(IDEPORTCTRL),A
1064:			
1065:	06BD  7A      		LD	A,D			; get data put it in 8255 A port
1066:	06BE  D3E0    		OUT	(IDEPORTA),A
1067:			
1068:	06C0  7B      		LD	A,E			; select IDE register
1069:	06C1  D3E2    		OUT	(IDEPORTC),A
1070:			
1071:	06C3  F620    		OR	IDEWRLINE		; lower WR line
1072:	06C5  D3E2    		OUT	(IDEPORTC),A
1073:	06C7  00      		NOP
1074:			
1075:	06C8  7B      		LD	A,E			; clear WR line
1076:	06C9  D3E2    		OUT	(IDEPORTC),A
1077:	06CB  00      		NOP
1078:			
1079:	06CC  3E92    		LD	A,READCFG8255		; config 8255 chip, read mode on return
1080:	06CE  D3E3    		OUT	(IDEPORTCTRL),A
1081:	06D0  C9      		RET
1082:			
1083:			;------------------------------------------------------------------------
1084:			
1085:			
1086:	06D1          	TRKSET:
1087:	06D1  ED434600		LD	(FTRKBUF),BC
1088:	06D5  C9      		RET
1089:	06D6          	SECSET:
1090:	06D6  ED434300		LD	(FSECBUF),BC
1091:	06DA  C9      		RET
1092:	06DB          	DMASET:
1093:	06DB  ED434100		LD	(FRDPBUF),BC
1094:	06DF  C9      		RET
1095:			
1096:	06E0          	DSKSEL:
1097:	06E0  79      		LD	A,C
1098:	06E1  324500  		LD	(FDRVBUF),A
1099:	06E4  C9      		RET
1100:			
1101:	06E5          	DMASP:
1102:				;
1103:	06E5          		END



Statistics:

     5	passes
     0	jr promotions
   430	symbols
     0	bytes

    16	macro calls
   118	macro bytes
     0	invented symbols



Symbol Table:

alibn            31a     dmaset           6db     outcrlf          259+    
altprnprt      =   3+    dmasp            6e5     outstr           24a     
appbuf         =  2e+    dmpalia          318+    parrcrd            0     
auto             340     dmpalib          313+    partbl           35f     
back             151     dmppause         343+    phex             1df+    
bbappp         =   e+    dodec            146     pio2bit2       =   2+    
bbbase         =f000+    donedrq          6a6     pio2bit3       =   3+    
bbcalret       =fd5a+    doneinit         426     pio2bit4       =   4+    
bbcbank        =   c+    donenotbusy      68b     ppakstb        =   1+    
bbcomn         =fc00+    donep            215     ppcntrp        =   2+    
bbconin        =fd94+    driveid          427     ppdatap        =   3+    
bbconout       =fd9f+    dselbf         =  4e+    ppdini         =   0+    
bbconst        =fdaa+    dsk0cyls         351     ppdokg         =   2+    
bbcpboot       =fcc9+    dsk0heads        353     ppdrdy         =   4+    
bbcptime       =fcc3+    dsk0sectors      355     ppdstp         =   6+    
bbcrtcini      =fc03+    dsksel           6e0     ppstrob        =   0+    
bbcrtfill      =fc09+    eep29c         =   4+    ppuack         =   7+    
bbcstck        =   d+    eep29ee        =   1+    ppuini         =   1+    
bbcurset       =fc21+    eep29xe        =   2+    ppuokg         =   3+    
bbdebug        =   0+    eepage0        =  c0+    ppurdy         =   5+    
bbdiv16        =fce1+    eeproglock     =  10+    prntbusybit    =   0+    
bbdmaset       =fcb7+    eepsta         =f000+    prvtop         =  4f+    
bbdriveid      =fcf9+    eepunsupp      =   8+    pstring          203     
bbdsksel       =fcbd+    eerineprom     =  80+    pstrx            207     
bbeidck        =fd23+    entrysize      =   8+    ptblsize       =   f+    
bbepmngr       =fd1d+    esc            =  1b+    ptend            359     
bbexec         =fd29+    false          =   0+    ptstart          357     
bbfdrvsel      =fcdb+    fdcbase        =  d0+    r0brdl         =   0+    
bbfhome        =fc81+    fdccmdstatr    =  d0+    r0rxtx         =   0+    
bbflopio       =fc93+    fdcdatareg     =  d7+    r1brdm         =   1+    
bbfread        =fc87+    fdcdrvrcnt     =  d6+    r1ier          =   1+    
bbfwrite       =fc8d+    fdcreadc       =  88+    r2fcr          =   2+    
bbhdboot       =fd11+    fdcrestc       =   7+    r2iir          =   2+    
bbhdgeo        =fd0b+    fdcsectreg     =  d2+    r3lcr          =   3+    
bbhdinit       =fcf3+    fdcseekc       =  17+    r4mcr          =   4+    
bbhdrd         =fd05+    fdctrakreg     =  d1+    r5lsr          =   5+    
bbhdwr         =fcff+    fdcwritc       =  a8+    r6msr          =   6+    
bbimgp         =  c0+    fdrvbuf        =  45+    r7spr          =   7+    
bbinictc       =fc57+    ff             =   c+    ram0buf        =  3b+    
bbjtobnk       =fc00+    fifblok        =   b+    ram1buf        =  3c+    
bbldpart       =fd17+    fifoend        =  25+    ram2buf        =  3d+    
bbmul16        =fce7+    fifokb         =  1a+    ram3buf        =  3e+    
bboffcal       =fced+    fifosto        =   f+    ramtbl         =e000+    
bbpag          =   f+    fifou0         =   f+    rdsnok           583     
bbprcvblk      =fc6f+    fifsize        =   8+    rdsok            57e+    
bbprnchr       =fc99+    fin            =fdc4+    readcfg8255    =  92+    
bbpsndblk      =fc63+    fixblock       =   0+    readsector       542     
bbrdtime       =fca5+    fout           =fde1+    regastatus     =  16+    
bbrdvdsk       =fc75+    frdpbuf        =  41+    regcommand     =   f+    
bbresctc       =fc5d+    fsecbuf        =  43+    regcontrol     =  16+    
bbsecset       =fcb1+    fsekbuf        =  3f+    regcyllsb      =   c+    
bbsidset       =fcd5+    fstat          =fdb5+    regcylmsb      =   d+    
bbstack        =feb4+    ftrkbuf        =  46+    regdata        =   8+    
bbstbase       =fe90+    gethdgeo         4b3+    regerr         =   9+    
bbsttim        =fc9f+    getot00          4d1     regseccnt      =   a+    
bbtrkset       =fcab+    getot01          501     regsector      =   b+    
bbu0ini        =fc39+    getot02          50c     regshd         =   e+    
bbu1ini        =fc51+    getot03          52c     regstatus      =   f+    
bbu1rx         =fc45+    getot04          516     rldrom         =fe79+    
bbu1st         =fc4b+    getot05          51b     rsidbuf          48b     
bbu1tx         =fc3f+    getot06          531     rst7sp1        =  38+    
bbuplchr       =fc69+    getot07          518     rst7sp2        =  39+    
bbvcpmbt       =fccf+    getperr          535     rst7sp3        =  3a+    
bbvoid         =fd6a+    getpexi          538     rtbsiz         = 3c0+    
bbwrvdsk       =fc7b+    getptable        4bf     saut             162     
begin            100+    h2aen1           219+    savegeo          494     
bell           =   7+    h2aj1            21e     sconin         =fc2d+    
bldoffs        =3000+    h2aj2            227     sconout        =fc27+    
blifastblok    =  60+    h2aj3            22e+    sconst         =fc33+    
blifastline    =  6a+    half             157     secset           6d6     
blislowblok    =  40+    hdbsig           1dd     signsize       =   8+    
blislowline    =  4a+    hdcpm            1ad+    signstring       3df     
bq2              277     hdinit           3e7     sintvec        =fff0+    
btpasiz        =   6+    hdlog            35d     spacer           23a     
calr             11e     hdresdly         3f1     sysbase        =f000+    
cbkend           2e6     hdwaitini        406     syscmlo        =feb4+    
cdisk          =   4+    hexdump          286     syscom         =fc00+    
chkbrk           2e8     hl2asc           219     syshertz       =  13+    
chkeor           32a     hl2ascb          237     sytimr         =fe19+    
clkio          =   6+    hmempag        =   b+    tblblk         =  30+    
clkrst         =   7+    hretries       =   5+    tbloaded         35e+    
clksclk        =   5+    idbufr         =d000+    tdesclen       =  14+    
cmdid          =  ec+    idea0line      =   1+    tiaddrlen      =   4+    
cmdinit        =  91+    idea1line      =   2+    timrcon        =  28+    
cmdread        =  20+    idea2line      =   4+    tmpbyte        =  4b+    
cmdrecal       =  10+    idecs0line     =   8+    tnamelen       =   8+    
cmdspindown    =  e0+    idecs1line     =  10+    toferr           644     
cmdspinup      =  e1+    ideporta       =  e0+    tonext           605     
cmdwrite       =  30+    ideportb       =  e1+    tpa            = 100+    
cnfbyte        =  27+    ideportc       =  e2+    tpagelen       =   2+    
coire            308     ideportctrl    =  e3+    trkoff           5ed     
coiupc           2f9     iderd8d          6a8     trkset           6d1     
colbuf         =  4f+    iderdline      =  40+    trnpag         =   d+    
cont             16b     iderstline     =  80+    true           =ffff+    
copsys         =  2d+    idewaitdrq       68d     tsizelen       =   4+    
cr             =   d+    idewaitnotbusy   672     u0defspeed     =   6+    
crdureg        =fc27+    idewr8d          6b9     u0isr          =fe25+    
crlftab          262     idewrline      =  20+    u1defspeed     =   c+    
crt6545adst    =  8c+    idretry          459     u1isr          =fe59+    
crt6545data    =  8d+    idrnok           47d     u1nul          =fe70+    
crtbase        =  80+    idrtrn           483     uart0          =  c0+    
crtbeepport    =  8f+    idtsav           35b     uart0base      =  c0+    
crtblinkbit    =   0+    imtpag         =  ff+    uart0br        =  2c+    
crthilitbit    =   3+    imtsiz         = 400+    uart1          =  c8+    
crtkeybcnt     =  87+    inretry          35c     uart115k2      =   1+    
crtkeybdat     =  85+    intrdi         =fe0f+    uart1200       =  60+    
crtmodebit     =   4+    intren         =fdfe+    uart19k2       =   6+    
crtprntcnt     =  83+    iobyte         =   3+    uart1base      =  c8+    
crtprntdat     =  81+    ioretr           58e     uart1br        =  2b+    
crtram0cnt     =  82+    kbdbyte        =  4d+    uart2400       =  30+    
crtram0dat     =  80+    keybstrbbit    =   7+    uart38k4       =   3+    
crtram1cnt     =  86+    lf             =   a+    uart4800       =  18+    
crtram1dat     =  84+    maxblk         =  14+    uart57k6       =   2+    
crtram2cnt     =  8a+    mdp1             2e0     uart9600       =   c+    
crtram2dat     =  88+    mdp2             2b4     uastav         =fe84+    
crtram3port    =  8e+    mdp3             2d1     uastkb         =fe86+    
crtrevrsbit    =   1+    mdp4             2d3     uisre          =fe4e+    
crtservcnt     =  8b+    mdp5             2c9     uisri          =fe32+    
crtservdat     =  89+    mdp6             2a4     unrecov          598     
crtunderbit    =   2+    mdp7             2c5     vconin         =fc15+    
crtwidthbit    =   1+    memdump          29d     vconout        =fc0f+    
ctc0tc         =  2a+    menaprt        =  21+    vconst         =fc1b+    
ctc0tchi       =  20+    miobyte        =  4c+    vdbufsz        =   a+    
ctc1tc         =  29+    mmgetp         =fd78+    vdrdsec        =   0+    
ctc1tc100hz    =   5+    mmpmap         =fd6b+    vdskbuf        =  30+    
ctc1tc10hz     =  30+    mmtpapag       =  ef+    vdwrsec        =   1+    
ctc1tc25hz     =  13+    mmuport        =  20+    voidisr        =fe22+    
ctc1tc2hz      =  f4+    mmutstaddr     =d000+    wkey             131     
ctc1tc50hz     =   a+    mmutstpage     =   d+    wpause           309+    
ctcbase        =  e8+    monmaj         =  33+    wpausemsg        344     
ctcchan0       =  e8+    monmin         =  31+    writecfg8255   =  80+    
ctcchan1       =  e9+    moredrq          691     writesector      59a     
ctcchan2       =  ea+    morerd16         55e     wrlba            648     
ctcchan3       =  eb+    morerd16i        566     wrsec1           5ba     
curpbuf        =  48+    morewait         676     wrsnok           5e0     
cursoroff      =  20+    mprompt          231+    wrsok            5de+    
cursoron       =   a+    mscnt          =  f6+    zbits            271+    
cursshp        =  4a+    mzmac          =   1+    zci              320     
delay          =fd85+    nib2asc          240     zco              1fd     
delay1           416     nodchg           62f     zconv            1f0     
delay2           414     nokey            12f     zcrlf            264     
dly1           =fd89+    notpck           61d     zcsts            334     
dly2           =fd87+    ocrlf1           25a+    
dmasave          341     oslp0            24b     
