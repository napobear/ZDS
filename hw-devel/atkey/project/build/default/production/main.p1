Version 3.2 HI-TECH Software Intermediate Code
"1378 /opt/microchip/xc8/v1.31/include/pic16f628.h
[v _RA0 `Vb ~T0 @X0 0 e@40 ]
"1380
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
"1480
[v _TRISA1 `Vb ~T0 @X0 0 e@1065 ]
"1478
[v _TRISA0 `Vb ~T0 @X0 0 e@1064 ]
[v F599 `(v ~T0 @X0 1 tf1`ul ]
"154 /opt/microchip/xc8/v1.31/include/pic.h
[v __delay `JF599 ~T0 @X0 0 e ]
[p i __delay ]
[p mainexit ]
"741 /opt/microchip/xc8/v1.31/include/pic16f628.h
[v _CMCON `Vuc ~T0 @X0 0 e@31 ]
"1382
[v _RA2 `Vb ~T0 @X0 0 e@42 ]
"1482
[v _TRISA2 `Vb ~T0 @X0 0 e@1066 ]
"219
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"940
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1408
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
[; ;htc.h: 21: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 24: extern void __builtin_software_breakpoint(void);
[; ;pic16f628.h: 47: extern volatile unsigned char INDF @ 0x000;
"49 /opt/microchip/xc8/v1.31/include/pic16f628.h
[; ;pic16f628.h: 49: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f628.h: 53: extern volatile unsigned char TMR0 @ 0x001;
"55
[; ;pic16f628.h: 55: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f628.h: 59: extern volatile unsigned char PCL @ 0x002;
"61
[; ;pic16f628.h: 61: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f628.h: 65: extern volatile unsigned char STATUS @ 0x003;
"67
[; ;pic16f628.h: 67: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f628.h: 70: typedef union {
[; ;pic16f628.h: 71: struct {
[; ;pic16f628.h: 72: unsigned C :1;
[; ;pic16f628.h: 73: unsigned DC :1;
[; ;pic16f628.h: 74: unsigned Z :1;
[; ;pic16f628.h: 75: unsigned nPD :1;
[; ;pic16f628.h: 76: unsigned nTO :1;
[; ;pic16f628.h: 77: unsigned RP :2;
[; ;pic16f628.h: 78: unsigned IRP :1;
[; ;pic16f628.h: 79: };
[; ;pic16f628.h: 80: struct {
[; ;pic16f628.h: 81: unsigned :5;
[; ;pic16f628.h: 82: unsigned RP0 :1;
[; ;pic16f628.h: 83: unsigned RP1 :1;
[; ;pic16f628.h: 84: };
[; ;pic16f628.h: 85: struct {
[; ;pic16f628.h: 86: unsigned CARRY :1;
[; ;pic16f628.h: 87: };
[; ;pic16f628.h: 88: struct {
[; ;pic16f628.h: 89: unsigned :2;
[; ;pic16f628.h: 90: unsigned ZERO :1;
[; ;pic16f628.h: 91: };
[; ;pic16f628.h: 92: } STATUSbits_t;
[; ;pic16f628.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f628.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f628.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f628.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f628.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f628.h: 163: typedef union {
[; ;pic16f628.h: 164: struct {
[; ;pic16f628.h: 165: unsigned RA0 :1;
[; ;pic16f628.h: 166: unsigned RA1 :1;
[; ;pic16f628.h: 167: unsigned RA2 :1;
[; ;pic16f628.h: 168: unsigned RA3 :1;
[; ;pic16f628.h: 169: unsigned RA4 :1;
[; ;pic16f628.h: 170: unsigned RA5 :1;
[; ;pic16f628.h: 171: unsigned RA6 :1;
[; ;pic16f628.h: 172: unsigned RA7 :1;
[; ;pic16f628.h: 173: };
[; ;pic16f628.h: 174: } PORTAbits_t;
[; ;pic16f628.h: 175: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f628.h: 219: extern volatile unsigned char PORTB @ 0x006;
"221
[; ;pic16f628.h: 221: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f628.h: 224: typedef union {
[; ;pic16f628.h: 225: struct {
[; ;pic16f628.h: 226: unsigned RB0 :1;
[; ;pic16f628.h: 227: unsigned RB1 :1;
[; ;pic16f628.h: 228: unsigned RB2 :1;
[; ;pic16f628.h: 229: unsigned RB3 :1;
[; ;pic16f628.h: 230: unsigned RB4 :1;
[; ;pic16f628.h: 231: unsigned RB5 :1;
[; ;pic16f628.h: 232: unsigned RB6 :1;
[; ;pic16f628.h: 233: unsigned RB7 :1;
[; ;pic16f628.h: 234: };
[; ;pic16f628.h: 235: } PORTBbits_t;
[; ;pic16f628.h: 236: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f628.h: 280: extern volatile unsigned char PCLATH @ 0x00A;
"282
[; ;pic16f628.h: 282: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f628.h: 285: typedef union {
[; ;pic16f628.h: 286: struct {
[; ;pic16f628.h: 287: unsigned PCLATH :5;
[; ;pic16f628.h: 288: };
[; ;pic16f628.h: 289: } PCLATHbits_t;
[; ;pic16f628.h: 290: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f628.h: 299: extern volatile unsigned char INTCON @ 0x00B;
"301
[; ;pic16f628.h: 301: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f628.h: 304: typedef union {
[; ;pic16f628.h: 305: struct {
[; ;pic16f628.h: 306: unsigned RBIF :1;
[; ;pic16f628.h: 307: unsigned INTF :1;
[; ;pic16f628.h: 308: unsigned T0IF :1;
[; ;pic16f628.h: 309: unsigned RBIE :1;
[; ;pic16f628.h: 310: unsigned INTE :1;
[; ;pic16f628.h: 311: unsigned T0IE :1;
[; ;pic16f628.h: 312: unsigned PEIE :1;
[; ;pic16f628.h: 313: unsigned GIE :1;
[; ;pic16f628.h: 314: };
[; ;pic16f628.h: 315: struct {
[; ;pic16f628.h: 316: unsigned :2;
[; ;pic16f628.h: 317: unsigned TMR0IF :1;
[; ;pic16f628.h: 318: unsigned :2;
[; ;pic16f628.h: 319: unsigned TMR0IE :1;
[; ;pic16f628.h: 320: };
[; ;pic16f628.h: 321: } INTCONbits_t;
[; ;pic16f628.h: 322: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f628.h: 376: extern volatile unsigned char PIR1 @ 0x00C;
"378
[; ;pic16f628.h: 378: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f628.h: 381: typedef union {
[; ;pic16f628.h: 382: struct {
[; ;pic16f628.h: 383: unsigned TMR1IF :1;
[; ;pic16f628.h: 384: unsigned TMR2IF :1;
[; ;pic16f628.h: 385: unsigned CCP1IF :1;
[; ;pic16f628.h: 386: unsigned :1;
[; ;pic16f628.h: 387: unsigned TXIF :1;
[; ;pic16f628.h: 388: unsigned RCIF :1;
[; ;pic16f628.h: 389: unsigned CMIF :1;
[; ;pic16f628.h: 390: unsigned EEIF :1;
[; ;pic16f628.h: 391: };
[; ;pic16f628.h: 392: } PIR1bits_t;
[; ;pic16f628.h: 393: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f628.h: 432: extern volatile unsigned short TMR1 @ 0x00E;
"434
[; ;pic16f628.h: 434: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f628.h: 438: extern volatile unsigned char TMR1L @ 0x00E;
"440
[; ;pic16f628.h: 440: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f628.h: 444: extern volatile unsigned char TMR1H @ 0x00F;
"446
[; ;pic16f628.h: 446: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f628.h: 450: extern volatile unsigned char T1CON @ 0x010;
"452
[; ;pic16f628.h: 452: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f628.h: 455: typedef union {
[; ;pic16f628.h: 456: struct {
[; ;pic16f628.h: 457: unsigned TMR1ON :1;
[; ;pic16f628.h: 458: unsigned TMR1CS :1;
[; ;pic16f628.h: 459: unsigned nT1SYNC :1;
[; ;pic16f628.h: 460: unsigned T1OSCEN :1;
[; ;pic16f628.h: 461: unsigned T1CKPS :2;
[; ;pic16f628.h: 462: };
[; ;pic16f628.h: 463: struct {
[; ;pic16f628.h: 464: unsigned :4;
[; ;pic16f628.h: 465: unsigned T1CKPS0 :1;
[; ;pic16f628.h: 466: unsigned T1CKPS1 :1;
[; ;pic16f628.h: 467: };
[; ;pic16f628.h: 468: } T1CONbits_t;
[; ;pic16f628.h: 469: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f628.h: 508: extern volatile unsigned char TMR2 @ 0x011;
"510
[; ;pic16f628.h: 510: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f628.h: 514: extern volatile unsigned char T2CON @ 0x012;
"516
[; ;pic16f628.h: 516: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f628.h: 519: typedef union {
[; ;pic16f628.h: 520: struct {
[; ;pic16f628.h: 521: unsigned T2CKPS :2;
[; ;pic16f628.h: 522: unsigned TMR2ON :1;
[; ;pic16f628.h: 523: unsigned TOUTPS :4;
[; ;pic16f628.h: 524: };
[; ;pic16f628.h: 525: struct {
[; ;pic16f628.h: 526: unsigned T2CKPS0 :1;
[; ;pic16f628.h: 527: unsigned T2CKPS1 :1;
[; ;pic16f628.h: 528: unsigned :1;
[; ;pic16f628.h: 529: unsigned TOUTPS0 :1;
[; ;pic16f628.h: 530: unsigned TOUTPS1 :1;
[; ;pic16f628.h: 531: unsigned TOUTPS2 :1;
[; ;pic16f628.h: 532: unsigned TOUTPS3 :1;
[; ;pic16f628.h: 533: };
[; ;pic16f628.h: 534: } T2CONbits_t;
[; ;pic16f628.h: 535: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f628.h: 584: extern volatile unsigned short CCPR1 @ 0x015;
"586
[; ;pic16f628.h: 586: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f628.h: 590: extern volatile unsigned char CCPR1L @ 0x015;
"592
[; ;pic16f628.h: 592: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f628.h: 596: extern volatile unsigned char CCPR1H @ 0x016;
"598
[; ;pic16f628.h: 598: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f628.h: 602: extern volatile unsigned char CCP1CON @ 0x017;
"604
[; ;pic16f628.h: 604: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f628.h: 607: typedef union {
[; ;pic16f628.h: 608: struct {
[; ;pic16f628.h: 609: unsigned CCP1M :4;
[; ;pic16f628.h: 610: unsigned CCP1Y :1;
[; ;pic16f628.h: 611: unsigned CCP1X :1;
[; ;pic16f628.h: 612: };
[; ;pic16f628.h: 613: struct {
[; ;pic16f628.h: 614: unsigned CCP1M0 :1;
[; ;pic16f628.h: 615: unsigned CCP1M1 :1;
[; ;pic16f628.h: 616: unsigned CCP1M2 :1;
[; ;pic16f628.h: 617: unsigned CCP1M3 :1;
[; ;pic16f628.h: 618: };
[; ;pic16f628.h: 619: } CCP1CONbits_t;
[; ;pic16f628.h: 620: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f628.h: 659: extern volatile unsigned char RCSTA @ 0x018;
"661
[; ;pic16f628.h: 661: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f628.h: 664: typedef union {
[; ;pic16f628.h: 665: struct {
[; ;pic16f628.h: 666: unsigned RX9D :1;
[; ;pic16f628.h: 667: unsigned OERR :1;
[; ;pic16f628.h: 668: unsigned FERR :1;
[; ;pic16f628.h: 669: unsigned ADEN :1;
[; ;pic16f628.h: 670: unsigned CREN :1;
[; ;pic16f628.h: 671: unsigned SREN :1;
[; ;pic16f628.h: 672: unsigned RX9 :1;
[; ;pic16f628.h: 673: unsigned SPEN :1;
[; ;pic16f628.h: 674: };
[; ;pic16f628.h: 675: struct {
[; ;pic16f628.h: 676: unsigned :3;
[; ;pic16f628.h: 677: unsigned ADDEN :1;
[; ;pic16f628.h: 678: };
[; ;pic16f628.h: 679: } RCSTAbits_t;
[; ;pic16f628.h: 680: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f628.h: 729: extern volatile unsigned char TXREG @ 0x019;
"731
[; ;pic16f628.h: 731: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f628.h: 735: extern volatile unsigned char RCREG @ 0x01A;
"737
[; ;pic16f628.h: 737: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f628.h: 741: extern volatile unsigned char CMCON @ 0x01F;
"743
[; ;pic16f628.h: 743: asm("CMCON equ 01Fh");
[; <" CMCON equ 01Fh ;# ">
[; ;pic16f628.h: 746: typedef union {
[; ;pic16f628.h: 747: struct {
[; ;pic16f628.h: 748: unsigned CM :3;
[; ;pic16f628.h: 749: unsigned CIS :1;
[; ;pic16f628.h: 750: unsigned C1INV :1;
[; ;pic16f628.h: 751: unsigned C2INV :1;
[; ;pic16f628.h: 752: unsigned C1OUT :1;
[; ;pic16f628.h: 753: unsigned C2OUT :1;
[; ;pic16f628.h: 754: };
[; ;pic16f628.h: 755: struct {
[; ;pic16f628.h: 756: unsigned CM0 :1;
[; ;pic16f628.h: 757: unsigned CM1 :1;
[; ;pic16f628.h: 758: unsigned CM2 :1;
[; ;pic16f628.h: 759: };
[; ;pic16f628.h: 760: } CMCONbits_t;
[; ;pic16f628.h: 761: extern volatile CMCONbits_t CMCONbits @ 0x01F;
[; ;pic16f628.h: 810: extern volatile unsigned char OPTION_REG @ 0x081;
"812
[; ;pic16f628.h: 812: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f628.h: 815: typedef union {
[; ;pic16f628.h: 816: struct {
[; ;pic16f628.h: 817: unsigned PS :3;
[; ;pic16f628.h: 818: unsigned PSA :1;
[; ;pic16f628.h: 819: unsigned T0SE :1;
[; ;pic16f628.h: 820: unsigned T0CS :1;
[; ;pic16f628.h: 821: unsigned INTEDG :1;
[; ;pic16f628.h: 822: unsigned nRBPU :1;
[; ;pic16f628.h: 823: };
[; ;pic16f628.h: 824: struct {
[; ;pic16f628.h: 825: unsigned PS0 :1;
[; ;pic16f628.h: 826: unsigned PS1 :1;
[; ;pic16f628.h: 827: unsigned PS2 :1;
[; ;pic16f628.h: 828: };
[; ;pic16f628.h: 829: } OPTION_REGbits_t;
[; ;pic16f628.h: 830: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f628.h: 879: extern volatile unsigned char TRISA @ 0x085;
"881
[; ;pic16f628.h: 881: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f628.h: 884: typedef union {
[; ;pic16f628.h: 885: struct {
[; ;pic16f628.h: 886: unsigned TRISA0 :1;
[; ;pic16f628.h: 887: unsigned TRISA1 :1;
[; ;pic16f628.h: 888: unsigned TRISA2 :1;
[; ;pic16f628.h: 889: unsigned TRISA3 :1;
[; ;pic16f628.h: 890: unsigned TRISA4 :1;
[; ;pic16f628.h: 891: unsigned TRISA5 :1;
[; ;pic16f628.h: 892: unsigned TRISA6 :1;
[; ;pic16f628.h: 893: unsigned TRISA7 :1;
[; ;pic16f628.h: 894: };
[; ;pic16f628.h: 895: } TRISAbits_t;
[; ;pic16f628.h: 896: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f628.h: 940: extern volatile unsigned char TRISB @ 0x086;
"942
[; ;pic16f628.h: 942: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f628.h: 945: typedef union {
[; ;pic16f628.h: 946: struct {
[; ;pic16f628.h: 947: unsigned TRISB0 :1;
[; ;pic16f628.h: 948: unsigned TRISB1 :1;
[; ;pic16f628.h: 949: unsigned TRISB2 :1;
[; ;pic16f628.h: 950: unsigned TRISB3 :1;
[; ;pic16f628.h: 951: unsigned TRISB4 :1;
[; ;pic16f628.h: 952: unsigned TRISB5 :1;
[; ;pic16f628.h: 953: unsigned TRISB6 :1;
[; ;pic16f628.h: 954: unsigned TRISB7 :1;
[; ;pic16f628.h: 955: };
[; ;pic16f628.h: 956: } TRISBbits_t;
[; ;pic16f628.h: 957: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f628.h: 1001: extern volatile unsigned char PIE1 @ 0x08C;
"1003
[; ;pic16f628.h: 1003: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f628.h: 1006: typedef union {
[; ;pic16f628.h: 1007: struct {
[; ;pic16f628.h: 1008: unsigned TMR1IE :1;
[; ;pic16f628.h: 1009: unsigned TMR2IE :1;
[; ;pic16f628.h: 1010: unsigned CCP1IE :1;
[; ;pic16f628.h: 1011: unsigned :1;
[; ;pic16f628.h: 1012: unsigned TXIE :1;
[; ;pic16f628.h: 1013: unsigned RCIE :1;
[; ;pic16f628.h: 1014: unsigned CMIE :1;
[; ;pic16f628.h: 1015: unsigned EEIE :1;
[; ;pic16f628.h: 1016: };
[; ;pic16f628.h: 1017: } PIE1bits_t;
[; ;pic16f628.h: 1018: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f628.h: 1057: extern volatile unsigned char PCON @ 0x08E;
"1059
[; ;pic16f628.h: 1059: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f628.h: 1062: typedef union {
[; ;pic16f628.h: 1063: struct {
[; ;pic16f628.h: 1064: unsigned nBOR :1;
[; ;pic16f628.h: 1065: unsigned nPOR :1;
[; ;pic16f628.h: 1066: unsigned :1;
[; ;pic16f628.h: 1067: unsigned OSCF :1;
[; ;pic16f628.h: 1068: };
[; ;pic16f628.h: 1069: struct {
[; ;pic16f628.h: 1070: unsigned nBO :1;
[; ;pic16f628.h: 1071: };
[; ;pic16f628.h: 1072: struct {
[; ;pic16f628.h: 1073: unsigned nBOD :1;
[; ;pic16f628.h: 1074: };
[; ;pic16f628.h: 1075: } PCONbits_t;
[; ;pic16f628.h: 1076: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f628.h: 1105: extern volatile unsigned char PR2 @ 0x092;
"1107
[; ;pic16f628.h: 1107: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f628.h: 1111: extern volatile unsigned char TXSTA @ 0x098;
"1113
[; ;pic16f628.h: 1113: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f628.h: 1116: typedef union {
[; ;pic16f628.h: 1117: struct {
[; ;pic16f628.h: 1118: unsigned TX9D :1;
[; ;pic16f628.h: 1119: unsigned TRMT :1;
[; ;pic16f628.h: 1120: unsigned BRGH :1;
[; ;pic16f628.h: 1121: unsigned :1;
[; ;pic16f628.h: 1122: unsigned SYNC :1;
[; ;pic16f628.h: 1123: unsigned TXEN :1;
[; ;pic16f628.h: 1124: unsigned TX9 :1;
[; ;pic16f628.h: 1125: unsigned CSRC :1;
[; ;pic16f628.h: 1126: };
[; ;pic16f628.h: 1127: } TXSTAbits_t;
[; ;pic16f628.h: 1128: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f628.h: 1167: extern volatile unsigned char SPBRG @ 0x099;
"1169
[; ;pic16f628.h: 1169: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f628.h: 1173: extern volatile unsigned char EEDATA @ 0x09A;
"1175
[; ;pic16f628.h: 1175: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f628.h: 1179: extern volatile unsigned char EEADR @ 0x09B;
"1181
[; ;pic16f628.h: 1181: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f628.h: 1185: extern volatile unsigned char EECON1 @ 0x09C;
"1187
[; ;pic16f628.h: 1187: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f628.h: 1190: typedef union {
[; ;pic16f628.h: 1191: struct {
[; ;pic16f628.h: 1192: unsigned RD :1;
[; ;pic16f628.h: 1193: unsigned WR :1;
[; ;pic16f628.h: 1194: unsigned WREN :1;
[; ;pic16f628.h: 1195: unsigned WRERR :1;
[; ;pic16f628.h: 1196: };
[; ;pic16f628.h: 1197: } EECON1bits_t;
[; ;pic16f628.h: 1198: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic16f628.h: 1222: extern volatile unsigned char EECON2 @ 0x09D;
"1224
[; ;pic16f628.h: 1224: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f628.h: 1228: extern volatile unsigned char VRCON @ 0x09F;
"1230
[; ;pic16f628.h: 1230: asm("VRCON equ 09Fh");
[; <" VRCON equ 09Fh ;# ">
[; ;pic16f628.h: 1233: typedef union {
[; ;pic16f628.h: 1234: struct {
[; ;pic16f628.h: 1235: unsigned VR :4;
[; ;pic16f628.h: 1236: unsigned :1;
[; ;pic16f628.h: 1237: unsigned VRR :1;
[; ;pic16f628.h: 1238: unsigned VROE :1;
[; ;pic16f628.h: 1239: unsigned VREN :1;
[; ;pic16f628.h: 1240: };
[; ;pic16f628.h: 1241: struct {
[; ;pic16f628.h: 1242: unsigned VR0 :1;
[; ;pic16f628.h: 1243: unsigned VR1 :1;
[; ;pic16f628.h: 1244: unsigned VR2 :1;
[; ;pic16f628.h: 1245: unsigned VR3 :1;
[; ;pic16f628.h: 1246: };
[; ;pic16f628.h: 1247: } VRCONbits_t;
[; ;pic16f628.h: 1248: extern volatile VRCONbits_t VRCONbits @ 0x09F;
[; ;pic16f628.h: 1298: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628.h: 1300: extern volatile __bit ADEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628.h: 1302: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f628.h: 1304: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f628.h: 1306: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f628.h: 1308: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f628.h: 1310: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f628.h: 1312: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f628.h: 1314: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f628.h: 1316: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f628.h: 1318: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f628.h: 1320: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f628.h: 1322: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f628.h: 1324: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f628.h: 1326: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f628.h: 1328: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f628.h: 1330: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f628.h: 1332: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f628.h: 1334: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f628.h: 1336: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f628.h: 1338: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f628.h: 1340: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f628.h: 1342: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f628.h: 1344: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f628.h: 1346: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f628.h: 1348: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f628.h: 1350: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f628.h: 1352: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f628.h: 1354: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f628.h: 1356: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f628.h: 1358: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f628.h: 1360: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f628.h: 1362: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f628.h: 1364: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f628.h: 1366: extern volatile __bit OSCF @ (((unsigned) &PCON)*8) + 3;
[; ;pic16f628.h: 1368: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f628.h: 1370: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f628.h: 1372: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f628.h: 1374: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f628.h: 1376: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f628.h: 1378: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f628.h: 1380: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f628.h: 1382: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f628.h: 1384: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f628.h: 1386: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f628.h: 1388: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f628.h: 1390: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f628.h: 1392: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f628.h: 1394: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f628.h: 1396: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f628.h: 1398: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f628.h: 1400: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f628.h: 1402: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f628.h: 1404: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f628.h: 1406: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f628.h: 1408: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f628.h: 1410: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f628.h: 1412: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f628.h: 1414: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f628.h: 1416: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f628.h: 1418: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f628.h: 1420: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f628.h: 1422: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f628.h: 1424: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f628.h: 1426: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f628.h: 1428: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f628.h: 1430: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f628.h: 1432: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f628.h: 1434: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f628.h: 1436: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628.h: 1438: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628.h: 1440: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f628.h: 1442: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f628.h: 1444: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f628.h: 1446: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f628.h: 1448: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f628.h: 1450: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f628.h: 1452: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628.h: 1454: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628.h: 1456: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f628.h: 1458: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f628.h: 1460: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f628.h: 1462: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f628.h: 1464: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f628.h: 1466: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f628.h: 1468: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f628.h: 1470: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f628.h: 1472: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f628.h: 1474: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f628.h: 1476: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f628.h: 1478: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f628.h: 1480: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f628.h: 1482: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f628.h: 1484: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f628.h: 1486: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f628.h: 1488: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f628.h: 1490: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f628.h: 1492: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f628.h: 1494: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f628.h: 1496: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f628.h: 1498: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f628.h: 1500: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f628.h: 1502: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f628.h: 1504: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f628.h: 1506: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f628.h: 1508: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f628.h: 1510: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f628.h: 1512: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f628.h: 1514: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f628.h: 1516: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f628.h: 1518: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f628.h: 1520: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f628.h: 1522: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f628.h: 1524: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f628.h: 1526: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f628.h: 1528: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f628.h: 1530: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f628.h: 1532: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f628.h: 1534: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f628.h: 1536: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f628.h: 1538: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f628.h: 1540: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f628.h: 1542: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f628.h: 1544: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628.h: 1546: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628.h: 1548: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628.h: 1550: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f628.h: 1552: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f628.h: 1554: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f628.h: 1556: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f628.h: 1558: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 144: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 154: extern __nonreentrant void _delay(unsigned long);
"15 main.c
[p x FOSC=INTOSCIO ]
"16
[p x WDTE=OFF ]
"17
[p x PWRTE=ON ]
"18
[p x MCLRE=OFF ]
"19
[p x BOREN=ON ]
"20
[p x LVP=OFF ]
"21
[p x CPD=OFF ]
"22
[p x CP=OFF ]
"56
[v _ctrlAscii `Cuc ~T0 @X0 -> 0 `x e ]
[i _ctrlAscii
:U ..
"58
-> -> 10 `i `uc
-> -> 28 `i `uc
-> -> 0 `i `uc
"59
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 17 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 26 `i `uc
-> -> 19 `i `uc
-> -> 1 `i `uc
-> -> 23 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"60
-> -> 0 `i `uc
-> -> 3 `i `uc
-> -> 24 `i `uc
-> -> 4 `i `uc
-> -> 5 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 32 `ui `uc
-> -> 22 `i `uc
-> -> 6 `i `uc
-> -> 20 `i `uc
-> -> 18 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"61
-> -> 0 `i `uc
-> -> 14 `i `uc
-> -> 2 `i `uc
-> -> 8 `i `uc
-> -> 7 `i `uc
-> -> 25 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 13 `i `uc
-> -> 10 `i `uc
-> -> 21 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"62
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 11 `i `uc
-> -> 9 `i `uc
-> -> 15 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 12 `i `uc
-> -> 0 `i `uc
-> -> 16 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"63
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 27 `i `uc
-> -> 30 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 13 `i `uc
-> -> 29 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"64
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"65
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 27 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"69
-> -> 10 `i `uc
-> -> 30 `i `uc
-> -> 0 `i `uc
"70
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 17 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 26 `i `uc
-> -> 19 `i `uc
-> -> 1 `i `uc
-> -> 23 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"71
-> -> 0 `i `uc
-> -> 3 `i `uc
-> -> 24 `i `uc
-> -> 4 `i `uc
-> -> 5 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 32 `ui `uc
-> -> 22 `i `uc
-> -> 6 `i `uc
-> -> 20 `i `uc
-> -> 18 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"72
-> -> 0 `i `uc
-> -> 14 `i `uc
-> -> 2 `i `uc
-> -> 8 `i `uc
-> -> 7 `i `uc
-> -> 25 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 13 `i `uc
-> -> 10 `i `uc
-> -> 21 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"73
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 11 `i `uc
-> -> 9 `i `uc
-> -> 15 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 12 `i `uc
-> -> 0 `i `uc
-> -> 16 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"74
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 27 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 13 `i `uc
-> -> 29 `i `uc
-> -> 0 `i `uc
-> -> 28 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"75
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"76
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 27 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[; ;main.c: 56: const unsigned char ctrlAscii[] = {
[; ;main.c: 58: 10, 28,0,
[; ;main.c: 59: 0, 0, 0, 0, 0, 17, 0,0,0, 0, 26, 19, 1, 23, 0,0,
[; ;main.c: 60: 0, 3, 24, 4, 5, 0, 0,0,0,' ', 22, 6, 20, 18, 0,0,
[; ;main.c: 61: 0, 14, 2, 8, 7, 25, 0,0,0, 0, 13, 10, 21, 0, 0,0,
[; ;main.c: 62: 0, 0, 11, 9, 15, 0, 0,0,0, 0, 0, 12, 0, 16, 0,0,
[; ;main.c: 63: 0, 0, 0, 0, 27, 30, 0,0,0, 0, 13, 29, 0, 0, 0,0,
[; ;main.c: 64: 0, 0, 0, 0, 0, 0, 8,0,0, 0, 0, 0, 0, 0, 0,0,
[; ;main.c: 65: 0, 0, 0, 0, 0, 0, 27,0,0, 0, 0, 0, 0, 0,
[; ;main.c: 69: 10, 30,0,
[; ;main.c: 70: 0, 0, 0, 0, 0, 17, 0,0,0, 0, 26, 19, 1, 23, 0,0,
[; ;main.c: 71: 0, 3, 24, 4, 5, 0, 0,0,0,' ', 22, 6, 20, 18, 0,0,
[; ;main.c: 72: 0, 14, 2, 8, 7, 25, 0,0,0, 0, 13, 10, 21, 0, 0,0,
[; ;main.c: 73: 0, 0, 11, 9, 15, 0, 0,0,0, 0, 0, 12, 0, 16, 0,0,
[; ;main.c: 74: 0, 0, 0, 0, 27, 0, 0,0,0, 0, 13, 29, 0, 28, 0,0,
[; ;main.c: 75: 0, 0, 0, 0, 0, 0, 8,0,0, 0, 0, 0, 0, 0, 0,0,
[; ;main.c: 76: 0, 0, 0, 0, 0, 0, 27,0,0, 0, 0, 0, 0, 0};
"82
[v _shiftAscii `Cuc ~T0 @X0 -> 0 `x e ]
[i _shiftAscii
:U ..
"84
-> -> 10 `i `uc
-> -> 124 `ui `uc
-> -> 0 `i `uc
"85
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 81 `ui `uc
-> -> 33 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 90 `ui `uc
-> -> 83 `ui `uc
-> -> 65 `ui `uc
-> -> 87 `ui `uc
-> -> 34 `ui `uc
-> -> 0 `i `uc
"86
-> -> 0 `i `uc
-> -> 67 `ui `uc
-> -> 88 `ui `uc
-> -> 68 `ui `uc
-> -> 69 `ui `uc
-> -> 36 `ui `uc
-> -> 35 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 32 `ui `uc
-> -> 86 `ui `uc
-> -> 70 `ui `uc
-> -> 84 `ui `uc
-> -> 82 `ui `uc
-> -> 37 `ui `uc
-> -> 0 `i `uc
"87
-> -> 0 `i `uc
-> -> 78 `ui `uc
-> -> 66 `ui `uc
-> -> 72 `ui `uc
-> -> 71 `ui `uc
-> -> 89 `ui `uc
-> -> 38 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 77 `ui `uc
-> -> 74 `ui `uc
-> -> 85 `ui `uc
-> -> 47 `ui `uc
-> -> 40 `ui `uc
-> -> 0 `i `uc
"88
-> -> 0 `i `uc
-> -> 59 `ui `uc
-> -> 75 `ui `uc
-> -> 73 `ui `uc
-> -> 79 `ui `uc
-> -> 61 `ui `uc
-> -> 41 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 58 `ui `uc
-> -> 95 `ui `uc
-> -> 76 `ui `uc
-> -> 96 `ui `uc
-> -> 80 `ui `uc
-> -> 63 `ui `uc
-> -> 0 `i `uc
"89
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 42 `ui `uc
-> -> 0 `i `uc
-> -> 123 `ui `uc
-> -> 126 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 13 `i `uc
-> -> 125 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"90
-> -> 0 `i `uc
-> -> 62 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 49 `ui `uc
-> -> 0 `i `uc
-> -> 52 `ui `uc
-> -> 55 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"91
-> -> 48 `ui `uc
-> -> 46 `ui `uc
-> -> 50 `ui `uc
-> -> 53 `ui `uc
-> -> 54 `ui `uc
-> -> 56 `ui `uc
-> -> 27 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 43 `ui `uc
-> -> 51 `ui `uc
-> -> 45 `ui `uc
-> -> 42 `ui `uc
-> -> 57 `ui `uc
"95
-> -> 10 `i `uc
-> -> 126 `ui `uc
-> -> 0 `i `uc
"96
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 81 `ui `uc
-> -> 33 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 90 `ui `uc
-> -> 83 `ui `uc
-> -> 65 `ui `uc
-> -> 87 `ui `uc
-> -> 64 `ui `uc
-> -> 0 `i `uc
"97
-> -> 0 `i `uc
-> -> 67 `ui `uc
-> -> 88 `ui `uc
-> -> 68 `ui `uc
-> -> 69 `ui `uc
-> -> 36 `ui `uc
-> -> 35 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 32 `ui `uc
-> -> 86 `ui `uc
-> -> 70 `ui `uc
-> -> 84 `ui `uc
-> -> 82 `ui `uc
-> -> 37 `ui `uc
-> -> 0 `i `uc
"98
-> -> 0 `i `uc
-> -> 78 `ui `uc
-> -> 66 `ui `uc
-> -> 72 `ui `uc
-> -> 71 `ui `uc
-> -> 89 `ui `uc
-> -> 94 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 77 `ui `uc
-> -> 74 `ui `uc
-> -> 85 `ui `uc
-> -> 38 `ui `uc
-> -> 42 `ui `uc
-> -> 0 `i `uc
"99
-> -> 0 `i `uc
-> -> 60 `ui `uc
-> -> 75 `ui `uc
-> -> 73 `ui `uc
-> -> 79 `ui `uc
-> -> 41 `ui `uc
-> -> 40 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 62 `ui `uc
-> -> 63 `ui `uc
-> -> 76 `ui `uc
-> -> 58 `ui `uc
-> -> 80 `ui `uc
-> -> 95 `ui `uc
-> -> 0 `i `uc
"100
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 34 `ui `uc
-> -> 0 `i `uc
-> -> 123 `ui `uc
-> -> 43 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 13 `i `uc
-> -> 125 `ui `uc
-> -> 0 `i `uc
-> -> 124 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"101
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 49 `ui `uc
-> -> 0 `i `uc
-> -> 52 `ui `uc
-> -> 55 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"102
-> -> 48 `ui `uc
-> -> 46 `ui `uc
-> -> 50 `ui `uc
-> -> 53 `ui `uc
-> -> 54 `ui `uc
-> -> 56 `ui `uc
-> -> 27 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 43 `ui `uc
-> -> 51 `ui `uc
-> -> 45 `ui `uc
-> -> 42 `ui `uc
-> -> 57 `ui `uc
..
]
[; ;main.c: 82: const unsigned char shiftAscii[] = {
[; ;main.c: 84: 10,'|',0,
[; ;main.c: 85: 0, 0, 0, 0, 0,'Q','!',0,0, 0,'Z','S','A','W','"',0,
[; ;main.c: 86: 0,'C','X','D','E','$','#',0,0,' ','V','F','T','R','%',0,
[; ;main.c: 87: 0,'N','B','H','G','Y','&',0,0, 0,'M','J','U','/','(',0,
[; ;main.c: 88: 0,';','K','I','O','=',')',0,0,':','_','L','`','P','?',0,
[; ;main.c: 89: 0, 0,'*', 0,'{','~', 0,0,0, 0, 13,'}', 0, 0, 0,0,
[; ;main.c: 90: 0,'>', 0, 0, 0, 0, 8,0,0,'1', 0,'4','7', 0, 0,0,
[; ;main.c: 91: '0','.','2','5','6','8', 27,0,0,'+','3','-','*','9',
[; ;main.c: 95: 10,'~',0,
[; ;main.c: 96: 0, 0, 0, 0, 0,'Q','!',0,0, 0,'Z','S','A','W','@',0,
[; ;main.c: 97: 0,'C','X','D','E','$','#',0,0,' ','V','F','T','R','%',0,
[; ;main.c: 98: 0,'N','B','H','G','Y','^',0,0, 0,'M','J','U','&','*',0,
[; ;main.c: 99: 0,'<','K','I','O',')','(',0,0,'>','?','L',':','P','_',0,
[; ;main.c: 100: 0, 0,'"', 0,'{','+', 0,0,0, 0, 13,'}', 0,'|', 0,0,
[; ;main.c: 101: 0, 0, 0, 0, 0, 0, 8,0,0,'1', 0,'4','7', 0, 0,0,
[; ;main.c: 102: '0','.','2','5','6','8', 27,0,0,'+','3','-','*','9'};
"108
[v _normalAscii `Cuc ~T0 @X0 -> 0 `x e ]
[i _normalAscii
:U ..
"110
-> -> 10 `i `uc
-> -> 92 `i `uc
-> -> 0 `i `uc
"111
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 113 `ui `uc
-> -> 49 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 122 `ui `uc
-> -> 115 `ui `uc
-> -> 97 `ui `uc
-> -> 119 `ui `uc
-> -> 50 `ui `uc
-> -> 0 `i `uc
"112
-> -> 0 `i `uc
-> -> 99 `ui `uc
-> -> 120 `ui `uc
-> -> 100 `ui `uc
-> -> 101 `ui `uc
-> -> 52 `ui `uc
-> -> 51 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 32 `ui `uc
-> -> 118 `ui `uc
-> -> 102 `ui `uc
-> -> 116 `ui `uc
-> -> 114 `ui `uc
-> -> 53 `ui `uc
-> -> 0 `i `uc
"113
-> -> 0 `i `uc
-> -> 110 `ui `uc
-> -> 98 `ui `uc
-> -> 104 `ui `uc
-> -> 103 `ui `uc
-> -> 121 `ui `uc
-> -> 54 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 109 `ui `uc
-> -> 106 `ui `uc
-> -> 117 `ui `uc
-> -> 55 `ui `uc
-> -> 56 `ui `uc
-> -> 0 `i `uc
"114
-> -> 0 `i `uc
-> -> 44 `ui `uc
-> -> 107 `ui `uc
-> -> 105 `ui `uc
-> -> 111 `ui `uc
-> -> 48 `ui `uc
-> -> 57 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 46 `ui `uc
-> -> 45 `ui `uc
-> -> 108 `ui `uc
-> -> 64 `ui `uc
-> -> 112 `ui `uc
-> -> 39 `i `uc
-> -> 0 `i `uc
"115
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 43 `ui `uc
-> -> 0 `i `uc
-> -> 91 `ui `uc
-> -> 94 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 13 `i `uc
-> -> 93 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"116
-> -> 0 `i `uc
-> -> 60 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 49 `ui `uc
-> -> 0 `i `uc
-> -> 52 `ui `uc
-> -> 55 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"117
-> -> 48 `ui `uc
-> -> 46 `ui `uc
-> -> 50 `ui `uc
-> -> 53 `ui `uc
-> -> 54 `ui `uc
-> -> 56 `ui `uc
-> -> 27 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 43 `ui `uc
-> -> 51 `ui `uc
-> -> 45 `ui `uc
-> -> 42 `ui `uc
-> -> 57 `ui `uc
"121
-> -> 10 `i `uc
-> -> 96 `ui `uc
-> -> 0 `i `uc
"122
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 113 `ui `uc
-> -> 49 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 122 `ui `uc
-> -> 115 `ui `uc
-> -> 97 `ui `uc
-> -> 119 `ui `uc
-> -> 50 `ui `uc
-> -> 0 `i `uc
"123
-> -> 0 `i `uc
-> -> 99 `ui `uc
-> -> 120 `ui `uc
-> -> 100 `ui `uc
-> -> 101 `ui `uc
-> -> 52 `ui `uc
-> -> 51 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 32 `ui `uc
-> -> 118 `ui `uc
-> -> 102 `ui `uc
-> -> 116 `ui `uc
-> -> 114 `ui `uc
-> -> 53 `ui `uc
-> -> 0 `i `uc
"124
-> -> 0 `i `uc
-> -> 110 `ui `uc
-> -> 98 `ui `uc
-> -> 104 `ui `uc
-> -> 103 `ui `uc
-> -> 121 `ui `uc
-> -> 54 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 109 `ui `uc
-> -> 106 `ui `uc
-> -> 117 `ui `uc
-> -> 55 `ui `uc
-> -> 56 `ui `uc
-> -> 0 `i `uc
"125
-> -> 0 `i `uc
-> -> 44 `ui `uc
-> -> 107 `ui `uc
-> -> 105 `ui `uc
-> -> 111 `ui `uc
-> -> 48 `ui `uc
-> -> 57 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 46 `ui `uc
-> -> 47 `ui `uc
-> -> 108 `ui `uc
-> -> 59 `ui `uc
-> -> 112 `ui `uc
-> -> 45 `ui `uc
-> -> 0 `i `uc
"126
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 39 `i `uc
-> -> 0 `i `uc
-> -> 91 `ui `uc
-> -> 61 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 13 `i `uc
-> -> 93 `ui `uc
-> -> 0 `i `uc
-> -> 92 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"127
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 49 `ui `uc
-> -> 0 `i `uc
-> -> 52 `ui `uc
-> -> 55 `ui `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"128
-> -> 48 `ui `uc
-> -> 46 `ui `uc
-> -> 50 `ui `uc
-> -> 53 `ui `uc
-> -> 54 `ui `uc
-> -> 56 `ui `uc
-> -> 27 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 43 `ui `uc
-> -> 51 `ui `uc
-> -> 45 `ui `uc
-> -> 42 `ui `uc
-> -> 57 `ui `uc
..
]
[; ;main.c: 108: const unsigned char normalAscii[] = {
[; ;main.c: 110: 10, 92,0,
[; ;main.c: 111: 0, 0, 0, 0, 0,'q','1',0,0, 0,'z','s','a','w','2',0,
[; ;main.c: 112: 0,'c','x','d','e','4','3',0,0,' ','v','f','t','r','5',0,
[; ;main.c: 113: 0,'n','b','h','g','y','6',0,0, 0,'m','j','u','7','8',0,
[; ;main.c: 114: 0,',','k','i','o','0','9',0,0,'.','-','l','@','p', 39,0,
[; ;main.c: 115: 0, 0,'+', 0,'[','^', 0,0,0, 0, 13,']', 0, 0, 0,0,
[; ;main.c: 116: 0,'<', 0, 0, 0, 0, 8,0,0,'1', 0,'4','7', 0, 0,0,
[; ;main.c: 117: '0','.','2','5','6','8', 27,0,0,'+','3','-','*','9',
[; ;main.c: 121: 10,'`',0,
[; ;main.c: 122: 0, 0, 0, 0, 0,'q','1',0,0, 0,'z','s','a','w','2',0,
[; ;main.c: 123: 0,'c','x','d','e','4','3',0,0,' ','v','f','t','r','5',0,
[; ;main.c: 124: 0,'n','b','h','g','y','6',0,0, 0,'m','j','u','7','8',0,
[; ;main.c: 125: 0,',','k','i','o','0','9',0,0,'.','/','l',';','p','-',0,
[; ;main.c: 126: 0, 0, 39, 0,'[','=', 0,0,0, 0, 13,']', 0, 92, 0,0,
[; ;main.c: 127: 0, 0, 0, 0, 0, 0, 8,0,0,'1', 0,'4','7', 0, 0,0,
[; ;main.c: 128: '0','.','2','5','6','8', 27,0,0,'+','3','-','*','9'};
"132
[v _ps2Default `Euc ~T0 @X0 1 e ]
[i _ps2Default
-> -> 0 `i `uc
]
[; ;main.c: 132: eeprom unsigned char ps2Default = 0b00000000;
"134
[v _commandCode `uc ~T0 @X0 1 e ]
[v _scanCode `uc ~T0 @X0 1 e ]
[i _scanCode
-> -> 0 `i `uc
]
[; ;main.c: 134: unsigned char commandCode, scanCode = 0;
"135
[v _keyUp `b ~T0 @X0 1 e ]
[v _extendedKey `b ~T0 @X0 1 e ]
[v _shift `b ~T0 @X0 1 e ]
[i _shift
-> 0 `i
]
[v _ctrl `b ~T0 @X0 1 e ]
[i _ctrl
-> 0 `i
]
[v _alt `b ~T0 @X0 1 e ]
[i _alt
-> 0 `i
]
[v _altGr `b ~T0 @X0 1 e ]
[i _altGr
-> 0 `i
]
[v _shiftLock `b ~T0 @X0 1 e ]
[i _shiftLock
-> 0 `i
]
[; ;main.c: 135: bit keyUp, extendedKey, shift = 0, ctrl = 0, alt = 0, altGr = 0, shiftLock = 0;
"140
[v _clockCycle `(v ~T0 @X0 1 ef ]
"141
{
[; ;main.c: 140: void clockCycle(void)
[; ;main.c: 141: {
[e :U _clockCycle ]
[f ]
[; ;main.c: 142: while(!RA0);
"142
[e $U 53  ]
[e :U 54 ]
[e :U 53 ]
[e $ ! _RA0 54  ]
[e :U 55 ]
[; ;main.c: 143: while(RA0);
"143
[e $U 56  ]
[e :U 57 ]
[e :U 56 ]
[e $ _RA0 57  ]
[e :U 58 ]
[; ;main.c: 145: return;
"145
[e $UE 52  ]
[; ;main.c: 146: }
"146
[e :UE 52 ]
}
"151
[v _sendCommandCode `(v ~T0 @X0 1 ef ]
"152
{
[; ;main.c: 151: void sendCommandCode(void)
[; ;main.c: 152: {
[e :U _sendCommandCode ]
[f ]
"153
[v _n `uc ~T0 @X0 1 a ]
[; ;main.c: 153: unsigned char n = 9;
[e = _n -> -> 9 `i `uc ]
"154
[v _parity `uc ~T0 @X0 1 a ]
[; ;main.c: 154: unsigned char parity = 1;
[e = _parity -> -> 1 `i `uc ]
[; ;main.c: 156: RA1 = 0; TRISA1 = 0;
"156
[e = _RA1 -> -> 0 `i `b ]
[e = _TRISA1 -> -> 0 `i `b ]
[; ;main.c: 157: RA0 = 0; TRISA0 = 0;
"157
[e = _RA0 -> -> 0 `i `b ]
[e = _TRISA0 -> -> 0 `i `b ]
[; ;main.c: 158: _delay((unsigned long)((100)*(4000000/4000000.0)));
"158
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;main.c: 159: TRISA0 = 1;
"159
[e = _TRISA0 -> -> 1 `i `b ]
[; ;main.c: 160: while(RA0);
"160
[e $U 60  ]
[e :U 61 ]
[e :U 60 ]
[e $ _RA0 61  ]
[e :U 62 ]
[; ;main.c: 162: while(--n)
"162
[e $U 63  ]
[e :U 64 ]
[; ;main.c: 163: {
"163
{
[; ;main.c: 164: if(commandCode & 0b00000001)
"164
[e $ ! != & -> _commandCode `i -> 1 `i -> 0 `i 66  ]
[; ;main.c: 165: RA1 = 1;
"165
[e = _RA1 -> -> 1 `i `b ]
[e $U 67  ]
"166
[e :U 66 ]
[; ;main.c: 166: else
[; ;main.c: 167: RA1 = 0;
"167
[e = _RA1 -> -> 0 `i `b ]
[e :U 67 ]
[; ;main.c: 168: clockCycle();
"168
[e ( _clockCycle ..  ]
[; ;main.c: 169: if(commandCode & 0b00000001)
"169
[e $ ! != & -> _commandCode `i -> 1 `i -> 0 `i 68  ]
[; ;main.c: 170: ++parity;
"170
[e =+ _parity -> -> 1 `i `uc ]
[e :U 68 ]
[; ;main.c: 171: commandCode >>= 1;
"171
[e =>> _commandCode -> 1 `i ]
"172
}
[e :U 63 ]
"162
[e $ != -> =- _n -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 64  ]
[e :U 65 ]
[; ;main.c: 172: }
[; ;main.c: 174: if(parity & 0b00000001)
"174
[e $ ! != & -> _parity `i -> 1 `i -> 0 `i 69  ]
[; ;main.c: 175: RA1 = 1;
"175
[e = _RA1 -> -> 1 `i `b ]
[e $U 70  ]
"176
[e :U 69 ]
[; ;main.c: 176: else
[; ;main.c: 177: RA1 = 0;
"177
[e = _RA1 -> -> 0 `i `b ]
[e :U 70 ]
[; ;main.c: 178: clockCycle();
"178
[e ( _clockCycle ..  ]
[; ;main.c: 180: TRISA1 = 1;
"180
[e = _TRISA1 -> -> 1 `i `b ]
[; ;main.c: 181: while(RA1);
"181
[e $U 71  ]
[e :U 72 ]
[e :U 71 ]
[e $ _RA1 72  ]
[e :U 73 ]
[; ;main.c: 182: while(RA0);
"182
[e $U 74  ]
[e :U 75 ]
[e :U 74 ]
[e $ _RA0 75  ]
[e :U 76 ]
[; ;main.c: 183: while(!RA1 || !RA0);
"183
[e $U 77  ]
[e :U 78 ]
[e :U 77 ]
[e $ || ! _RA1 ! _RA0 78  ]
[e :U 79 ]
[; ;main.c: 184: RA0 = 0; TRISA0 = 0;
"184
[e = _RA0 -> -> 0 `i `b ]
[e = _TRISA0 -> -> 0 `i `b ]
[; ;main.c: 186: return;
"186
[e $UE 59  ]
[; ;main.c: 187: }
"187
[e :UE 59 ]
}
"192
[v _readScanCode `(v ~T0 @X0 1 ef ]
"193
{
[; ;main.c: 192: void readScanCode(void)
[; ;main.c: 193: {
[e :U _readScanCode ]
[f ]
"194
[v _n `uc ~T0 @X0 1 a ]
[; ;main.c: 194: unsigned char n;
[; ;main.c: 196: keyUp = extendedKey = 0;
"196
[e = _keyUp = _extendedKey -> -> 0 `i `b ]
[; ;main.c: 198: do
"198
[e :U 83 ]
[; ;main.c: 199: {
"199
{
[; ;main.c: 200: n = 9; scanCode = 0;
"200
[e = _n -> -> 9 `i `uc ]
[e = _scanCode -> -> 0 `i `uc ]
[; ;main.c: 202: TRISA0 = 1;
"202
[e = _TRISA0 -> -> 1 `i `b ]
[; ;main.c: 203: while(RA0);
"203
[e $U 84  ]
[e :U 85 ]
[e :U 84 ]
[e $ _RA0 85  ]
[e :U 86 ]
[; ;main.c: 205: while(--n)
"205
[e $U 87  ]
[e :U 88 ]
[; ;main.c: 206: {
"206
{
[; ;main.c: 207: scanCode >>= 1;
"207
[e =>> _scanCode -> 1 `i ]
[; ;main.c: 208: clockCycle();
"208
[e ( _clockCycle ..  ]
[; ;main.c: 209: if(RA1) scanCode |= 0b10000000;
"209
[e $ ! _RA1 90  ]
[e =| _scanCode -> -> 128 `i `uc ]
[e :U 90 ]
"210
}
[e :U 87 ]
"205
[e $ != -> =- _n -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 88  ]
[e :U 89 ]
[; ;main.c: 210: }
[; ;main.c: 211: clockCycle();
"211
[e ( _clockCycle ..  ]
[; ;main.c: 212: clockCycle();
"212
[e ( _clockCycle ..  ]
[; ;main.c: 214: while(!RA0);
"214
[e $U 91  ]
[e :U 92 ]
[e :U 91 ]
[e $ ! _RA0 92  ]
[e :U 93 ]
[; ;main.c: 215: RA0 = 0; TRISA0 = 0;
"215
[e = _RA0 -> -> 0 `i `b ]
[e = _TRISA0 -> -> 0 `i `b ]
[; ;main.c: 217: if(scanCode == 0xF0)
"217
[e $ ! == -> _scanCode `i -> 240 `i 94  ]
[; ;main.c: 218: keyUp = 1;
"218
[e = _keyUp -> -> 1 `i `b ]
[e $U 95  ]
"219
[e :U 94 ]
[; ;main.c: 219: else
[; ;main.c: 220: if(scanCode == 0xE0)
"220
[e $ ! == -> _scanCode `i -> 224 `i 96  ]
[; ;main.c: 221: extendedKey = 1;
"221
[e = _extendedKey -> -> 1 `i `b ]
[e :U 96 ]
"222
[e :U 95 ]
}
[; ;main.c: 222: } while(scanCode == 0xE0 || scanCode == 0xF0);
[e $ || == -> _scanCode `i -> 224 `i == -> _scanCode `i -> 240 `i 83  ]
[e :U 82 ]
[; ;main.c: 224: return;
"224
[e $UE 80  ]
[; ;main.c: 225: }
"225
[e :UE 80 ]
}
"230
[v _setPanel `(v ~T0 @X0 1 ef1`uc ]
"231
{
[; ;main.c: 230: void setPanel(unsigned char leds)
[; ;main.c: 231: {
[e :U _setPanel ]
"230
[v _leds `uc ~T0 @X0 1 r1 ]
"231
[f ]
[; ;main.c: 232: commandCode = 0xED;
"232
[e = _commandCode -> -> 237 `i `uc ]
[; ;main.c: 233: do
"233
[e :U 100 ]
[; ;main.c: 234: {
"234
{
[; ;main.c: 235: sendCommandCode();
"235
[e ( _sendCommandCode ..  ]
[; ;main.c: 236: readScanCode();
"236
[e ( _readScanCode ..  ]
"237
}
[; ;main.c: 237: } while(scanCode != 0xFA);
[e $ != -> _scanCode `i -> 250 `i 100  ]
[e :U 99 ]
[; ;main.c: 239: commandCode = leds;
"239
[e = _commandCode _leds ]
[; ;main.c: 240: do
"240
[e :U 103 ]
[; ;main.c: 241: {
"241
{
[; ;main.c: 242: sendCommandCode();
"242
[e ( _sendCommandCode ..  ]
[; ;main.c: 243: readScanCode();
"243
[e ( _readScanCode ..  ]
"244
}
[; ;main.c: 244: } while(scanCode != 0xFA);
[e $ != -> _scanCode `i -> 250 `i 103  ]
[e :U 102 ]
[; ;main.c: 246: return;
"246
[e $UE 97  ]
[; ;main.c: 247: }
"247
[e :UE 97 ]
}
"251
[v _flashPanel `(v ~T0 @X0 1 ef1`uc ]
"252
{
[; ;main.c: 251: void flashPanel(unsigned char count)
[; ;main.c: 252: {
[e :U _flashPanel ]
"251
[v _count `uc ~T0 @X0 1 r1 ]
"252
[f ]
[; ;main.c: 253: do
"253
[e :U 107 ]
[; ;main.c: 254: {
"254
{
[; ;main.c: 255: setPanel(0b00000111);
"255
[e ( _setPanel (1 -> -> 7 `i `uc ]
[; ;main.c: 256: _delay((unsigned long)((100)*(4000000/4000.0)));
"256
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;main.c: 257: setPanel(0x00000000);
"257
[e ( _setPanel (1 -> -> 0 `i `uc ]
[; ;main.c: 258: _delay((unsigned long)((100)*(4000000/4000.0)));
"258
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"259
}
[; ;main.c: 259: } while(count--);
[e $ != -> -- _count -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 107  ]
[e :U 106 ]
[; ;main.c: 261: return;
"261
[e $UE 104  ]
[; ;main.c: 262: }
"262
[e :UE 104 ]
}
"268
[v _main `(v ~T0 @X0 1 ef ]
"269
{
[; ;main.c: 268: void main(void)
[; ;main.c: 269: {
[e :U _main ]
[f ]
"270
[v _ascii `uc ~T0 @X0 1 a ]
"271
[v _ps2Config `uc ~T0 @X0 1 a ]
[; ;main.c: 270: unsigned char ascii;
[; ;main.c: 271: unsigned char ps2Config = ps2Default;
[e = _ps2Config _ps2Default ]
[; ;main.c: 273: CMCON = 0b00000111;
"273
[e = _CMCON -> -> 7 `i `uc ]
[; ;main.c: 274: RA2 = 1; TRISA2 = 0;
"274
[e = _RA2 -> -> 1 `i `b ]
[e = _TRISA2 -> -> 0 `i `b ]
[; ;main.c: 275: PORTB = 0b11111111; TRISB = 0b00000000;
"275
[e = _PORTB -> -> 255 `i `uc ]
[e = _TRISB -> -> 0 `i `uc ]
[; ;main.c: 278: while(!scanCode)
"278
[e $U 109  ]
[e :U 110 ]
[; ;main.c: 279: readScanCode();
"279
[e ( _readScanCode ..  ]
[e :U 109 ]
"278
[e $ ! != -> _scanCode `i -> -> -> 0 `i `uc `i 110  ]
[e :U 111 ]
[; ;main.c: 282: setPanel(0b00000010);
"282
[e ( _setPanel (1 -> -> 2 `i `uc ]
[; ;main.c: 285: for(;;)
"285
{
"286
[e :U 112 ]
[; ;main.c: 286: {
{
[; ;main.c: 287: do
"287
[e :U 117 ]
[; ;main.c: 288: {
"288
{
[; ;main.c: 289: readScanCode();
"289
[e ( _readScanCode ..  ]
"290
}
[; ;main.c: 290: } while (!scanCode);
[e $ ! != -> _scanCode `i -> -> -> 0 `i `uc `i 117  ]
[e :U 116 ]
[; ;main.c: 292: RB7 = 1;
"292
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 293: ascii = 0;
"293
[e = _ascii -> -> 0 `i `uc ]
[; ;main.c: 295: if(extendedKey)
"295
[e $ ! _extendedKey 118  ]
[; ;main.c: 296: switch(scanCode)
"296
[e $U 120  ]
[; ;main.c: 297: {
"297
{
[; ;main.c: 298: case 0x11:
"298
[e :U 121 ]
[; ;main.c: 299: altGr = !keyUp;
"299
[e = _altGr ! _keyUp ]
[; ;main.c: 300: break;
"300
[e $U 119  ]
[; ;main.c: 302: case 0x14:
"302
[e :U 122 ]
[; ;main.c: 303: ctrl = !keyUp;
"303
[e = _ctrl ! _keyUp ]
[; ;main.c: 304: break;
"304
[e $U 119  ]
[; ;main.c: 306: case 0x4A:
"306
[e :U 123 ]
[; ;main.c: 307: if(!keyUp)
"307
[e $ ! ! _keyUp 124  ]
[; ;main.c: 308: ascii = '/';
"308
[e = _ascii -> -> 47 `ui `uc ]
[e :U 124 ]
[; ;main.c: 309: break;
"309
[e $U 119  ]
[; ;main.c: 311: case 0x5A:
"311
[e :U 125 ]
[; ;main.c: 312: if(!keyUp)
"312
[e $ ! ! _keyUp 126  ]
[; ;main.c: 313: ascii = 0x0D;
"313
[e = _ascii -> -> 13 `i `uc ]
[e :U 126 ]
[; ;main.c: 314: break;
"314
[e $U 119  ]
[; ;main.c: 316: case 0x71:
"316
[e :U 127 ]
[; ;main.c: 317: if(!keyUp)
"317
[e $ ! ! _keyUp 128  ]
[; ;main.c: 318: ascii = 0x7F;
"318
[e = _ascii -> -> 127 `i `uc ]
[e :U 128 ]
[; ;main.c: 319: break;
"319
[e $U 119  ]
"320
}
[; ;main.c: 320: }
[e $U 119  ]
"296
[e :U 120 ]
[e [\ _scanCode , $ -> -> 17 `i `uc 121
 , $ -> -> 20 `i `uc 122
 , $ -> -> 74 `i `uc 123
 , $ -> -> 90 `i `uc 125
 , $ -> -> 113 `i `uc 127
 119 ]
"320
[e :U 119 ]
[e $U 129  ]
"321
[e :U 118 ]
[; ;main.c: 321: else
[; ;main.c: 322: switch(scanCode)
"322
[e $U 131  ]
[; ;main.c: 323: {
"323
{
[; ;main.c: 324: case 0x05:
"324
[e :U 132 ]
[; ;main.c: 325: if(!keyUp & alt)
"325
[e $ ! & ! _keyUp _alt 133  ]
[; ;main.c: 326: {
"326
{
[; ;main.c: 328: setPanel(0b00000000);
"328
[e ( _setPanel (1 -> -> 0 `i `uc ]
[; ;main.c: 329: _delay((unsigned long)((200)*(4000000/4000.0)));
"329
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;main.c: 332: ps2Config ^= 0b00000001;
"332
[e =^ _ps2Config -> -> 1 `i `uc ]
[; ;main.c: 337: flashPanel(ps2Config & 0b00000001);
"337
[e ( _flashPanel (1 -> & -> _ps2Config `i -> 1 `i `uc ]
[; ;main.c: 340: setPanel(shiftLock ? 0b00000110 : 0b00000010);
"340
[e ( _setPanel (1 -> ? _shiftLock : -> 6 `i -> 2 `i `uc ]
"341
}
[e :U 133 ]
[; ;main.c: 341: }
[; ;main.c: 342: break;
"342
[e $U 130  ]
[; ;main.c: 344: case 0x09:
"344
[e :U 134 ]
[; ;main.c: 345: if(!keyUp & ctrl & alt)
"345
[e $ ! & & ! _keyUp _ctrl _alt 135  ]
[; ;main.c: 346: {
"346
{
[; ;main.c: 348: setPanel(0b00000000);
"348
[e ( _setPanel (1 -> -> 0 `i `uc ]
[; ;main.c: 349: _delay((unsigned long)((200)*(4000000/4000.0)));
"349
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;main.c: 352: ps2Default = ps2Config;
"352
[e = _ps2Default _ps2Config ]
[; ;main.c: 355: flashPanel(2);
"355
[e ( _flashPanel (1 -> -> 2 `i `uc ]
[; ;main.c: 358: setPanel(shiftLock ? 0b00000110 : 0b00000010);
"358
[e ( _setPanel (1 -> ? _shiftLock : -> 6 `i -> 2 `i `uc ]
"359
}
[e :U 135 ]
[; ;main.c: 359: }
[; ;main.c: 360: break;
"360
[e $U 130  ]
[; ;main.c: 362: case 0x11:
"362
[e :U 136 ]
[; ;main.c: 363: alt = !keyUp;
"363
[e = _alt ! _keyUp ]
[; ;main.c: 364: break;
"364
[e $U 130  ]
[; ;main.c: 366: case 0x12:
"366
[e :U 137 ]
"367
[e :U 138 ]
[; ;main.c: 367: case 0x59:
[; ;main.c: 368: shift = !keyUp;
"368
[e = _shift ! _keyUp ]
[; ;main.c: 369: break;
"369
[e $U 130  ]
[; ;main.c: 371: case 0x14:
"371
[e :U 139 ]
[; ;main.c: 372: ctrl = !keyUp;
"372
[e = _ctrl ! _keyUp ]
[; ;main.c: 373: break;
"373
[e $U 130  ]
[; ;main.c: 375: case 0x58:
"375
[e :U 140 ]
[; ;main.c: 376: if(!keyUp)
"376
[e $ ! ! _keyUp 141  ]
[; ;main.c: 377: {
"377
{
[; ;main.c: 378: shiftLock = !shiftLock;
"378
[e = _shiftLock ! _shiftLock ]
[; ;main.c: 379: setPanel(shiftLock ? 0b00000110 : 0b00000010);
"379
[e ( _setPanel (1 -> ? _shiftLock : -> 6 `i -> 2 `i `uc ]
"380
}
[e :U 141 ]
[; ;main.c: 380: }
[; ;main.c: 381: break;
"381
[e $U 130  ]
[; ;main.c: 383: default:
"383
[e :U 142 ]
[; ;main.c: 384: if(!keyUp && scanCode > 0x0C && scanCode < 0x7E)
"384
[e $ ! && && ! _keyUp > -> _scanCode `i -> 12 `i < -> _scanCode `i -> 126 `i 143  ]
[; ;main.c: 385: {
"385
{
[; ;main.c: 386: scanCode -= 0x0D;
"386
[e =- _scanCode -> -> 13 `i `uc ]
[; ;main.c: 387: if(ps2Config & = 0b00000001)
"387
[e $ ! != -> =& _ps2Config -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 144  ]
[; ;main.c: 388: scanCode += 0x71;
"388
[e =+ _scanCode -> -> 113 `i `uc ]
[e :U 144 ]
[; ;main.c: 390: if(ctrl)
"390
[e $ ! _ctrl 145  ]
[; ;main.c: 391: ascii = ctrlAscii[scanCode];
"391
[e = _ascii *U + &U _ctrlAscii * -> _scanCode `ux -> -> # *U &U _ctrlAscii `ui `ux ]
[e $U 146  ]
"392
[e :U 145 ]
[; ;main.c: 392: else
[; ;main.c: 393: if(shift | shiftLock)
"393
[e $ ! | _shift _shiftLock 147  ]
[; ;main.c: 394: ascii = shiftAscii[scanCode];
"394
[e = _ascii *U + &U _shiftAscii * -> _scanCode `ux -> -> # *U &U _shiftAscii `ui `ux ]
[e $U 148  ]
"395
[e :U 147 ]
[; ;main.c: 395: else
[; ;main.c: 396: ascii = normalAscii[scanCode];
"396
[e = _ascii *U + &U _normalAscii * -> _scanCode `ux -> -> # *U &U _normalAscii `ui `ux ]
[e :U 148 ]
[e :U 146 ]
"397
}
[e :U 143 ]
"398
}
[; ;main.c: 397: }
[; ;main.c: 398: }
[e $U 130  ]
"322
[e :U 131 ]
[e [\ _scanCode , $ -> -> 5 `i `uc 132
 , $ -> -> 9 `i `uc 134
 , $ -> -> 17 `i `uc 136
 , $ -> -> 18 `i `uc 137
 , $ -> -> 89 `i `uc 138
 , $ -> -> 20 `i `uc 139
 , $ -> -> 88 `i `uc 140
 142 ]
"398
[e :U 130 ]
[e :U 129 ]
[; ;main.c: 402: if(ascii)
"402
[e $ ! != -> _ascii `i -> -> -> 0 `i `uc `i 149  ]
[; ;main.c: 403: {
"403
{
[; ;main.c: 404: PORTB = ~ascii;
"404
[e = _PORTB -> ~ -> _ascii `i `uc ]
[; ;main.c: 405: _delay((unsigned long)((1500)*(4000000/4000000.0)));
"405
[e ( __delay (1 -> * -> -> 1500 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;main.c: 406: RB7 = 0;
"406
[e = _RB7 -> -> 0 `i `b ]
"407
}
[; ;main.c: 407: }
[e $U 150  ]
"408
[e :U 149 ]
[; ;main.c: 408: else
[; ;main.c: 409: if(alt & altGr)
"409
[e $ ! & _alt _altGr 151  ]
[; ;main.c: 410: RA2 = 0;
"410
[e = _RA2 -> -> 0 `i `b ]
[e $U 152  ]
"411
[e :U 151 ]
[; ;main.c: 411: else
[; ;main.c: 412: RA2 = 1;
"412
[e = _RA2 -> -> 1 `i `b ]
[e :U 152 ]
[e :U 150 ]
"413
}
[; ;main.c: 413: }
[e $U 112  ]
[e :U 113 ]
}
[; ;main.c: 414: }
"414
[e :UE 108 ]
}
