gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.3.0 #8604 (May 17 2014) (Linux)
                      00004 ; This file was generated Sat May 24 19:48:09 2014
                      00005 ;--------------------------------------------------------
                      00006 ; PIC port for the 14-bit core
                      00007 ;--------------------------------------------------------
                      00008         .file   "main.c"
                      00009         list    p=16f628
                      00010         radix dec
                      00011         include "p16f628.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F628 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00381         LIST
                      00012 ;--------------------------------------------------------
                      00013 ; config word(s)
                      00014 ;--------------------------------------------------------
2007   0000           00015         __config 0x3f70
                      00016 ;--------------------------------------------------------
                      00017 ; external declarations
                      00018 ;--------------------------------------------------------
  0000                00019         extern  _delay_us
  0000                00020         extern  _delay_ms
  0000                00021         extern  _set_restart_wdt
  0000                00022         extern  _set_clock_speed
  0000                00023         extern  _STATUSbits
  0000                00024         extern  _PORTAbits
  0000                00025         extern  _PORTBbits
  0000                00026         extern  _INTCONbits
  0000                00027         extern  _PIR1bits
  0000                00028         extern  _T1CONbits
  0000                00029         extern  _T2CONbits
  0000                00030         extern  _CCP1CONbits
  0000                00031         extern  _RCSTAbits
  0000                00032         extern  _CMCONbits
  0000                00033         extern  _OPTION_REGbits
  0000                00034         extern  _TRISAbits
  0000                00035         extern  _TRISBbits
  0000                00036         extern  _PIE1bits
  0000                00037         extern  _PCONbits
  0000                00038         extern  _TXSTAbits
  0000                00039         extern  _EECON1bits
  0000                00040         extern  _VRCONbits
  0000                00041         extern  _INDF
  0000                00042         extern  _TMR0
  0000                00043         extern  _PCL
  0000                00044         extern  _STATUS
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00045         extern  _FSR
  0000                00046         extern  _PORTA
  0000                00047         extern  _PORTB
  0000                00048         extern  _PCLATH
  0000                00049         extern  _INTCON
  0000                00050         extern  _PIR1
  0000                00051         extern  _TMR1
  0000                00052         extern  _TMR1L
  0000                00053         extern  _TMR1H
  0000                00054         extern  _T1CON
  0000                00055         extern  _TMR2
  0000                00056         extern  _T2CON
  0000                00057         extern  _CCPR1
  0000                00058         extern  _CCPR1L
  0000                00059         extern  _CCPR1H
  0000                00060         extern  _CCP1CON
  0000                00061         extern  _RCSTA
  0000                00062         extern  _TXREG
  0000                00063         extern  _RCREG
  0000                00064         extern  _CMCON
  0000                00065         extern  _OPTION_REG
  0000                00066         extern  _TRISA
  0000                00067         extern  _TRISB
  0000                00068         extern  _PIE1
  0000                00069         extern  _PCON
  0000                00070         extern  _PR2
  0000                00071         extern  _TXSTA
  0000                00072         extern  _SPBRG
  0000                00073         extern  _EEDATA
  0000                00074         extern  _EEADR
  0000                00075         extern  _EECON1
  0000                00076         extern  _EECON2
  0000                00077         extern  _VRCON
  0000                00078         extern  __gptrget1
  0000                00079         extern  __sdcc_gsinit_startup
                      00080 ;--------------------------------------------------------
                      00081 ; global declarations
                      00082 ;--------------------------------------------------------
  0000                00083         global  _clockCycle
  0000                00084         global  _sendCommandCode
  0000                00085         global  _readScanCode
  0000                00086         global  _setPanel
  0000                00087         global  _flashPanel
  0000                00088         global  _main
  0000                00089         global  _CLOCK_SPEED
  0000                00090         global  _commandCode
  0000                00091         global  _scanCode
  0000                00092         global  _keyUp
  0000                00093         global  _extendedKey
  0000                00094         global  _shift
  0000                00095         global  _ctrl
  0000                00096         global  _alt
  0000                00097         global  _altGr
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00098         global  _shiftLock
  0000                00099         global  _ctrlAscii
  0000                00100         global  _shiftAscii
  0000                00101         global  _normalAscii
  0000                00102         global  _ps2Default
                      00103 
  0000                00104         global PSAVE
  0000                00105         global SSAVE
  0000                00106         global WSAVE
  0000                00107         global STK12
  0000                00108         global STK11
  0000                00109         global STK10
  0000                00110         global STK09
  0000                00111         global STK08
  0000                00112         global STK07
  0000                00113         global STK06
  0000                00114         global STK05
  0000                00115         global STK04
  0000                00116         global STK03
  0000                00117         global STK02
  0000                00118         global STK01
  0000                00119         global STK00
                      00120 
                      00121 sharebank udata_ovr 0x0070
0070                  00122 PSAVE   res 1
0071                  00123 SSAVE   res 1
0072                  00124 WSAVE   res 1
0073                  00125 STK12   res 1
0074                  00126 STK11   res 1
0075                  00127 STK10   res 1
0076                  00128 STK09   res 1
0077                  00129 STK08   res 1
0078                  00130 STK07   res 1
0079                  00131 STK06   res 1
007A                  00132 STK05   res 1
007B                  00133 STK04   res 1
007C                  00134 STK03   res 1
007D                  00135 STK02   res 1
007E                  00136 STK01   res 1
007F                  00137 STK00   res 1
                      00138 
                      00139 ;--------------------------------------------------------
                      00140 ; global definitions
                      00141 ;--------------------------------------------------------
                      00142 UD_main_0       udata
0000                  00143 _commandCode    res     1
                      00144 
                      00145 UD_main_1       udata
0000                  00146 _keyUp  res     1
                      00147 
                      00148 UD_main_2       udata
0000                  00149 _extendedKey    res     1
                      00150 
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00151 ;--------------------------------------------------------
                      00152 ; absolute symbol definitions
                      00153 ;--------------------------------------------------------
                      00154 ;--------------------------------------------------------
                      00155 ; compiler-defined variables
                      00156 ;--------------------------------------------------------
                      00157 UDL_main_0      udata
0000                  00158 r0x1009 res     1
0001                  00159 r0x100A res     1
0002                  00160 r0x100B res     1
0003                  00161 r0x100C res     1
0004                  00162 r0x100D res     1
0005                  00163 r0x100E res     1
0006                  00164 r0x100F res     1
0007                  00165 r0x1010 res     1
0008                  00166 r0x1011 res     1
                      00167 ;--------------------------------------------------------
                      00168 ; initialized data
                      00169 ;--------------------------------------------------------
                      00170 
                      00171 ID_main_0       idata
0000                  00172 _CLOCK_SPEED
0000   00 09 3D 00    00173         db      0x00, 0x09, 0x3d, 0x00
                      00174 
                      00175 
                      00176 ID_main_1       idata
0000                  00177 _scanCode
0000   00             00178         db      0x00
                      00179 
                      00180 
                      00181 ID_main_2       idata
0000                  00182 _shift
0000   00             00183         db      0x00
                      00184 
                      00185 
                      00186 ID_main_3       idata
0000                  00187 _ctrl
0000   00             00188         db      0x00
                      00189 
                      00190 
                      00191 ID_main_4       idata
0000                  00192 _alt
0000   00             00193         db      0x00
                      00194 
                      00195 
                      00196 ID_main_5       idata
0000                  00197 _altGr
0000   00             00198         db      0x00
                      00199 
                      00200 
                      00201 ID_main_6       idata
0000                  00202 _shiftLock
0000   00             00203         db      0x00
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00204 
                      00205 
                      00206 ID_main_7       code
0000                  00207 _ctrlAscii
0000   340A           00208         retlw 0x0a
0001   341C           00209         retlw 0x1c
0002   3400           00210         retlw 0x00
0003   3400           00211         retlw 0x00
0004   3400           00212         retlw 0x00
0005   3400           00213         retlw 0x00
0006   3400           00214         retlw 0x00
0007   3400           00215         retlw 0x00
0008   3411           00216         retlw 0x11
0009   3400           00217         retlw 0x00
000A   3400           00218         retlw 0x00
000B   3400           00219         retlw 0x00
000C   3400           00220         retlw 0x00
000D   341A           00221         retlw 0x1a
000E   3413           00222         retlw 0x13
000F   3401           00223         retlw 0x01
0010   3417           00224         retlw 0x17
0011   3400           00225         retlw 0x00
0012   3400           00226         retlw 0x00
0013   3400           00227         retlw 0x00
0014   3403           00228         retlw 0x03
0015   3418           00229         retlw 0x18
0016   3404           00230         retlw 0x04
0017   3405           00231         retlw 0x05
0018   3400           00232         retlw 0x00
0019   3400           00233         retlw 0x00
001A   3400           00234         retlw 0x00
001B   3400           00235         retlw 0x00
001C   3420           00236         retlw 0x20
001D   3416           00237         retlw 0x16
001E   3406           00238         retlw 0x06
001F   3414           00239         retlw 0x14
0020   3412           00240         retlw 0x12
0021   3400           00241         retlw 0x00
0022   3400           00242         retlw 0x00
0023   3400           00243         retlw 0x00
0024   340E           00244         retlw 0x0e
0025   3402           00245         retlw 0x02
0026   3408           00246         retlw 0x08
0027   3407           00247         retlw 0x07
0028   3419           00248         retlw 0x19
0029   3400           00249         retlw 0x00
002A   3400           00250         retlw 0x00
002B   3400           00251         retlw 0x00
002C   3400           00252         retlw 0x00
002D   340D           00253         retlw 0x0d
002E   340A           00254         retlw 0x0a
002F   3415           00255         retlw 0x15
0030   3400           00256         retlw 0x00
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0031   3400           00257         retlw 0x00
0032   3400           00258         retlw 0x00
0033   3400           00259         retlw 0x00
0034   3400           00260         retlw 0x00
0035   340B           00261         retlw 0x0b
0036   3409           00262         retlw 0x09
0037   340F           00263         retlw 0x0f
0038   3400           00264         retlw 0x00
0039   3400           00265         retlw 0x00
003A   3400           00266         retlw 0x00
003B   3400           00267         retlw 0x00
003C   3400           00268         retlw 0x00
003D   3400           00269         retlw 0x00
003E   340C           00270         retlw 0x0c
003F   3400           00271         retlw 0x00
0040   3410           00272         retlw 0x10
0041   3400           00273         retlw 0x00
0042   3400           00274         retlw 0x00
0043   3400           00275         retlw 0x00
0044   3400           00276         retlw 0x00
0045   3400           00277         retlw 0x00
0046   3400           00278         retlw 0x00
0047   341B           00279         retlw 0x1b
0048   341E           00280         retlw 0x1e
0049   3400           00281         retlw 0x00
004A   3400           00282         retlw 0x00
004B   3400           00283         retlw 0x00
004C   3400           00284         retlw 0x00
004D   340D           00285         retlw 0x0d
004E   341D           00286         retlw 0x1d
004F   3400           00287         retlw 0x00
0050   3400           00288         retlw 0x00
0051   3400           00289         retlw 0x00
0052   3400           00290         retlw 0x00
0053   3400           00291         retlw 0x00
0054   3400           00292         retlw 0x00
0055   3400           00293         retlw 0x00
0056   3400           00294         retlw 0x00
0057   3400           00295         retlw 0x00
0058   3400           00296         retlw 0x00
0059   3408           00297         retlw 0x08
005A   3400           00298         retlw 0x00
005B   3400           00299         retlw 0x00
005C   3400           00300         retlw 0x00
005D   3400           00301         retlw 0x00
005E   3400           00302         retlw 0x00
005F   3400           00303         retlw 0x00
0060   3400           00304         retlw 0x00
0061   3400           00305         retlw 0x00
0062   3400           00306         retlw 0x00
0063   3400           00307         retlw 0x00
0064   3400           00308         retlw 0x00
0065   3400           00309         retlw 0x00
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0066   3400           00310         retlw 0x00
0067   3400           00311         retlw 0x00
0068   3400           00312         retlw 0x00
0069   341B           00313         retlw 0x1b
006A   3400           00314         retlw 0x00
006B   3400           00315         retlw 0x00
006C   3400           00316         retlw 0x00
006D   3400           00317         retlw 0x00
006E   3400           00318         retlw 0x00
006F   3400           00319         retlw 0x00
0070   3400           00320         retlw 0x00
0071   340A           00321         retlw 0x0a
0072   341E           00322         retlw 0x1e
0073   3400           00323         retlw 0x00
0074   3400           00324         retlw 0x00
0075   3400           00325         retlw 0x00
0076   3400           00326         retlw 0x00
0077   3400           00327         retlw 0x00
0078   3400           00328         retlw 0x00
0079   3411           00329         retlw 0x11
007A   3400           00330         retlw 0x00
007B   3400           00331         retlw 0x00
007C   3400           00332         retlw 0x00
007D   3400           00333         retlw 0x00
007E   341A           00334         retlw 0x1a
007F   3413           00335         retlw 0x13
0080   3401           00336         retlw 0x01
0081   3417           00337         retlw 0x17
0082   3400           00338         retlw 0x00
0083   3400           00339         retlw 0x00
0084   3400           00340         retlw 0x00
0085   3403           00341         retlw 0x03
0086   3418           00342         retlw 0x18
0087   3404           00343         retlw 0x04
0088   3405           00344         retlw 0x05
0089   3400           00345         retlw 0x00
008A   3400           00346         retlw 0x00
008B   3400           00347         retlw 0x00
008C   3400           00348         retlw 0x00
008D   3420           00349         retlw 0x20
008E   3416           00350         retlw 0x16
008F   3406           00351         retlw 0x06
0090   3414           00352         retlw 0x14
0091   3412           00353         retlw 0x12
0092   3400           00354         retlw 0x00
0093   3400           00355         retlw 0x00
0094   3400           00356         retlw 0x00
0095   340E           00357         retlw 0x0e
0096   3402           00358         retlw 0x02
0097   3408           00359         retlw 0x08
0098   3407           00360         retlw 0x07
0099   3419           00361         retlw 0x19
009A   3400           00362         retlw 0x00
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009B   3400           00363         retlw 0x00
009C   3400           00364         retlw 0x00
009D   3400           00365         retlw 0x00
009E   340D           00366         retlw 0x0d
009F   340A           00367         retlw 0x0a
00A0   3415           00368         retlw 0x15
00A1   3400           00369         retlw 0x00
00A2   3400           00370         retlw 0x00
00A3   3400           00371         retlw 0x00
00A4   3400           00372         retlw 0x00
00A5   3400           00373         retlw 0x00
00A6   340B           00374         retlw 0x0b
00A7   3409           00375         retlw 0x09
00A8   340F           00376         retlw 0x0f
00A9   3400           00377         retlw 0x00
00AA   3400           00378         retlw 0x00
00AB   3400           00379         retlw 0x00
00AC   3400           00380         retlw 0x00
00AD   3400           00381         retlw 0x00
00AE   3400           00382         retlw 0x00
00AF   340C           00383         retlw 0x0c
00B0   3400           00384         retlw 0x00
00B1   3410           00385         retlw 0x10
00B2   3400           00386         retlw 0x00
00B3   3400           00387         retlw 0x00
00B4   3400           00388         retlw 0x00
00B5   3400           00389         retlw 0x00
00B6   3400           00390         retlw 0x00
00B7   3400           00391         retlw 0x00
00B8   341B           00392         retlw 0x1b
00B9   3400           00393         retlw 0x00
00BA   3400           00394         retlw 0x00
00BB   3400           00395         retlw 0x00
00BC   3400           00396         retlw 0x00
00BD   3400           00397         retlw 0x00
00BE   340D           00398         retlw 0x0d
00BF   341D           00399         retlw 0x1d
00C0   3400           00400         retlw 0x00
00C1   341C           00401         retlw 0x1c
00C2   3400           00402         retlw 0x00
00C3   3400           00403         retlw 0x00
00C4   3400           00404         retlw 0x00
00C5   3400           00405         retlw 0x00
00C6   3400           00406         retlw 0x00
00C7   3400           00407         retlw 0x00
00C8   3400           00408         retlw 0x00
00C9   3400           00409         retlw 0x00
00CA   3408           00410         retlw 0x08
00CB   3400           00411         retlw 0x00
00CC   3400           00412         retlw 0x00
00CD   3400           00413         retlw 0x00
00CE   3400           00414         retlw 0x00
00CF   3400           00415         retlw 0x00
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D0   3400           00416         retlw 0x00
00D1   3400           00417         retlw 0x00
00D2   3400           00418         retlw 0x00
00D3   3400           00419         retlw 0x00
00D4   3400           00420         retlw 0x00
00D5   3400           00421         retlw 0x00
00D6   3400           00422         retlw 0x00
00D7   3400           00423         retlw 0x00
00D8   3400           00424         retlw 0x00
00D9   3400           00425         retlw 0x00
00DA   341B           00426         retlw 0x1b
00DB   3400           00427         retlw 0x00
00DC   3400           00428         retlw 0x00
00DD   3400           00429         retlw 0x00
00DE   3400           00430         retlw 0x00
00DF   3400           00431         retlw 0x00
00E0   3400           00432         retlw 0x00
00E1   3400           00433         retlw 0x00
                      00434 
                      00435 
                      00436 ID_main_8       code
0000                  00437 _shiftAscii
0000   340A           00438         retlw 0x0a
0001   347C           00439         retlw 0x7c
0002   3400           00440         retlw 0x00
0003   3400           00441         retlw 0x00
0004   3400           00442         retlw 0x00
0005   3400           00443         retlw 0x00
0006   3400           00444         retlw 0x00
0007   3400           00445         retlw 0x00
0008   3451           00446         retlw 0x51
0009   3421           00447         retlw 0x21
000A   3400           00448         retlw 0x00
000B   3400           00449         retlw 0x00
000C   3400           00450         retlw 0x00
000D   345A           00451         retlw 0x5a
000E   3453           00452         retlw 0x53
000F   3441           00453         retlw 0x41
0010   3457           00454         retlw 0x57
0011   3422           00455         retlw 0x22
0012   3400           00456         retlw 0x00
0013   3400           00457         retlw 0x00
0014   3443           00458         retlw 0x43
0015   3458           00459         retlw 0x58
0016   3444           00460         retlw 0x44
0017   3445           00461         retlw 0x45
0018   3424           00462         retlw 0x24
0019   3423           00463         retlw 0x23
001A   3400           00464         retlw 0x00
001B   3400           00465         retlw 0x00
001C   3420           00466         retlw 0x20
001D   3456           00467         retlw 0x56
001E   3446           00468         retlw 0x46
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001F   3454           00469         retlw 0x54
0020   3452           00470         retlw 0x52
0021   3425           00471         retlw 0x25
0022   3400           00472         retlw 0x00
0023   3400           00473         retlw 0x00
0024   344E           00474         retlw 0x4e
0025   3442           00475         retlw 0x42
0026   3448           00476         retlw 0x48
0027   3447           00477         retlw 0x47
0028   3459           00478         retlw 0x59
0029   3426           00479         retlw 0x26
002A   3400           00480         retlw 0x00
002B   3400           00481         retlw 0x00
002C   3400           00482         retlw 0x00
002D   344D           00483         retlw 0x4d
002E   344A           00484         retlw 0x4a
002F   3455           00485         retlw 0x55
0030   342F           00486         retlw 0x2f
0031   3428           00487         retlw 0x28
0032   3400           00488         retlw 0x00
0033   3400           00489         retlw 0x00
0034   343B           00490         retlw 0x3b
0035   344B           00491         retlw 0x4b
0036   3449           00492         retlw 0x49
0037   344F           00493         retlw 0x4f
0038   343D           00494         retlw 0x3d
0039   3429           00495         retlw 0x29
003A   3400           00496         retlw 0x00
003B   3400           00497         retlw 0x00
003C   343A           00498         retlw 0x3a
003D   345F           00499         retlw 0x5f
003E   344C           00500         retlw 0x4c
003F   3460           00501         retlw 0x60
0040   3450           00502         retlw 0x50
0041   343F           00503         retlw 0x3f
0042   3400           00504         retlw 0x00
0043   3400           00505         retlw 0x00
0044   3400           00506         retlw 0x00
0045   342A           00507         retlw 0x2a
0046   3400           00508         retlw 0x00
0047   347B           00509         retlw 0x7b
0048   347E           00510         retlw 0x7e
0049   3400           00511         retlw 0x00
004A   3400           00512         retlw 0x00
004B   3400           00513         retlw 0x00
004C   3400           00514         retlw 0x00
004D   340D           00515         retlw 0x0d
004E   347D           00516         retlw 0x7d
004F   3400           00517         retlw 0x00
0050   3400           00518         retlw 0x00
0051   3400           00519         retlw 0x00
0052   3400           00520         retlw 0x00
0053   3400           00521         retlw 0x00
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0054   343E           00522         retlw 0x3e
0055   3400           00523         retlw 0x00
0056   3400           00524         retlw 0x00
0057   3400           00525         retlw 0x00
0058   3400           00526         retlw 0x00
0059   3408           00527         retlw 0x08
005A   3400           00528         retlw 0x00
005B   3400           00529         retlw 0x00
005C   3431           00530         retlw 0x31
005D   3400           00531         retlw 0x00
005E   3434           00532         retlw 0x34
005F   3437           00533         retlw 0x37
0060   3400           00534         retlw 0x00
0061   3400           00535         retlw 0x00
0062   3400           00536         retlw 0x00
0063   3430           00537         retlw 0x30
0064   342E           00538         retlw 0x2e
0065   3432           00539         retlw 0x32
0066   3435           00540         retlw 0x35
0067   3436           00541         retlw 0x36
0068   3438           00542         retlw 0x38
0069   341B           00543         retlw 0x1b
006A   3400           00544         retlw 0x00
006B   3400           00545         retlw 0x00
006C   342B           00546         retlw 0x2b
006D   3433           00547         retlw 0x33
006E   342D           00548         retlw 0x2d
006F   342A           00549         retlw 0x2a
0070   3439           00550         retlw 0x39
0071   340A           00551         retlw 0x0a
0072   347E           00552         retlw 0x7e
0073   3400           00553         retlw 0x00
0074   3400           00554         retlw 0x00
0075   3400           00555         retlw 0x00
0076   3400           00556         retlw 0x00
0077   3400           00557         retlw 0x00
0078   3400           00558         retlw 0x00
0079   3451           00559         retlw 0x51
007A   3421           00560         retlw 0x21
007B   3400           00561         retlw 0x00
007C   3400           00562         retlw 0x00
007D   3400           00563         retlw 0x00
007E   345A           00564         retlw 0x5a
007F   3453           00565         retlw 0x53
0080   3441           00566         retlw 0x41
0081   3457           00567         retlw 0x57
0082   3440           00568         retlw 0x40
0083   3400           00569         retlw 0x00
0084   3400           00570         retlw 0x00
0085   3443           00571         retlw 0x43
0086   3458           00572         retlw 0x58
0087   3444           00573         retlw 0x44
0088   3445           00574         retlw 0x45
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0089   3424           00575         retlw 0x24
008A   3423           00576         retlw 0x23
008B   3400           00577         retlw 0x00
008C   3400           00578         retlw 0x00
008D   3420           00579         retlw 0x20
008E   3456           00580         retlw 0x56
008F   3446           00581         retlw 0x46
0090   3454           00582         retlw 0x54
0091   3452           00583         retlw 0x52
0092   3425           00584         retlw 0x25
0093   3400           00585         retlw 0x00
0094   3400           00586         retlw 0x00
0095   344E           00587         retlw 0x4e
0096   3442           00588         retlw 0x42
0097   3448           00589         retlw 0x48
0098   3447           00590         retlw 0x47
0099   3459           00591         retlw 0x59
009A   345E           00592         retlw 0x5e
009B   3400           00593         retlw 0x00
009C   3400           00594         retlw 0x00
009D   3400           00595         retlw 0x00
009E   344D           00596         retlw 0x4d
009F   344A           00597         retlw 0x4a
00A0   3455           00598         retlw 0x55
00A1   3426           00599         retlw 0x26
00A2   342A           00600         retlw 0x2a
00A3   3400           00601         retlw 0x00
00A4   3400           00602         retlw 0x00
00A5   343C           00603         retlw 0x3c
00A6   344B           00604         retlw 0x4b
00A7   3449           00605         retlw 0x49
00A8   344F           00606         retlw 0x4f
00A9   3429           00607         retlw 0x29
00AA   3428           00608         retlw 0x28
00AB   3400           00609         retlw 0x00
00AC   3400           00610         retlw 0x00
00AD   343E           00611         retlw 0x3e
00AE   343F           00612         retlw 0x3f
00AF   344C           00613         retlw 0x4c
00B0   343A           00614         retlw 0x3a
00B1   3450           00615         retlw 0x50
00B2   345F           00616         retlw 0x5f
00B3   3400           00617         retlw 0x00
00B4   3400           00618         retlw 0x00
00B5   3400           00619         retlw 0x00
00B6   3422           00620         retlw 0x22
00B7   3400           00621         retlw 0x00
00B8   347B           00622         retlw 0x7b
00B9   342B           00623         retlw 0x2b
00BA   3400           00624         retlw 0x00
00BB   3400           00625         retlw 0x00
00BC   3400           00626         retlw 0x00
00BD   3400           00627         retlw 0x00
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00BE   340D           00628         retlw 0x0d
00BF   347D           00629         retlw 0x7d
00C0   3400           00630         retlw 0x00
00C1   347C           00631         retlw 0x7c
00C2   3400           00632         retlw 0x00
00C3   3400           00633         retlw 0x00
00C4   3400           00634         retlw 0x00
00C5   3400           00635         retlw 0x00
00C6   3400           00636         retlw 0x00
00C7   3400           00637         retlw 0x00
00C8   3400           00638         retlw 0x00
00C9   3400           00639         retlw 0x00
00CA   3408           00640         retlw 0x08
00CB   3400           00641         retlw 0x00
00CC   3400           00642         retlw 0x00
00CD   3431           00643         retlw 0x31
00CE   3400           00644         retlw 0x00
00CF   3434           00645         retlw 0x34
00D0   3437           00646         retlw 0x37
00D1   3400           00647         retlw 0x00
00D2   3400           00648         retlw 0x00
00D3   3400           00649         retlw 0x00
00D4   3430           00650         retlw 0x30
00D5   342E           00651         retlw 0x2e
00D6   3432           00652         retlw 0x32
00D7   3435           00653         retlw 0x35
00D8   3436           00654         retlw 0x36
00D9   3438           00655         retlw 0x38
00DA   341B           00656         retlw 0x1b
00DB   3400           00657         retlw 0x00
00DC   3400           00658         retlw 0x00
00DD   342B           00659         retlw 0x2b
00DE   3433           00660         retlw 0x33
00DF   342D           00661         retlw 0x2d
00E0   342A           00662         retlw 0x2a
00E1   3439           00663         retlw 0x39
                      00664 
                      00665 
                      00666 ID_main_9       code
0000                  00667 _normalAscii
0000   340A           00668         retlw 0x0a
0001   345C           00669         retlw 0x5c
0002   3400           00670         retlw 0x00
0003   3400           00671         retlw 0x00
0004   3400           00672         retlw 0x00
0005   3400           00673         retlw 0x00
0006   3400           00674         retlw 0x00
0007   3400           00675         retlw 0x00
0008   3471           00676         retlw 0x71
0009   3431           00677         retlw 0x31
000A   3400           00678         retlw 0x00
000B   3400           00679         retlw 0x00
000C   3400           00680         retlw 0x00
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D   347A           00681         retlw 0x7a
000E   3473           00682         retlw 0x73
000F   3461           00683         retlw 0x61
0010   3477           00684         retlw 0x77
0011   3432           00685         retlw 0x32
0012   3400           00686         retlw 0x00
0013   3400           00687         retlw 0x00
0014   3463           00688         retlw 0x63
0015   3478           00689         retlw 0x78
0016   3464           00690         retlw 0x64
0017   3465           00691         retlw 0x65
0018   3434           00692         retlw 0x34
0019   3433           00693         retlw 0x33
001A   3400           00694         retlw 0x00
001B   3400           00695         retlw 0x00
001C   3420           00696         retlw 0x20
001D   3476           00697         retlw 0x76
001E   3466           00698         retlw 0x66
001F   3474           00699         retlw 0x74
0020   3472           00700         retlw 0x72
0021   3435           00701         retlw 0x35
0022   3400           00702         retlw 0x00
0023   3400           00703         retlw 0x00
0024   346E           00704         retlw 0x6e
0025   3462           00705         retlw 0x62
0026   3468           00706         retlw 0x68
0027   3467           00707         retlw 0x67
0028   3479           00708         retlw 0x79
0029   3436           00709         retlw 0x36
002A   3400           00710         retlw 0x00
002B   3400           00711         retlw 0x00
002C   3400           00712         retlw 0x00
002D   346D           00713         retlw 0x6d
002E   346A           00714         retlw 0x6a
002F   3475           00715         retlw 0x75
0030   3437           00716         retlw 0x37
0031   3438           00717         retlw 0x38
0032   3400           00718         retlw 0x00
0033   3400           00719         retlw 0x00
0034   342C           00720         retlw 0x2c
0035   346B           00721         retlw 0x6b
0036   3469           00722         retlw 0x69
0037   346F           00723         retlw 0x6f
0038   3430           00724         retlw 0x30
0039   3439           00725         retlw 0x39
003A   3400           00726         retlw 0x00
003B   3400           00727         retlw 0x00
003C   342E           00728         retlw 0x2e
003D   342D           00729         retlw 0x2d
003E   346C           00730         retlw 0x6c
003F   3440           00731         retlw 0x40
0040   3470           00732         retlw 0x70
0041   3427           00733         retlw 0x27
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0042   3400           00734         retlw 0x00
0043   3400           00735         retlw 0x00
0044   3400           00736         retlw 0x00
0045   342B           00737         retlw 0x2b
0046   3400           00738         retlw 0x00
0047   345B           00739         retlw 0x5b
0048   345E           00740         retlw 0x5e
0049   3400           00741         retlw 0x00
004A   3400           00742         retlw 0x00
004B   3400           00743         retlw 0x00
004C   3400           00744         retlw 0x00
004D   340D           00745         retlw 0x0d
004E   345D           00746         retlw 0x5d
004F   3400           00747         retlw 0x00
0050   3400           00748         retlw 0x00
0051   3400           00749         retlw 0x00
0052   3400           00750         retlw 0x00
0053   3400           00751         retlw 0x00
0054   343C           00752         retlw 0x3c
0055   3400           00753         retlw 0x00
0056   3400           00754         retlw 0x00
0057   3400           00755         retlw 0x00
0058   3400           00756         retlw 0x00
0059   3408           00757         retlw 0x08
005A   3400           00758         retlw 0x00
005B   3400           00759         retlw 0x00
005C   3431           00760         retlw 0x31
005D   3400           00761         retlw 0x00
005E   3434           00762         retlw 0x34
005F   3437           00763         retlw 0x37
0060   3400           00764         retlw 0x00
0061   3400           00765         retlw 0x00
0062   3400           00766         retlw 0x00
0063   3430           00767         retlw 0x30
0064   342E           00768         retlw 0x2e
0065   3432           00769         retlw 0x32
0066   3435           00770         retlw 0x35
0067   3436           00771         retlw 0x36
0068   3438           00772         retlw 0x38
0069   341B           00773         retlw 0x1b
006A   3400           00774         retlw 0x00
006B   3400           00775         retlw 0x00
006C   342B           00776         retlw 0x2b
006D   3433           00777         retlw 0x33
006E   342D           00778         retlw 0x2d
006F   342A           00779         retlw 0x2a
0070   3439           00780         retlw 0x39
0071   340A           00781         retlw 0x0a
0072   3460           00782         retlw 0x60
0073   3400           00783         retlw 0x00
0074   3400           00784         retlw 0x00
0075   3400           00785         retlw 0x00
0076   3400           00786         retlw 0x00
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0077   3400           00787         retlw 0x00
0078   3400           00788         retlw 0x00
0079   3471           00789         retlw 0x71
007A   3431           00790         retlw 0x31
007B   3400           00791         retlw 0x00
007C   3400           00792         retlw 0x00
007D   3400           00793         retlw 0x00
007E   347A           00794         retlw 0x7a
007F   3473           00795         retlw 0x73
0080   3461           00796         retlw 0x61
0081   3477           00797         retlw 0x77
0082   3432           00798         retlw 0x32
0083   3400           00799         retlw 0x00
0084   3400           00800         retlw 0x00
0085   3463           00801         retlw 0x63
0086   3478           00802         retlw 0x78
0087   3464           00803         retlw 0x64
0088   3465           00804         retlw 0x65
0089   3434           00805         retlw 0x34
008A   3433           00806         retlw 0x33
008B   3400           00807         retlw 0x00
008C   3400           00808         retlw 0x00
008D   3420           00809         retlw 0x20
008E   3476           00810         retlw 0x76
008F   3466           00811         retlw 0x66
0090   3474           00812         retlw 0x74
0091   3472           00813         retlw 0x72
0092   3435           00814         retlw 0x35
0093   3400           00815         retlw 0x00
0094   3400           00816         retlw 0x00
0095   346E           00817         retlw 0x6e
0096   3462           00818         retlw 0x62
0097   3468           00819         retlw 0x68
0098   3467           00820         retlw 0x67
0099   3479           00821         retlw 0x79
009A   3436           00822         retlw 0x36
009B   3400           00823         retlw 0x00
009C   3400           00824         retlw 0x00
009D   3400           00825         retlw 0x00
009E   346D           00826         retlw 0x6d
009F   346A           00827         retlw 0x6a
00A0   3475           00828         retlw 0x75
00A1   3437           00829         retlw 0x37
00A2   3438           00830         retlw 0x38
00A3   3400           00831         retlw 0x00
00A4   3400           00832         retlw 0x00
00A5   342C           00833         retlw 0x2c
00A6   346B           00834         retlw 0x6b
00A7   3469           00835         retlw 0x69
00A8   346F           00836         retlw 0x6f
00A9   3430           00837         retlw 0x30
00AA   3439           00838         retlw 0x39
00AB   3400           00839         retlw 0x00
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AC   3400           00840         retlw 0x00
00AD   342E           00841         retlw 0x2e
00AE   342F           00842         retlw 0x2f
00AF   346C           00843         retlw 0x6c
00B0   343B           00844         retlw 0x3b
00B1   3470           00845         retlw 0x70
00B2   342D           00846         retlw 0x2d
00B3   3400           00847         retlw 0x00
00B4   3400           00848         retlw 0x00
00B5   3400           00849         retlw 0x00
00B6   3427           00850         retlw 0x27
00B7   3400           00851         retlw 0x00
00B8   345B           00852         retlw 0x5b
00B9   343D           00853         retlw 0x3d
00BA   3400           00854         retlw 0x00
00BB   3400           00855         retlw 0x00
00BC   3400           00856         retlw 0x00
00BD   3400           00857         retlw 0x00
00BE   340D           00858         retlw 0x0d
00BF   345D           00859         retlw 0x5d
00C0   3400           00860         retlw 0x00
00C1   345C           00861         retlw 0x5c
00C2   3400           00862         retlw 0x00
00C3   3400           00863         retlw 0x00
00C4   3400           00864         retlw 0x00
00C5   3400           00865         retlw 0x00
00C6   3400           00866         retlw 0x00
00C7   3400           00867         retlw 0x00
00C8   3400           00868         retlw 0x00
00C9   3400           00869         retlw 0x00
00CA   3408           00870         retlw 0x08
00CB   3400           00871         retlw 0x00
00CC   3400           00872         retlw 0x00
00CD   3431           00873         retlw 0x31
00CE   3400           00874         retlw 0x00
00CF   3434           00875         retlw 0x34
00D0   3437           00876         retlw 0x37
00D1   3400           00877         retlw 0x00
00D2   3400           00878         retlw 0x00
00D3   3400           00879         retlw 0x00
00D4   3430           00880         retlw 0x30
00D5   342E           00881         retlw 0x2e
00D6   3432           00882         retlw 0x32
00D7   3435           00883         retlw 0x35
00D8   3436           00884         retlw 0x36
00D9   3438           00885         retlw 0x38
00DA   341B           00886         retlw 0x1b
00DB   3400           00887         retlw 0x00
00DC   3400           00888         retlw 0x00
00DD   342B           00889         retlw 0x2b
00DE   3433           00890         retlw 0x33
00DF   342D           00891         retlw 0x2d
00E0   342A           00892         retlw 0x2a
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E1   3439           00893         retlw 0x39
                      00894 
                      00895 
                      00896 ID_main_10      idata   0x2100
2100                  00897 _ps2Default
2100   00             00898         db      0x00
                      00899 
                      00900 ;--------------------------------------------------------
                      00901 ; overlayable items in internal ram 
                      00902 ;--------------------------------------------------------
                      00903 ;       udata_ovr
                      00904 ;--------------------------------------------------------
                      00905 ; reset vector 
                      00906 ;--------------------------------------------------------
                      00907 STARTUP code 0x0000
0000   0000           00908         nop
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      00909         pagesel __sdcc_gsinit_startup
0001   2???           00910         goto    __sdcc_gsinit_startup
                      00911 ;--------------------------------------------------------
                      00912 ; code
                      00913 ;--------------------------------------------------------
                      00914 code_main       code
                      00915 ;***
                      00916 ;  pBlock Stats: dbName = M
                      00917 ;***
                      00918 ;entry:  _main  ;Function start
                      00919 ; 2 exit points
                      00920 ;has an exit
                      00921 ;functions called:
                      00922 ;   _readScanCode
                      00923 ;   _setPanel
                      00924 ;   _readScanCode
                      00925 ;   _setPanel
                      00926 ;   _delay_ms
                      00927 ;   _flashPanel
                      00928 ;   _setPanel
                      00929 ;   _setPanel
                      00930 ;   _delay_ms
                      00931 ;   _flashPanel
                      00932 ;   _setPanel
                      00933 ;   _setPanel
                      00934 ;   __gptrget1
                      00935 ;   __gptrget1
                      00936 ;   __gptrget1
                      00937 ;   _delay_us
                      00938 ;   _readScanCode
                      00939 ;   _setPanel
                      00940 ;   _readScanCode
                      00941 ;   _setPanel
                      00942 ;   _delay_ms
                      00943 ;   _flashPanel
                      00944 ;   _setPanel
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00945 ;   _setPanel
                      00946 ;   _delay_ms
                      00947 ;   _flashPanel
                      00948 ;   _setPanel
                      00949 ;   _setPanel
                      00950 ;   __gptrget1
                      00951 ;   __gptrget1
                      00952 ;   __gptrget1
                      00953 ;   _delay_us
                      00954 ;6 compiler assigned registers:
                      00955 ;   r0x100E
                      00956 ;   r0x100F
                      00957 ;   r0x1010
                      00958 ;   r0x1011
                      00959 ;   STK00
                      00960 ;   STK01
                      00961 ;; Starting pCode block
                      00962 ;;; gen.c:2316:resultRemat *{*
                      00963 ;;; gen.c:2760:genLabel *{*
                      00964 ;; ***  genLabel  2763
                      00965 ;;; gen.c:2316:resultRemat *{*
                      00966 ;;; gen.c:2340:genFunction *{*
                      00967 ;; ***  genFunction  2342 curr label offset=110previous max_key=1 
0000                  00968 _main   ;Function start
                      00969 ; 2 exit points
                      00970 ;;; gen.c:2316:resultRemat *{*
                      00971 ;;; gen.c:6910:genAssign *{*
                      00972 ;; ***  genAssign  6911
                      00973 ;; ***  aopForSym 315
                      00974 ;;      327 sym->rname = _ps2Default, size = 1
                      00975 ;;      694 register type nRegs=1
                      00976 ;;      line = 6920 result AOP_REG=r0x1059, size=1, left -=-, size=0, right AOP_DIR=_ps2Default, size=1
                      00977 ;; ***  genAssign  6990
                      00978 ;; WARNING      genAssign  6999 ignoring register storage
                      00979 ;; ***  genAssign  7006
                      00980 ;;; gen.c:1343:mov2w_op *{*
                      00981 ;; ***  mov2w  1381  offset=0
                      00982 ;; >>> gen.c:1386:mov2w
                      00983 ;;      1009
                      00984 ;;      1028  _ps2Default   offset=0
                      00985         .line   269; "main.c"   unsigned char ps2Config = ps2Default;
0000   ???? ????      00986         BANKSEL _ps2Default
0002   08??           00987         MOVF    _ps2Default,W
                      00988 ;; >>> gen.c:7033:genAssign
                      00989 ;;      1109 rIdx = r0x1059 
0003   ???? ????      00990         BANKSEL r0x100E
0005   00??           00991         MOVWF   r0x100E
                      00992 ;;; gen.c:2316:resultRemat *{*
                      00993 ;;; gen.c:6910:genAssign *{*
                      00994 ;; ***  genAssign  6911
                      00995 ;; ***  aopForSym 315
                      00996 ;;      327 sym->rname = _CMCON, size = 1
                      00997 ;;      line = 6920 result AOP_DIR=_CMCON, size=1, left -=-, size=0, right AOP_LIT=0x07, size=1
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00998 ;; ***  genAssign  7006
                      00999 ;; >>> gen.c:7013:genAssign
                      01000         .line   271; "main.c"   CMCON = 0b00000111;                     // ADC disabled
0006   3007           01001         MOVLW   0x07
                      01002 ;; >>> gen.c:7015:genAssign
                      01003 ;;      1009
                      01004 ;;      1028  _CMCON   offset=0
0007   ???? ????      01005         BANKSEL _CMCON
0009   00??           01006         MOVWF   _CMCON
                      01007 ;;; gen.c:2316:resultRemat *{*
                      01008 ;;; gen.c:2316:resultRemat *{*
                      01009 ;;; gen.c:6669:genPointerSet *{*
                      01010 ;; ***  genPointerSet  6670
                      01011 ;;; gen.c:6488:genNearPointerSet *{*
                      01012 ;; ***  genNearPointerSet  6489
                      01013 ;;      613
                      01014 ;;      aopForRemat 392
                      01015 ;;      418: rname _PORTAbits, val 0, const = 0
                      01016 ;; ***  genNearPointerSet  6504
                      01017 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      01018 ;;      _PORTAbits
                      01019 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x01, size=1
                      01020 ;;; gen.c:6232:genPackBits *{*
                      01021 ;; ***  genPackBits  6233
                      01022 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      01023 ;;      _PORTAbits
                      01024 ;; >>> gen.c:6258:genPackBits
                      01025         .line   272; "main.c"   z80Break = 1; TRISA2 = 0;
000A   15??           01026         BSF     _PORTAbits,2
                      01027 ;;; gen.c:2316:resultRemat *{*
                      01028 ;;; gen.c:2316:resultRemat *{*
                      01029 ;;; gen.c:6669:genPointerSet *{*
                      01030 ;; ***  genPointerSet  6670
                      01031 ;;; gen.c:6488:genNearPointerSet *{*
                      01032 ;; ***  genNearPointerSet  6489
                      01033 ;;      613
                      01034 ;;      aopForRemat 392
                      01035 ;;      418: rname _TRISAbits, val 0, const = 0
                      01036 ;; ***  genNearPointerSet  6504
                      01037 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      01038 ;;      _TRISAbits
                      01039 ;;      line = 6506 result AOP_PCODE=_TRISAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      01040 ;;; gen.c:6232:genPackBits *{*
                      01041 ;; ***  genPackBits  6233
                      01042 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      01043 ;;      _TRISAbits
                      01044 ;; >>> gen.c:6258:genPackBits
000B   ???? ????      01045         BANKSEL _TRISAbits
000D   11??           01046         BCF     _TRISAbits,2
                      01047 ;;; gen.c:2316:resultRemat *{*
                      01048 ;;; gen.c:6910:genAssign *{*
                      01049 ;; ***  genAssign  6911
                      01050 ;; ***  aopForSym 315
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01051 ;;      327 sym->rname = _PORTB, size = 1
                      01052 ;;      line = 6920 result AOP_DIR=_PORTB, size=1, left -=-, size=0, right AOP_LIT=0xff, size=1
                      01053 ;; ***  genAssign  7006
                      01054 ;; >>> gen.c:7013:genAssign
                      01055         .line   273; "main.c"   lxData = 0b11111111; TRISB = 0b00000000;
000E   30FF           01056         MOVLW   0xff
                      01057 ;; >>> gen.c:7015:genAssign
                      01058 ;;      1009
                      01059 ;;      1028  _PORTB   offset=0
000F   ???? ????      01060         BANKSEL _PORTB
0011   00??           01061         MOVWF   _PORTB
                      01062 ;;; gen.c:2316:resultRemat *{*
                      01063 ;;; gen.c:6910:genAssign *{*
                      01064 ;; ***  genAssign  6911
                      01065 ;; ***  aopForSym 315
                      01066 ;;      327 sym->rname = _TRISB, size = 1
                      01067 ;;      line = 6920 result AOP_DIR=_TRISB, size=1, left -=-, size=0, right AOP_LIT=0x00, size=1
                      01068 ;; ***  genAssign  7006
                      01069 ;; >>> gen.c:7018:genAssign
                      01070 ;;      1009
                      01071 ;;      1028  _TRISB   offset=0
0012   ???? ????      01072         BANKSEL _TRISB
0014   01??           01073         CLRF    _TRISB
                      01074 ;;; gen.c:2316:resultRemat *{*
                      01075 ;;; gen.c:2760:genLabel *{*
                      01076 ;; ***  genLabel  2763
                      01077 ;;; gen.c:2316:resultRemat *{*
                      01078 ;;; gen.c:6742:genIfx *{*
                      01079 ;; ***  genIfx  6743
                      01080 ;; ***  aopForSym 315
                      01081 ;;      327 sym->rname = _scanCode, size = 1
                      01082 ;; ***  pic14_toBoolean  1515
                      01083 ;; >>> gen.c:1522:pic14_toBoolean
0015                  01084 _00216_DS_
                      01085         .line   276; "main.c"   while(!scanCode)
0015   3000           01086         MOVLW   0x00
                      01087 ;; >>> gen.c:1533:pic14_toBoolean
                      01088 ;;      1009
                      01089 ;;      1028  _scanCode   offset=0
0016   ???? ????      01090         BANKSEL _scanCode
0018   04??           01091         IORWF   _scanCode,W
                      01092 ;; >>> gen.c:6791:genIfx
0019   1D03           01093         BTFSS   STATUS,2
                      01094 ;; >>> gen.c:6792:genIfx
                      01095 ;; ***  popGetLabel  key=3, label offset 115
001A   2???           01096         GOTO    _00218_DS_
                      01097 ;;; gen.c:2316:resultRemat *{*
                      01098 ;;; gen.c:2086:genCall *{*
                      01099 ;; ***  genCall  2088
                      01100 ;;; gen.c:1801:saveRegisters *{*
                      01101 ;; ***  saveRegisters  1803
                      01102 ;; >>> gen.c:2175:genCall
                      01103         .line   277; "main.c"   readScanCode();
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001B   2???           01104         CALL    _readScanCode
                      01105 ;;; gen.c:1845:unsaveRegisters *{*
                      01106 ;; ***  unsaveRegisters  1847
                      01107 ;;; gen.c:2316:resultRemat *{*
                      01108 ;;; gen.c:2778:genGoto *{*
                      01109 ;; >>> gen.c:2780:genGoto
                      01110 ;; ***  popGetLabel  key=1, label offset 115
001C   2???           01111         GOTO    _00216_DS_
                      01112 ;;; gen.c:2316:resultRemat *{*
                      01113 ;;; gen.c:2760:genLabel *{*
                      01114 ;; ***  genLabel  2763
                      01115 ;;; gen.c:2316:resultRemat *{*
                      01116 ;;; gen.c:2316:resultRemat *{*
                      01117 ;;; gen.c:2086:genCall *{*
                      01118 ;; ***  genCall  2088
                      01119 ;;; gen.c:1801:saveRegisters *{*
                      01120 ;; ***  saveRegisters  1803
                      01121 ;;      2135 left AOP_LIT
                      01122 ;;; gen.c:1343:mov2w_op *{*
                      01123 ;; >>> gen.c:1361:mov2w_op
001D                  01124 _00218_DS_
                      01125         .line   280; "main.c"   setPanel(0b00000010);
001D   3002           01126         MOVLW   0x02
                      01127 ;; >>> gen.c:2175:genCall
001E   2???           01128         CALL    _setPanel
                      01129 ;;; gen.c:1845:unsaveRegisters *{*
                      01130 ;; ***  unsaveRegisters  1847
                      01131 ;;; gen.c:2316:resultRemat *{*
                      01132 ;;; gen.c:2760:genLabel *{*
                      01133 ;; ***  genLabel  2763
                      01134 ;;; gen.c:2316:resultRemat *{*
                      01135 ;;; gen.c:2086:genCall *{*
                      01136 ;; ***  genCall  2088
                      01137 ;;; gen.c:1801:saveRegisters *{*
                      01138 ;; ***  saveRegisters  1803
                      01139 ;; >>> gen.c:2175:genCall
001F                  01140 _00219_DS_
                      01141         .line   287; "main.c"   readScanCode();
001F   2???           01142         CALL    _readScanCode
                      01143 ;;; gen.c:1845:unsaveRegisters *{*
                      01144 ;; ***  unsaveRegisters  1847
                      01145 ;;; gen.c:2316:resultRemat *{*
                      01146 ;;; gen.c:6742:genIfx *{*
                      01147 ;; ***  genIfx  6743
                      01148 ;; ***  aopForSym 315
                      01149 ;;      327 sym->rname = _scanCode, size = 1
                      01150 ;; ***  pic14_toBoolean  1515
                      01151 ;; >>> gen.c:1522:pic14_toBoolean
                      01152         .line   288; "main.c"   } while (!scanCode);
0020   3000           01153         MOVLW   0x00
                      01154 ;; >>> gen.c:1533:pic14_toBoolean
                      01155 ;;      1009
                      01156 ;;      1028  _scanCode   offset=0
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0021   ???? ????      01157         BANKSEL _scanCode
0023   04??           01158         IORWF   _scanCode,W
                      01159 ;; >>> gen.c:6796:genIfx
0024   1903           01160         BTFSC   STATUS,2
                      01161 ;; >>> gen.c:6797:genIfx
                      01162 ;; ***  popGetLabel  key=4, label offset 115
0025   2???           01163         GOTO    _00219_DS_
                      01164 ;;; gen.c:2316:resultRemat *{*
                      01165 ;;; gen.c:2316:resultRemat *{*
                      01166 ;;; gen.c:6669:genPointerSet *{*
                      01167 ;; ***  genPointerSet  6670
                      01168 ;;; gen.c:6488:genNearPointerSet *{*
                      01169 ;; ***  genNearPointerSet  6489
                      01170 ;;      613
                      01171 ;;      aopForRemat 392
                      01172 ;;      418: rname _PORTBbits, val 0, const = 0
                      01173 ;; ***  genNearPointerSet  6504
                      01174 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      01175 ;;      _PORTBbits
                      01176 ;;      line = 6506 result AOP_PCODE=_PORTBbits, size=2, left -=-, size=0, right AOP_LIT=0x01, size=1
                      01177 ;;; gen.c:6232:genPackBits *{*
                      01178 ;; ***  genPackBits  6233
                      01179 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      01180 ;;      _PORTBbits
                      01181 ;; >>> gen.c:6258:genPackBits
                      01182         .line   290; "main.c"   lxStrobe = 1;
0026   ???? ????      01183         BANKSEL _PORTBbits
0028   17??           01184         BSF     _PORTBbits,7
                      01185 ;;; gen.c:2316:resultRemat *{*
                      01186 ;;; gen.c:6910:genAssign *{*
                      01187 ;; ***  genAssign  6911
                      01188 ;;      694 register type nRegs=1
                      01189 ;;      line = 6920 result AOP_REG=r0x105A, size=1, left -=-, size=0, right AOP_LIT=0x00, size=1
                      01190 ;; ***  genAssign  7006
                      01191 ;; >>> gen.c:7018:genAssign
                      01192 ;;      1109 rIdx = r0x105A 
                      01193         .line   291; "main.c"   ascii = 0;
0029   ???? ????      01194         BANKSEL r0x100F
002B   01??           01195         CLRF    r0x100F
                      01196 ;;; gen.c:2316:resultRemat *{*
                      01197 ;;; gen.c:6742:genIfx *{*
                      01198 ;; ***  genIfx  6743
                      01199 ;; ***  aopForSym 315
                      01200 ;;      327 sym->rname = _extendedKey, size = 1
                      01201 ;; ***  pic14_toBoolean  1515
                      01202 ;; >>> gen.c:1522:pic14_toBoolean
                      01203         .line   293; "main.c"   if(extendedKey)
002C   3000           01204         MOVLW   0x00
                      01205 ;; >>> gen.c:1533:pic14_toBoolean
                      01206 ;;      1009
                      01207 ;;      1028  _extendedKey   offset=0
002D   ???? ????      01208         BANKSEL _extendedKey
002F   04??           01209         IORWF   _extendedKey,W
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01210 ;; >>> gen.c:6796:genIfx
0030   1903           01211         BTFSC   STATUS,2
                      01212 ;; >>> gen.c:6797:genIfx
                      01213 ;; ***  popGetLabel  key=47, label offset 115
0031   2???           01214         GOTO    _00262_DS_
                      01215 ;;; gen.c:2316:resultRemat *{*
                      01216 ;;; gen.c:3619:genCmpEq *{*
                      01217 ;; ***  genCmpEq  3620
                      01218 ;; ifx is non-null
                      01219 ;; ***  aopForSym 315
                      01220 ;;      327 sym->rname = _scanCode, size = 1
                      01221 ;;      line = 3631 result AOP_CRY=0x00, size=0, left AOP_DIR=_scanCode, size=1, right AOP_LIT=0x11, siz
                            e=1
                      01222 ;; ***  mov2w  1381  offset=0
                      01223 ;; >>> gen.c:1386:mov2w
                      01224 ;;      1009
                      01225 ;;      1028  _scanCode   offset=0
                      01226         .line   294; "main.c"   switch(scanCode)
0032   ???? ????      01227         BANKSEL _scanCode
0034   08??           01228         MOVF    _scanCode,W
                      01229 ;; >>> gen.c:3685:genCmpEq
0035   3A11           01230         XORLW   0x11
0036   1903           01231         BTFSC   STATUS,2
0037   2???           01232         GOTO    _00222_DS_
0038   08??           01233         MOVF    _scanCode,W
0039   3A14           01234         XORLW   0x14
003A   1903           01235         BTFSC   STATUS,2
003B   2???           01236         GOTO    _00223_DS_
003C   08??           01237         MOVF    _scanCode,W
003D   3A4A           01238         XORLW   0x4a
003E   1903           01239         BTFSC   STATUS,2
003F   2???           01240         GOTO    _00224_DS_
0040   08??           01241         MOVF    _scanCode,W
0041   3A5A           01242         XORLW   0x5a
0042   1903           01243         BTFSC   STATUS,2
0043   2???           01244         GOTO    _00227_DS_
0044   08??           01245         MOVF    _scanCode,W
0045   3A71           01246         XORLW   0x71
0046   1903           01247         BTFSC   STATUS,2
0047   2???           01248         GOTO    _00230_DS_
0048   2???           01249         GOTO    _00263_DS_
0049                  01250 _00222_DS_
                      01251         .line   297; "main.c"   altGr = !keyUp;
0049   ???? ????      01252         BANKSEL _keyUp
004B   08??           01253         MOVF    _keyUp,W
                      01254 ;; >>> gen.c:1582:genNot
004C   3000           01255         MOVLW   0x00
                      01256 ;; >>> gen.c:1583:genNot
004D   1903           01257         BTFSC   STATUS,2
                      01258 ;; >>> gen.c:1584:genNot
004E   3001           01259         MOVLW   0x01
                      01260 ;; >>> gen.c:1393:movwf
                      01261 ;;      1009
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01262 ;;      1028  _altGr   offset=0
004F   ???? ????      01263         BANKSEL _altGr
0051   00??           01264         MOVWF   _altGr
                      01265 ;;; gen.c:2316:resultRemat *{*
                      01266 ;;; gen.c:2778:genGoto *{*
                      01267 ;; >>> gen.c:2780:genGoto
                      01268 ;; ***  popGetLabel  key=48, label offset 115
                      01269         .line   298; "main.c"   break;
0052   2???           01270         GOTO    _00263_DS_
                      01271 ;;; gen.c:2316:resultRemat *{*
                      01272 ;;; gen.c:2760:genLabel *{*
                      01273 ;; ***  genLabel  2763
                      01274 ;;; gen.c:2316:resultRemat *{*
                      01275 ;;; gen.c:1548:genNot *{*
                      01276 ;; ***  genNot  1550
                      01277 ;; ***  aopForSym 315
                      01278 ;;      327 sym->rname = _keyUp, size = 1
                      01279 ;; ***  aopForSym 315
                      01280 ;;      327 sym->rname = _ctrl, size = 1
                      01281 ;;      line = 1555 result AOP_DIR=_ctrl, size=1, left AOP_DIR=_keyUp, size=1, right -=-, size=0
                      01282 ;; ***  mov2w  1381  offset=0
                      01283 ;; >>> gen.c:1386:mov2w
                      01284 ;;      1009
                      01285 ;;      1028  _keyUp   offset=0
0053                  01286 _00223_DS_
                      01287         .line   301; "main.c"   ctrl = !keyUp;
0053   ???? ????      01288         BANKSEL _keyUp
0055   08??           01289         MOVF    _keyUp,W
                      01290 ;; >>> gen.c:1582:genNot
0056   3000           01291         MOVLW   0x00
                      01292 ;; >>> gen.c:1583:genNot
0057   1903           01293         BTFSC   STATUS,2
                      01294 ;; >>> gen.c:1584:genNot
0058   3001           01295         MOVLW   0x01
                      01296 ;; >>> gen.c:1393:movwf
                      01297 ;;      1009
                      01298 ;;      1028  _ctrl   offset=0
0059   ???? ????      01299         BANKSEL _ctrl
005B   00??           01300         MOVWF   _ctrl
                      01301 ;;; gen.c:2316:resultRemat *{*
                      01302 ;;; gen.c:2778:genGoto *{*
                      01303 ;; >>> gen.c:2780:genGoto
                      01304 ;; ***  popGetLabel  key=48, label offset 115
                      01305         .line   302; "main.c"   break;
005C   2???           01306         GOTO    _00263_DS_
                      01307 ;;; gen.c:2316:resultRemat *{*
                      01308 ;;; gen.c:2760:genLabel *{*
                      01309 ;; ***  genLabel  2763
                      01310 ;;; gen.c:2316:resultRemat *{*
                      01311 ;;; gen.c:6742:genIfx *{*
                      01312 ;; ***  genIfx  6743
                      01313 ;; ***  aopForSym 315
                      01314 ;;      327 sym->rname = _keyUp, size = 1
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01315 ;; ***  pic14_toBoolean  1515
                      01316 ;; >>> gen.c:1522:pic14_toBoolean
005D                  01317 _00224_DS_
                      01318         .line   305; "main.c"   if(!keyUp)
005D   3000           01319         MOVLW   0x00
                      01320 ;; >>> gen.c:1533:pic14_toBoolean
                      01321 ;;      1009
                      01322 ;;      1028  _keyUp   offset=0
005E   ???? ????      01323         BANKSEL _keyUp
0060   04??           01324         IORWF   _keyUp,W
                      01325 ;; >>> gen.c:6791:genIfx
0061   1D03           01326         BTFSS   STATUS,2
                      01327 ;; >>> gen.c:6792:genIfx
                      01328 ;; ***  popGetLabel  key=48, label offset 115
0062   2???           01329         GOTO    _00263_DS_
                      01330 ;;; gen.c:2316:resultRemat *{*
                      01331 ;;; gen.c:6910:genAssign *{*
                      01332 ;; ***  genAssign  6911
                      01333 ;;      694 register type nRegs=1
                      01334 ;;      line = 6920 result AOP_REG=r0x105A, size=1, left -=-, size=0, right AOP_LIT=0x2f, size=1
                      01335 ;; ***  genAssign  7006
                      01336 ;; >>> gen.c:7013:genAssign
                      01337         .line   306; "main.c"   ascii = '/';
0063   302F           01338         MOVLW   0x2f
                      01339 ;; >>> gen.c:7015:genAssign
                      01340 ;;      1109 rIdx = r0x105A 
0064   ???? ????      01341         BANKSEL r0x100F
0066   00??           01342         MOVWF   r0x100F
                      01343 ;;; gen.c:2316:resultRemat *{*
                      01344 ;;; gen.c:2778:genGoto *{*
                      01345 ;; >>> gen.c:2780:genGoto
                      01346 ;; ***  popGetLabel  key=48, label offset 115
                      01347         .line   307; "main.c"   break;
0067   2???           01348         GOTO    _00263_DS_
                      01349 ;;; gen.c:2316:resultRemat *{*
                      01350 ;;; gen.c:2760:genLabel *{*
                      01351 ;; ***  genLabel  2763
                      01352 ;;; gen.c:2316:resultRemat *{*
                      01353 ;;; gen.c:6742:genIfx *{*
                      01354 ;; ***  genIfx  6743
                      01355 ;; ***  aopForSym 315
                      01356 ;;      327 sym->rname = _keyUp, size = 1
                      01357 ;; ***  pic14_toBoolean  1515
                      01358 ;; >>> gen.c:1522:pic14_toBoolean
0068                  01359 _00227_DS_
                      01360         .line   310; "main.c"   if(!keyUp)
0068   3000           01361         MOVLW   0x00
                      01362 ;; >>> gen.c:1533:pic14_toBoolean
                      01363 ;;      1009
                      01364 ;;      1028  _keyUp   offset=0
0069   ???? ????      01365         BANKSEL _keyUp
006B   04??           01366         IORWF   _keyUp,W
                      01367 ;; >>> gen.c:6791:genIfx
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006C   1D03           01368         BTFSS   STATUS,2
                      01369 ;; >>> gen.c:6792:genIfx
                      01370 ;; ***  popGetLabel  key=48, label offset 115
006D   2???           01371         GOTO    _00263_DS_
                      01372 ;;; gen.c:2316:resultRemat *{*
                      01373 ;;; gen.c:6910:genAssign *{*
                      01374 ;; ***  genAssign  6911
                      01375 ;;      694 register type nRegs=1
                      01376 ;;      line = 6920 result AOP_REG=r0x105A, size=1, left -=-, size=0, right AOP_LIT=0x0d, size=1
                      01377 ;; ***  genAssign  7006
                      01378 ;; >>> gen.c:7013:genAssign
                      01379         .line   311; "main.c"   ascii = 0x0D;
006E   300D           01380         MOVLW   0x0d
                      01381 ;; >>> gen.c:7015:genAssign
                      01382 ;;      1109 rIdx = r0x105A 
006F   ???? ????      01383         BANKSEL r0x100F
0071   00??           01384         MOVWF   r0x100F
                      01385 ;;; gen.c:2316:resultRemat *{*
                      01386 ;;; gen.c:2778:genGoto *{*
                      01387 ;; >>> gen.c:2780:genGoto
                      01388 ;; ***  popGetLabel  key=48, label offset 115
                      01389         .line   312; "main.c"   break;
0072   2???           01390         GOTO    _00263_DS_
                      01391 ;;; gen.c:2316:resultRemat *{*
                      01392 ;;; gen.c:2760:genLabel *{*
                      01393 ;; ***  genLabel  2763
                      01394 ;;; gen.c:2316:resultRemat *{*
                      01395 ;;; gen.c:6742:genIfx *{*
                      01396 ;; ***  genIfx  6743
                      01397 ;; ***  aopForSym 315
                      01398 ;;      327 sym->rname = _keyUp, size = 1
                      01399 ;; ***  pic14_toBoolean  1515
                      01400 ;; >>> gen.c:1522:pic14_toBoolean
0073                  01401 _00230_DS_
                      01402         .line   315; "main.c"   if(!keyUp)
0073   3000           01403         MOVLW   0x00
                      01404 ;; >>> gen.c:1533:pic14_toBoolean
                      01405 ;;      1009
                      01406 ;;      1028  _keyUp   offset=0
0074   ???? ????      01407         BANKSEL _keyUp
0076   04??           01408         IORWF   _keyUp,W
                      01409 ;; >>> gen.c:6791:genIfx
0077   1D03           01410         BTFSS   STATUS,2
                      01411 ;; >>> gen.c:6792:genIfx
                      01412 ;; ***  popGetLabel  key=48, label offset 115
0078   2???           01413         GOTO    _00263_DS_
                      01414 ;;; gen.c:2316:resultRemat *{*
                      01415 ;;; gen.c:6910:genAssign *{*
                      01416 ;; ***  genAssign  6911
                      01417 ;;      694 register type nRegs=1
                      01418 ;;      line = 6920 result AOP_REG=r0x105A, size=1, left -=-, size=0, right AOP_LIT=0x7f, size=1
                      01419 ;; ***  genAssign  7006
                      01420 ;; >>> gen.c:7013:genAssign
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01421         .line   316; "main.c"   ascii = 0x7F;
0079   307F           01422         MOVLW   0x7f
                      01423 ;; >>> gen.c:7015:genAssign
                      01424 ;;      1109 rIdx = r0x105A 
007A   ???? ????      01425         BANKSEL r0x100F
007C   00??           01426         MOVWF   r0x100F
                      01427 ;;; gen.c:2316:resultRemat *{*
                      01428 ;;; gen.c:2778:genGoto *{*
                      01429 ;; >>> gen.c:2780:genGoto
                      01430 ;; ***  popGetLabel  key=48, label offset 115
                      01431         .line   318; "main.c"   }
007D   2???           01432         GOTO    _00263_DS_
                      01433 ;;; gen.c:2316:resultRemat *{*
                      01434 ;;; gen.c:2760:genLabel *{*
                      01435 ;; ***  genLabel  2763
                      01436 ;;; gen.c:2316:resultRemat *{*
                      01437 ;;; gen.c:3619:genCmpEq *{*
                      01438 ;; ***  genCmpEq  3620
                      01439 ;; ifx is non-null
                      01440 ;; ***  aopForSym 315
                      01441 ;;      327 sym->rname = _scanCode, size = 1
                      01442 ;;      line = 3631 result AOP_CRY=0x00, size=0, left AOP_DIR=_scanCode, size=1, right AOP_LIT=0x05, siz
                            e=1
                      01443 ;; ***  mov2w  1381  offset=0
                      01444 ;; >>> gen.c:1386:mov2w
                      01445 ;;      1009
                      01446 ;;      1028  _scanCode   offset=0
007E                  01447 _00262_DS_
                      01448         .line   320; "main.c"   switch(scanCode)
007E   ???? ????      01449         BANKSEL _scanCode
0080   08??           01450         MOVF    _scanCode,W
                      01451 ;; >>> gen.c:3685:genCmpEq
0081   3A05           01452         XORLW   0x05
0082   1903           01453         BTFSC   STATUS,2
0083   2???           01454         GOTO    _00234_DS_
0084   08??           01455         MOVF    _scanCode,W
0085   3A09           01456         XORLW   0x09
0086   1903           01457         BTFSC   STATUS,2
0087   2???           01458         GOTO    _00237_DS_
0088   08??           01459         MOVF    _scanCode,W
0089   3A11           01460         XORLW   0x11
008A   1903           01461         BTFSC   STATUS,2
008B   2???           01462         GOTO    _00240_DS_
008C   08??           01463         MOVF    _scanCode,W
008D   3A12           01464         XORLW   0x12
008E   1903           01465         BTFSC   STATUS,2
008F   2???           01466         GOTO    _00242_DS_
0090   08??           01467         MOVF    _scanCode,W
0091   3A14           01468         XORLW   0x14
0092   1903           01469         BTFSC   STATUS,2
0093   2???           01470         GOTO    _00243_DS_
0094   08??           01471         MOVF    _scanCode,W
0095   3A58           01472         XORLW   0x58
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0096   1903           01473         BTFSC   STATUS,2
0097   2???           01474         GOTO    _00244_DS_
0098   08??           01475         MOVF    _scanCode,W
0099   3A59           01476         XORLW   0x59
009A   1903           01477         BTFSC   STATUS,2
009B   2???           01478         GOTO    _00242_DS_
009C   2???           01479         GOTO    _00247_DS_
009D                  01480 _00234_DS_
                      01481         .line   323; "main.c"   if(!keyUp & alt)
009D   ???? ????      01482         BANKSEL _keyUp
009F   08??           01483         MOVF    _keyUp,W
                      01484 ;; >>> gen.c:1582:genNot
00A0   3000           01485         MOVLW   0x00
                      01486 ;; >>> gen.c:1583:genNot
00A1   1903           01487         BTFSC   STATUS,2
                      01488 ;; >>> gen.c:1584:genNot
00A2   3001           01489         MOVLW   0x01
                      01490 ;; >>> gen.c:1393:movwf
                      01491 ;;      1109 rIdx = r0x105B 
00A3   ???? ????      01492         BANKSEL r0x1010
00A5   00??           01493         MOVWF   r0x1010
                      01494 ;;; gen.c:2316:resultRemat *{*
                      01495 ;;; gen.c:7103:genCast *{*
                      01496 ;; ***  genCast  7104
                      01497 ;; ***  aopForSym 315
                      01498 ;;      327 sym->rname = _alt, size = 1
                      01499 ;;      694 register type nRegs=1
                      01500 ;;      line = 7112 result AOP_REG=r0x105C, size=1, left -=-, size=0, right AOP_DIR=_alt, size=1
                      01501 ;; ***  genCast  7236
                      01502 ;; >>> gen.c:7260:genCast
                      01503 ;;      1009
                      01504 ;;      1028  _alt   offset=0
00A6   ???? ????      01505         BANKSEL _alt
00A8   08??           01506         MOVF    _alt,W
                      01507 ;; >>> gen.c:7261:genCast
                      01508 ;;      1109 rIdx = r0x105C 
00A9   ???? ????      01509         BANKSEL r0x1011
00AB   00??           01510         MOVWF   r0x1011
00AC   05??           01511         ANDWF   r0x1010,F
                      01512 ;;; gen.c:2316:resultRemat *{*
                      01513 ;;; gen.c:6742:genIfx *{*
                      01514 ;; ***  genIfx  6743
                      01515 ;;      694 register type nRegs=1
                      01516 ;; ***  pic14_toBoolean  1515
                      01517 ;; >>> gen.c:1522:pic14_toBoolean
00AD   08??           01518         MOVF    r0x1010,W
00AE   1903           01519         BTFSC   STATUS,2
                      01520 ;; >>> gen.c:6797:genIfx
                      01521 ;; ***  popGetLabel  key=48, label offset 115
00AF   2???           01522         GOTO    _00263_DS_
                      01523 ;;; gen.c:2316:resultRemat *{*
                      01524 ;;; gen.c:2316:resultRemat *{*
                      01525 ;;; gen.c:2086:genCall *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01526 ;; ***  genCall  2088
                      01527 ;;; gen.c:1801:saveRegisters *{*
                      01528 ;; ***  saveRegisters  1803
                      01529 ;;      2135 left AOP_LIT
                      01530 ;;; gen.c:1343:mov2w_op *{*
                      01531 ;; >>> gen.c:1361:mov2w_op
                      01532         .line   326; "main.c"   setPanel(0b00000000);
00B0   3000           01533         MOVLW   0x00
                      01534 ;; >>> gen.c:2175:genCall
00B1   2???           01535         CALL    _setPanel
                      01536 ;;; gen.c:1845:unsaveRegisters *{*
                      01537 ;; ***  unsaveRegisters  1847
                      01538 ;;; gen.c:2316:resultRemat *{*
                      01539 ;;; gen.c:2316:resultRemat *{*
                      01540 ;;; gen.c:2086:genCall *{*
                      01541 ;; ***  genCall  2088
                      01542 ;;; gen.c:1801:saveRegisters *{*
                      01543 ;; ***  saveRegisters  1803
                      01544 ;;      2135 left AOP_LIT
                      01545 ;;; gen.c:1343:mov2w_op *{*
                      01546 ;; >>> gen.c:1361:mov2w_op
                      01547         .line   327; "main.c"   delay_ms(200);
00B2   30C8           01548         MOVLW   0xc8
                      01549 ;;      2135 left AOP_LIT
                      01550 ;; >>> gen.c:2143:genCall
                      01551 ;; ***  popRegFromIdx,1042  , rIdx=0x7f
00B3   00??           01552         MOVWF   STK00
                      01553 ;;; gen.c:1343:mov2w_op *{*
                      01554 ;; >>> gen.c:1361:mov2w_op
00B4   3000           01555         MOVLW   0x00
                      01556 ;; >>> gen.c:2173:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      01557         PAGESEL _delay_ms
                      01558 ;; >>> gen.c:2175:genCall
00B5   2???           01559         CALL    _delay_ms
                      01560 ;; >>> gen.c:2181:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      01561         PAGESEL $
                      01562 ;;; gen.c:1845:unsaveRegisters *{*
                      01563 ;; ***  unsaveRegisters  1847
                      01564 ;;; gen.c:2316:resultRemat *{*
                      01565 ;;; gen.c:4501:genXor *{*
                      01566 ;; ***  genXor  4502
                      01567 ;;      694 register type nRegs=1
                      01568 ;;      575
                      01569 ;; >>> gen.c:4643:genXor
                      01570         .line   330; "main.c"   ps2Config ^= 0b00000001;
00B6   3001           01571         MOVLW   0x01
                      01572 ;; >>> gen.c:4644:genXor
                      01573 ;;      1109 rIdx = r0x1059 
00B7   ???? ????      01574         BANKSEL r0x100E
00B9   06??           01575         XORWF   r0x100E,F
                      01576 ;;; gen.c:2316:resultRemat *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01577 ;;; gen.c:3919:genAnd *{*
                      01578 ;; ***  genAnd  3920
                      01579 ;;      694 register type nRegs=1
                      01580 ;;      694 register type nRegs=1
                      01581 ;;      line = 3955 result AOP_REG=r0x105B, size=1, left AOP_REG=r0x1059, size=1, right AOP_LIT=0x01, si
                            ze=1
                      01582 ;; >>> gen.c:4190:genAnd
                      01583         .line   335; "main.c"   flashPanel(ps2Config & 0b00000001);
00BA   3001           01584         MOVLW   0x01
                      01585 ;; >>> gen.c:4191:genAnd
                      01586 ;;      1109 rIdx = r0x1059 
00BB   05??           01587         ANDWF   r0x100E,W
                      01588 ;; >>> gen.c:4192:genAnd
                      01589 ;;      1109 rIdx = r0x105B 
00BC   00??           01590         MOVWF   r0x1010
00BD   2???           01591         CALL    _flashPanel
                      01592 ;;; gen.c:1845:unsaveRegisters *{*
                      01593 ;; ***  unsaveRegisters  1847
                      01594 ;;; gen.c:2316:resultRemat *{*
                      01595 ;;; gen.c:6742:genIfx *{*
                      01596 ;; ***  genIfx  6743
                      01597 ;; ***  aopForSym 315
                      01598 ;;      327 sym->rname = _shiftLock, size = 1
                      01599 ;; ***  pic14_toBoolean  1515
                      01600 ;; >>> gen.c:1522:pic14_toBoolean
                      01601         .line   338; "main.c"   setPanel(shiftLock ? 0b00000110 : 0b00000010);
00BE   3000           01602         MOVLW   0x00
                      01603 ;; >>> gen.c:1533:pic14_toBoolean
                      01604 ;;      1009
                      01605 ;;      1028  _shiftLock   offset=0
00BF   ???? ????      01606         BANKSEL _shiftLock
00C1   04??           01607         IORWF   _shiftLock,W
                      01608 ;; >>> gen.c:6796:genIfx
00C2   1903           01609         BTFSC   STATUS,2
                      01610 ;; >>> gen.c:6797:genIfx
                      01611 ;; ***  popGetLabel  key=60, label offset 115
00C3   2???           01612         GOTO    _00275_DS_
                      01613 ;;; gen.c:2316:resultRemat *{*
                      01614 ;;; gen.c:6910:genAssign *{*
                      01615 ;; ***  genAssign  6911
                      01616 ;;      694 register type nRegs=1
                      01617 ;;      line = 6920 result AOP_REG=r0x105B, size=1, left -=-, size=0, right AOP_LIT=0x06, size=1
                      01618 ;; ***  genAssign  7006
                      01619 ;; >>> gen.c:7013:genAssign
00C4   3006           01620         MOVLW   0x06
                      01621 ;; >>> gen.c:7015:genAssign
                      01622 ;;      1109 rIdx = r0x105B 
00C5   ???? ????      01623         BANKSEL r0x1010
00C7   00??           01624         MOVWF   r0x1010
                      01625 ;;; gen.c:2316:resultRemat *{*
                      01626 ;;; gen.c:2778:genGoto *{*
                      01627 ;; >>> gen.c:2780:genGoto
                      01628 ;; ***  popGetLabel  key=61, label offset 115
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C8   2???           01629         GOTO    _00276_DS_
                      01630 ;;; gen.c:2316:resultRemat *{*
                      01631 ;;; gen.c:2760:genLabel *{*
                      01632 ;; ***  genLabel  2763
                      01633 ;;; gen.c:2316:resultRemat *{*
                      01634 ;;; gen.c:6910:genAssign *{*
                      01635 ;; ***  genAssign  6911
                      01636 ;;      694 register type nRegs=1
                      01637 ;;      line = 6920 result AOP_REG=r0x105B, size=1, left -=-, size=0, right AOP_LIT=0x02, size=1
                      01638 ;; ***  genAssign  7006
                      01639 ;; >>> gen.c:7013:genAssign
00C9                  01640 _00275_DS_
00C9   3002           01641         MOVLW   0x02
                      01642 ;; >>> gen.c:7015:genAssign
                      01643 ;;      1109 rIdx = r0x105B 
00CA   ???? ????      01644         BANKSEL r0x1010
00CC   00??           01645         MOVWF   r0x1010
                      01646 ;;; gen.c:2316:resultRemat *{*
                      01647 ;;; gen.c:2760:genLabel *{*
                      01648 ;; ***  genLabel  2763
                      01649 ;;; gen.c:2316:resultRemat *{*
                      01650 ;;; gen.c:2316:resultRemat *{*
                      01651 ;;; gen.c:2086:genCall *{*
                      01652 ;; ***  genCall  2088
                      01653 ;;; gen.c:1801:saveRegisters *{*
                      01654 ;; ***  saveRegisters  1803
                      01655 ;;      694 register type nRegs=1
                      01656 ;;      694 register type nRegs=1
                      01657 ;;      2135 left AOP_REG
                      01658 ;;; gen.c:1343:mov2w_op *{*
                      01659 ;; ***  mov2w  1381  offset=0
                      01660 ;; >>> gen.c:1386:mov2w
                      01661 ;;      1109 rIdx = r0x105B 
00CD                  01662 _00276_DS_
00CD   ???? ????      01663         BANKSEL r0x1010
00CF   08??           01664         MOVF    r0x1010,W
                      01665 ;; >>> gen.c:2175:genCall
00D0   2???           01666         CALL    _setPanel
                      01667 ;;; gen.c:1845:unsaveRegisters *{*
                      01668 ;; ***  unsaveRegisters  1847
                      01669 ;;; gen.c:2316:resultRemat *{*
                      01670 ;;; gen.c:2778:genGoto *{*
                      01671 ;; >>> gen.c:2780:genGoto
                      01672 ;; ***  popGetLabel  key=48, label offset 115
                      01673         .line   340; "main.c"   break;
00D1   2???           01674         GOTO    _00263_DS_
                      01675 ;;; gen.c:2316:resultRemat *{*
                      01676 ;;; gen.c:2760:genLabel *{*
                      01677 ;; ***  genLabel  2763
                      01678 ;;; gen.c:2316:resultRemat *{*
                      01679 ;;; gen.c:1548:genNot *{*
                      01680 ;; ***  genNot  1550
                      01681 ;; ***  aopForSym 315
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01682 ;;      327 sym->rname = _keyUp, size = 1
                      01683 ;;      694 register type nRegs=1
                      01684 ;;      line = 1555 result AOP_REG=r0x105B, size=1, left AOP_DIR=_keyUp, size=1, right -=-, size=0
                      01685 ;; ***  mov2w  1381  offset=0
                      01686 ;; >>> gen.c:1386:mov2w
                      01687 ;;      1009
                      01688 ;;      1028  _keyUp   offset=0
00D2                  01689 _00237_DS_
                      01690         .line   343; "main.c"   if(!keyUp & ctrl & alt)
00D2   ???? ????      01691         BANKSEL _keyUp
00D4   08??           01692         MOVF    _keyUp,W
                      01693 ;; >>> gen.c:1582:genNot
00D5   3000           01694         MOVLW   0x00
                      01695 ;; >>> gen.c:1583:genNot
00D6   1903           01696         BTFSC   STATUS,2
                      01697 ;; >>> gen.c:1584:genNot
00D7   3001           01698         MOVLW   0x01
                      01699 ;; >>> gen.c:1393:movwf
                      01700 ;;      1109 rIdx = r0x105B 
00D8   ???? ????      01701         BANKSEL r0x1010
00DA   00??           01702         MOVWF   r0x1010
                      01703 ;;; gen.c:2316:resultRemat *{*
                      01704 ;;; gen.c:7103:genCast *{*
                      01705 ;; ***  genCast  7104
                      01706 ;; ***  aopForSym 315
                      01707 ;;      327 sym->rname = _ctrl, size = 1
                      01708 ;;      694 register type nRegs=1
                      01709 ;;      line = 7112 result AOP_REG=r0x105C, size=1, left -=-, size=0, right AOP_DIR=_ctrl, size=1
                      01710 ;; ***  genCast  7236
                      01711 ;; >>> gen.c:7260:genCast
                      01712 ;;      1009
                      01713 ;;      1028  _ctrl   offset=0
00DB   ???? ????      01714         BANKSEL _ctrl
00DD   08??           01715         MOVF    _ctrl,W
                      01716 ;; >>> gen.c:7261:genCast
                      01717 ;;      1109 rIdx = r0x105C 
00DE   ???? ????      01718         BANKSEL r0x1011
00E0   00??           01719         MOVWF   r0x1011
00E1   05??           01720         ANDWF   r0x1010,F
                      01721 ;;; gen.c:2316:resultRemat *{*
                      01722 ;;; gen.c:7103:genCast *{*
                      01723 ;; ***  genCast  7104
                      01724 ;; ***  aopForSym 315
                      01725 ;;      327 sym->rname = _alt, size = 1
                      01726 ;;      694 register type nRegs=1
                      01727 ;;      line = 7112 result AOP_REG=r0x105C, size=1, left -=-, size=0, right AOP_DIR=_alt, size=1
                      01728 ;; ***  genCast  7236
                      01729 ;; >>> gen.c:7260:genCast
                      01730 ;;      1009
                      01731 ;;      1028  _alt   offset=0
00E2   ???? ????      01732         BANKSEL _alt
00E4   08??           01733         MOVF    _alt,W
                      01734 ;; >>> gen.c:7261:genCast
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01735 ;;      1109 rIdx = r0x105C 
00E5   ???? ????      01736         BANKSEL r0x1011
00E7   00??           01737         MOVWF   r0x1011
00E8   05??           01738         ANDWF   r0x1010,F
                      01739 ;;; gen.c:2316:resultRemat *{*
                      01740 ;;; gen.c:6742:genIfx *{*
                      01741 ;; ***  genIfx  6743
                      01742 ;;      694 register type nRegs=1
                      01743 ;; ***  pic14_toBoolean  1515
                      01744 ;; >>> gen.c:1522:pic14_toBoolean
00E9   08??           01745         MOVF    r0x1010,W
00EA   1903           01746         BTFSC   STATUS,2
                      01747 ;; >>> gen.c:6797:genIfx
                      01748 ;; ***  popGetLabel  key=48, label offset 115
00EB   2???           01749         GOTO    _00263_DS_
                      01750 ;;; gen.c:2316:resultRemat *{*
                      01751 ;;; gen.c:2316:resultRemat *{*
                      01752 ;;; gen.c:2086:genCall *{*
                      01753 ;; ***  genCall  2088
                      01754 ;;; gen.c:1801:saveRegisters *{*
                      01755 ;; ***  saveRegisters  1803
                      01756 ;;      2135 left AOP_LIT
                      01757 ;;; gen.c:1343:mov2w_op *{*
                      01758 ;; >>> gen.c:1361:mov2w_op
                      01759         .line   346; "main.c"   setPanel(0b00000000);
00EC   3000           01760         MOVLW   0x00
                      01761 ;; >>> gen.c:2175:genCall
00ED   2???           01762         CALL    _setPanel
                      01763 ;;; gen.c:1845:unsaveRegisters *{*
                      01764 ;; ***  unsaveRegisters  1847
                      01765 ;;; gen.c:2316:resultRemat *{*
                      01766 ;;; gen.c:2316:resultRemat *{*
                      01767 ;;; gen.c:2086:genCall *{*
                      01768 ;; ***  genCall  2088
                      01769 ;;; gen.c:1801:saveRegisters *{*
                      01770 ;; ***  saveRegisters  1803
                      01771 ;;      2135 left AOP_LIT
                      01772 ;;; gen.c:1343:mov2w_op *{*
                      01773 ;; >>> gen.c:1361:mov2w_op
                      01774         .line   347; "main.c"   delay_ms(200);
00EE   30C8           01775         MOVLW   0xc8
                      01776 ;;      2135 left AOP_LIT
                      01777 ;; >>> gen.c:2143:genCall
                      01778 ;; ***  popRegFromIdx,1042  , rIdx=0x7f
00EF   00??           01779         MOVWF   STK00
                      01780 ;;; gen.c:1343:mov2w_op *{*
                      01781 ;; >>> gen.c:1361:mov2w_op
00F0   3000           01782         MOVLW   0x00
                      01783 ;; >>> gen.c:2173:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      01784         PAGESEL _delay_ms
                      01785 ;; >>> gen.c:2175:genCall
00F1   2???           01786         CALL    _delay_ms
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01787 ;; >>> gen.c:2181:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      01788         PAGESEL $
                      01789 ;;; gen.c:1845:unsaveRegisters *{*
                      01790 ;; ***  unsaveRegisters  1847
                      01791 ;;; gen.c:2316:resultRemat *{*
                      01792 ;;; gen.c:6910:genAssign *{*
                      01793 ;; ***  genAssign  6911
                      01794 ;;      694 register type nRegs=1
                      01795 ;; ***  aopForSym 315
                      01796 ;;      327 sym->rname = _ps2Default, size = 1
                      01797 ;;      line = 6920 result AOP_DIR=_ps2Default, size=1, left -=-, size=0, right AOP_REG=r0x1059, size=1
                      01798 ;; ***  genAssign  7006
                      01799 ;;; gen.c:1343:mov2w_op *{*
                      01800 ;; ***  mov2w  1381  offset=0
                      01801 ;; >>> gen.c:1386:mov2w
                      01802 ;;      1109 rIdx = r0x1059 
                      01803         .line   350; "main.c"   ps2Default = ps2Config;
00F2   ???? ????      01804         BANKSEL r0x100E
00F4   08??           01805         MOVF    r0x100E,W
                      01806 ;; >>> gen.c:7033:genAssign
                      01807 ;;      1009
                      01808 ;;      1028  _ps2Default   offset=0
00F5   ???? ????      01809         BANKSEL _ps2Default
00F7   00??           01810         MOVWF   _ps2Default
                      01811 ;;; gen.c:2316:resultRemat *{*
                      01812 ;;; gen.c:2316:resultRemat *{*
                      01813 ;;; gen.c:2086:genCall *{*
                      01814 ;; ***  genCall  2088
                      01815 ;;; gen.c:1801:saveRegisters *{*
                      01816 ;; ***  saveRegisters  1803
                      01817 ;;      2135 left AOP_LIT
                      01818 ;;; gen.c:1343:mov2w_op *{*
                      01819 ;; >>> gen.c:1361:mov2w_op
                      01820         .line   353; "main.c"   flashPanel(2);
00F8   3002           01821         MOVLW   0x02
                      01822 ;; >>> gen.c:2175:genCall
00F9   2???           01823         CALL    _flashPanel
                      01824 ;;; gen.c:1845:unsaveRegisters *{*
                      01825 ;; ***  unsaveRegisters  1847
                      01826 ;;; gen.c:2316:resultRemat *{*
                      01827 ;;; gen.c:6742:genIfx *{*
                      01828 ;; ***  genIfx  6743
                      01829 ;; ***  aopForSym 315
                      01830 ;;      327 sym->rname = _shiftLock, size = 1
                      01831 ;; ***  pic14_toBoolean  1515
                      01832 ;; >>> gen.c:1522:pic14_toBoolean
                      01833         .line   356; "main.c"   setPanel(shiftLock ? 0b00000110 : 0b00000010);
00FA   3000           01834         MOVLW   0x00
                      01835 ;; >>> gen.c:1533:pic14_toBoolean
                      01836 ;;      1009
                      01837 ;;      1028  _shiftLock   offset=0
00FB   ???? ????      01838         BANKSEL _shiftLock
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FD   04??           01839         IORWF   _shiftLock,W
                      01840 ;; >>> gen.c:6796:genIfx
00FE   1903           01841         BTFSC   STATUS,2
                      01842 ;; >>> gen.c:6797:genIfx
                      01843 ;; ***  popGetLabel  key=62, label offset 115
00FF   2???           01844         GOTO    _00277_DS_
                      01845 ;;; gen.c:2316:resultRemat *{*
                      01846 ;;; gen.c:6910:genAssign *{*
                      01847 ;; ***  genAssign  6911
                      01848 ;;      694 register type nRegs=1
                      01849 ;;      line = 6920 result AOP_REG=r0x105B, size=1, left -=-, size=0, right AOP_LIT=0x06, size=1
                      01850 ;; ***  genAssign  7006
                      01851 ;; >>> gen.c:7013:genAssign
0100   3006           01852         MOVLW   0x06
                      01853 ;; >>> gen.c:7015:genAssign
                      01854 ;;      1109 rIdx = r0x105B 
0101   ???? ????      01855         BANKSEL r0x1010
0103   00??           01856         MOVWF   r0x1010
                      01857 ;;; gen.c:2316:resultRemat *{*
                      01858 ;;; gen.c:2778:genGoto *{*
                      01859 ;; >>> gen.c:2780:genGoto
                      01860 ;; ***  popGetLabel  key=63, label offset 115
0104   2???           01861         GOTO    _00278_DS_
                      01862 ;;; gen.c:2316:resultRemat *{*
                      01863 ;;; gen.c:2760:genLabel *{*
                      01864 ;; ***  genLabel  2763
                      01865 ;;; gen.c:2316:resultRemat *{*
                      01866 ;;; gen.c:6910:genAssign *{*
                      01867 ;; ***  genAssign  6911
                      01868 ;;      694 register type nRegs=1
                      01869 ;;      line = 6920 result AOP_REG=r0x105B, size=1, left -=-, size=0, right AOP_LIT=0x02, size=1
                      01870 ;; ***  genAssign  7006
                      01871 ;; >>> gen.c:7013:genAssign
0105                  01872 _00277_DS_
0105   3002           01873         MOVLW   0x02
                      01874 ;; >>> gen.c:7015:genAssign
                      01875 ;;      1109 rIdx = r0x105B 
0106   ???? ????      01876         BANKSEL r0x1010
0108   00??           01877         MOVWF   r0x1010
                      01878 ;;; gen.c:2316:resultRemat *{*
                      01879 ;;; gen.c:2760:genLabel *{*
                      01880 ;; ***  genLabel  2763
                      01881 ;;; gen.c:2316:resultRemat *{*
                      01882 ;;; gen.c:2316:resultRemat *{*
                      01883 ;;; gen.c:2086:genCall *{*
                      01884 ;; ***  genCall  2088
                      01885 ;;; gen.c:1801:saveRegisters *{*
                      01886 ;; ***  saveRegisters  1803
                      01887 ;;      694 register type nRegs=1
                      01888 ;;      694 register type nRegs=1
                      01889 ;;      2135 left AOP_REG
                      01890 ;;; gen.c:1343:mov2w_op *{*
                      01891 ;; ***  mov2w  1381  offset=0
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01892 ;; >>> gen.c:1386:mov2w
                      01893 ;;      1109 rIdx = r0x105B 
0109                  01894 _00278_DS_
0109   ???? ????      01895         BANKSEL r0x1010
010B   08??           01896         MOVF    r0x1010,W
                      01897 ;; >>> gen.c:2175:genCall
010C   2???           01898         CALL    _setPanel
                      01899 ;;; gen.c:1845:unsaveRegisters *{*
                      01900 ;; ***  unsaveRegisters  1847
                      01901 ;;; gen.c:2316:resultRemat *{*
                      01902 ;;; gen.c:2778:genGoto *{*
                      01903 ;; >>> gen.c:2780:genGoto
                      01904 ;; ***  popGetLabel  key=48, label offset 115
                      01905         .line   358; "main.c"   break;
010D   2???           01906         GOTO    _00263_DS_
                      01907 ;;; gen.c:2316:resultRemat *{*
                      01908 ;;; gen.c:2760:genLabel *{*
                      01909 ;; ***  genLabel  2763
                      01910 ;;; gen.c:2316:resultRemat *{*
                      01911 ;;; gen.c:1548:genNot *{*
                      01912 ;; ***  genNot  1550
                      01913 ;; ***  aopForSym 315
                      01914 ;;      327 sym->rname = _keyUp, size = 1
                      01915 ;; ***  aopForSym 315
                      01916 ;;      327 sym->rname = _alt, size = 1
                      01917 ;;      line = 1555 result AOP_DIR=_alt, size=1, left AOP_DIR=_keyUp, size=1, right -=-, size=0
                      01918 ;; ***  mov2w  1381  offset=0
                      01919 ;; >>> gen.c:1386:mov2w
                      01920 ;;      1009
                      01921 ;;      1028  _keyUp   offset=0
010E                  01922 _00240_DS_
                      01923         .line   361; "main.c"   alt = !keyUp;
010E   ???? ????      01924         BANKSEL _keyUp
0110   08??           01925         MOVF    _keyUp,W
                      01926 ;; >>> gen.c:1582:genNot
0111   3000           01927         MOVLW   0x00
                      01928 ;; >>> gen.c:1583:genNot
0112   1903           01929         BTFSC   STATUS,2
                      01930 ;; >>> gen.c:1584:genNot
0113   3001           01931         MOVLW   0x01
                      01932 ;; >>> gen.c:1393:movwf
                      01933 ;;      1009
                      01934 ;;      1028  _alt   offset=0
0114   ???? ????      01935         BANKSEL _alt
0116   00??           01936         MOVWF   _alt
                      01937 ;;; gen.c:2316:resultRemat *{*
                      01938 ;;; gen.c:2778:genGoto *{*
                      01939 ;; >>> gen.c:2780:genGoto
                      01940 ;; ***  popGetLabel  key=48, label offset 115
                      01941         .line   362; "main.c"   break;
0117   2???           01942         GOTO    _00263_DS_
                      01943 ;;; gen.c:2316:resultRemat *{*
                      01944 ;;; gen.c:2760:genLabel *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01945 ;; ***  genLabel  2763
                      01946 ;;; gen.c:2316:resultRemat *{*
                      01947 ;;; gen.c:1548:genNot *{*
                      01948 ;; ***  genNot  1550
                      01949 ;; ***  aopForSym 315
                      01950 ;;      327 sym->rname = _keyUp, size = 1
                      01951 ;; ***  aopForSym 315
                      01952 ;;      327 sym->rname = _shift, size = 1
                      01953 ;;      line = 1555 result AOP_DIR=_shift, size=1, left AOP_DIR=_keyUp, size=1, right -=-, size=0
                      01954 ;; ***  mov2w  1381  offset=0
                      01955 ;; >>> gen.c:1386:mov2w
                      01956 ;;      1009
                      01957 ;;      1028  _keyUp   offset=0
0118                  01958 _00242_DS_
                      01959         .line   366; "main.c"   shift = !keyUp;
0118   ???? ????      01960         BANKSEL _keyUp
011A   08??           01961         MOVF    _keyUp,W
                      01962 ;; >>> gen.c:1582:genNot
011B   3000           01963         MOVLW   0x00
                      01964 ;; >>> gen.c:1583:genNot
011C   1903           01965         BTFSC   STATUS,2
                      01966 ;; >>> gen.c:1584:genNot
011D   3001           01967         MOVLW   0x01
                      01968 ;; >>> gen.c:1393:movwf
                      01969 ;;      1009
                      01970 ;;      1028  _shift   offset=0
011E   ???? ????      01971         BANKSEL _shift
0120   00??           01972         MOVWF   _shift
                      01973 ;;; gen.c:2316:resultRemat *{*
                      01974 ;;; gen.c:2778:genGoto *{*
                      01975 ;; >>> gen.c:2780:genGoto
                      01976 ;; ***  popGetLabel  key=48, label offset 115
                      01977         .line   367; "main.c"   break;
0121   2???           01978         GOTO    _00263_DS_
                      01979 ;;; gen.c:2316:resultRemat *{*
                      01980 ;;; gen.c:2760:genLabel *{*
                      01981 ;; ***  genLabel  2763
                      01982 ;;; gen.c:2316:resultRemat *{*
                      01983 ;;; gen.c:1548:genNot *{*
                      01984 ;; ***  genNot  1550
                      01985 ;; ***  aopForSym 315
                      01986 ;;      327 sym->rname = _keyUp, size = 1
                      01987 ;; ***  aopForSym 315
                      01988 ;;      327 sym->rname = _ctrl, size = 1
                      01989 ;;      line = 1555 result AOP_DIR=_ctrl, size=1, left AOP_DIR=_keyUp, size=1, right -=-, size=0
                      01990 ;; ***  mov2w  1381  offset=0
                      01991 ;; >>> gen.c:1386:mov2w
                      01992 ;;      1009
                      01993 ;;      1028  _keyUp   offset=0
0122                  01994 _00243_DS_
                      01995         .line   370; "main.c"   ctrl = !keyUp;
0122   ???? ????      01996         BANKSEL _keyUp
0124   08??           01997         MOVF    _keyUp,W
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01998 ;; >>> gen.c:1582:genNot
0125   3000           01999         MOVLW   0x00
                      02000 ;; >>> gen.c:1583:genNot
0126   1903           02001         BTFSC   STATUS,2
                      02002 ;; >>> gen.c:1584:genNot
0127   3001           02003         MOVLW   0x01
                      02004 ;; >>> gen.c:1393:movwf
                      02005 ;;      1009
                      02006 ;;      1028  _ctrl   offset=0
0128   ???? ????      02007         BANKSEL _ctrl
012A   00??           02008         MOVWF   _ctrl
                      02009 ;;; gen.c:2316:resultRemat *{*
                      02010 ;;; gen.c:2778:genGoto *{*
                      02011 ;; >>> gen.c:2780:genGoto
                      02012 ;; ***  popGetLabel  key=48, label offset 115
                      02013         .line   371; "main.c"   break;
012B   2???           02014         GOTO    _00263_DS_
                      02015 ;;; gen.c:2316:resultRemat *{*
                      02016 ;;; gen.c:2760:genLabel *{*
                      02017 ;; ***  genLabel  2763
                      02018 ;;; gen.c:2316:resultRemat *{*
                      02019 ;;; gen.c:6742:genIfx *{*
                      02020 ;; ***  genIfx  6743
                      02021 ;; ***  aopForSym 315
                      02022 ;;      327 sym->rname = _keyUp, size = 1
                      02023 ;; ***  pic14_toBoolean  1515
                      02024 ;; >>> gen.c:1522:pic14_toBoolean
012C                  02025 _00244_DS_
                      02026         .line   374; "main.c"   if(!keyUp)
012C   3000           02027         MOVLW   0x00
                      02028 ;; >>> gen.c:1533:pic14_toBoolean
                      02029 ;;      1009
                      02030 ;;      1028  _keyUp   offset=0
012D   ???? ????      02031         BANKSEL _keyUp
012F   04??           02032         IORWF   _keyUp,W
                      02033 ;; >>> gen.c:6791:genIfx
0130   1D03           02034         BTFSS   STATUS,2
                      02035 ;; >>> gen.c:6792:genIfx
                      02036 ;; ***  popGetLabel  key=48, label offset 115
0131   2???           02037         GOTO    _00263_DS_
                      02038 ;;; gen.c:2316:resultRemat *{*
                      02039 ;;; gen.c:1548:genNot *{*
                      02040 ;; ***  genNot  1550
                      02041 ;; ***  aopForSym 315
                      02042 ;;      327 sym->rname = _shiftLock, size = 1
                      02043 ;;      575
                      02044 ;;      line = 1555 result AOP_DIR=_shiftLock, size=1, left AOP_DIR=_shiftLock, size=1, right -=-, size=
                            0
                      02045 ;; ***  mov2w  1381  offset=0
                      02046 ;; >>> gen.c:1386:mov2w
                      02047 ;;      1009
                      02048 ;;      1028  _shiftLock   offset=0
                      02049         .line   376; "main.c"   shiftLock = !shiftLock;
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0132   ???? ????      02050         BANKSEL _shiftLock
0134   08??           02051         MOVF    _shiftLock,W
                      02052 ;; >>> gen.c:1582:genNot
0135   3000           02053         MOVLW   0x00
                      02054 ;; >>> gen.c:1583:genNot
0136   1903           02055         BTFSC   STATUS,2
                      02056 ;; >>> gen.c:1584:genNot
0137   3001           02057         MOVLW   0x01
                      02058 ;; >>> gen.c:1393:movwf
                      02059 ;;      1009
                      02060 ;;      1028  _shiftLock   offset=0
0138   00??           02061         MOVWF   _shiftLock
                      02062 ;;; gen.c:2316:resultRemat *{*
                      02063 ;;; gen.c:6742:genIfx *{*
                      02064 ;; ***  genIfx  6743
                      02065 ;; ***  aopForSym 315
                      02066 ;;      327 sym->rname = _shiftLock, size = 1
                      02067 ;; ***  pic14_toBoolean  1515
                      02068 ;; >>> gen.c:1522:pic14_toBoolean
                      02069         .line   377; "main.c"   setPanel(shiftLock ? 0b00000110 : 0b00000010);
0139   3000           02070         MOVLW   0x00
                      02071 ;; >>> gen.c:1533:pic14_toBoolean
                      02072 ;;      1009
                      02073 ;;      1028  _shiftLock   offset=0
013A   04??           02074         IORWF   _shiftLock,W
                      02075 ;; >>> gen.c:6796:genIfx
013B   1903           02076         BTFSC   STATUS,2
                      02077 ;; >>> gen.c:6797:genIfx
                      02078 ;; ***  popGetLabel  key=64, label offset 115
013C   2???           02079         GOTO    _00279_DS_
                      02080 ;;; gen.c:2316:resultRemat *{*
                      02081 ;;; gen.c:6910:genAssign *{*
                      02082 ;; ***  genAssign  6911
                      02083 ;;      694 register type nRegs=1
                      02084 ;;      line = 6920 result AOP_REG=r0x105B, size=1, left -=-, size=0, right AOP_LIT=0x06, size=1
                      02085 ;; ***  genAssign  7006
                      02086 ;; >>> gen.c:7013:genAssign
013D   3006           02087         MOVLW   0x06
                      02088 ;; >>> gen.c:7015:genAssign
                      02089 ;;      1109 rIdx = r0x105B 
013E   ???? ????      02090         BANKSEL r0x1010
0140   00??           02091         MOVWF   r0x1010
                      02092 ;;; gen.c:2316:resultRemat *{*
                      02093 ;;; gen.c:2778:genGoto *{*
                      02094 ;; >>> gen.c:2780:genGoto
                      02095 ;; ***  popGetLabel  key=65, label offset 115
0141   2???           02096         GOTO    _00280_DS_
                      02097 ;;; gen.c:2316:resultRemat *{*
                      02098 ;;; gen.c:2760:genLabel *{*
                      02099 ;; ***  genLabel  2763
                      02100 ;;; gen.c:2316:resultRemat *{*
                      02101 ;;; gen.c:6910:genAssign *{*
                      02102 ;; ***  genAssign  6911
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02103 ;;      694 register type nRegs=1
                      02104 ;;      line = 6920 result AOP_REG=r0x105B, size=1, left -=-, size=0, right AOP_LIT=0x02, size=1
                      02105 ;; ***  genAssign  7006
                      02106 ;; >>> gen.c:7013:genAssign
0142                  02107 _00279_DS_
0142   3002           02108         MOVLW   0x02
                      02109 ;; >>> gen.c:7015:genAssign
                      02110 ;;      1109 rIdx = r0x105B 
0143   ???? ????      02111         BANKSEL r0x1010
0145   00??           02112         MOVWF   r0x1010
                      02113 ;;; gen.c:2316:resultRemat *{*
                      02114 ;;; gen.c:2760:genLabel *{*
                      02115 ;; ***  genLabel  2763
                      02116 ;;; gen.c:2316:resultRemat *{*
                      02117 ;;; gen.c:2316:resultRemat *{*
                      02118 ;;; gen.c:2086:genCall *{*
                      02119 ;; ***  genCall  2088
                      02120 ;;; gen.c:1801:saveRegisters *{*
                      02121 ;; ***  saveRegisters  1803
                      02122 ;;      694 register type nRegs=1
                      02123 ;;      694 register type nRegs=1
                      02124 ;;      2135 left AOP_REG
                      02125 ;;; gen.c:1343:mov2w_op *{*
                      02126 ;; ***  mov2w  1381  offset=0
                      02127 ;; >>> gen.c:1386:mov2w
                      02128 ;;      1109 rIdx = r0x105B 
0146                  02129 _00280_DS_
0146   ???? ????      02130         BANKSEL r0x1010
0148   08??           02131         MOVF    r0x1010,W
                      02132 ;; >>> gen.c:2175:genCall
0149   2???           02133         CALL    _setPanel
                      02134 ;;; gen.c:1845:unsaveRegisters *{*
                      02135 ;; ***  unsaveRegisters  1847
                      02136 ;;; gen.c:2316:resultRemat *{*
                      02137 ;;; gen.c:2778:genGoto *{*
                      02138 ;; >>> gen.c:2780:genGoto
                      02139 ;; ***  popGetLabel  key=48, label offset 115
                      02140         .line   379; "main.c"   break;
014A   2???           02141         GOTO    _00263_DS_
                      02142 ;;; gen.c:2316:resultRemat *{*
                      02143 ;;; gen.c:2760:genLabel *{*
                      02144 ;; ***  genLabel  2763
                      02145 ;;; gen.c:2316:resultRemat *{*
                      02146 ;;; gen.c:6742:genIfx *{*
                      02147 ;; ***  genIfx  6743
                      02148 ;; ***  aopForSym 315
                      02149 ;;      327 sym->rname = _keyUp, size = 1
                      02150 ;; ***  pic14_toBoolean  1515
                      02151 ;; >>> gen.c:1522:pic14_toBoolean
014B                  02152 _00247_DS_
                      02153         .line   382; "main.c"   if(!keyUp && scanCode > 0x0C && scanCode < 0x7E)
014B   3000           02154         MOVLW   0x00
                      02155 ;; >>> gen.c:1533:pic14_toBoolean
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02156 ;;      1009
                      02157 ;;      1028  _keyUp   offset=0
014C   ???? ????      02158         BANKSEL _keyUp
014E   04??           02159         IORWF   _keyUp,W
                      02160 ;; >>> gen.c:6791:genIfx
014F   1D03           02161         BTFSS   STATUS,2
                      02162 ;; >>> gen.c:6792:genIfx
                      02163 ;; ***  popGetLabel  key=48, label offset 115
0150   2???           02164         GOTO    _00263_DS_
                      02165 ;;; gen.c:2316:resultRemat *{*
                      02166 ;;; gen.c:3547:genCmpGt *{*
                      02167 ;; ***  genCmpGt  3548
                      02168 ;; ***  aopForSym 315
                      02169 ;;      327 sym->rname = _scanCode, size = 1
                      02170 ;;; gen.c:3294:genCmp *{*
                      02171 ;;swapping arguments (AOP_TYPEs 1/3)
                      02172 ;;unsigned compare: left >= lit(0xD=13), size=1
                      02173 ;; >>> gen.c:3265:pic14_mov2w_regOrLit
0151   300D           02174         MOVLW   0x0d
                      02175 ;; >>> gen.c:3432:genCmp
                      02176 ;;      1009
                      02177 ;;      1028  _scanCode   offset=0
0152   ???? ????      02178         BANKSEL _scanCode
0154   02??           02179         SUBWF   _scanCode,W
                      02180 ;;; gen.c:3237:genSkipc *{*
                      02181 ;; >>> gen.c:3244:genSkipc
0155   1C03           02182         BTFSS   STATUS,0
                      02183 ;; >>> gen.c:3246:genSkipc
                      02184 ;; ***  popGetLabel  key=48, label offset 115
0156   2???           02185         GOTO    _00263_DS_
                      02186 ;;genSkipc:3247: created from rifx:0x7fff91f84700
                      02187 ;;; gen.c:2316:resultRemat *{*
                      02188 ;;; gen.c:2316:resultRemat *{*
                      02189 ;;; gen.c:3583:genCmpLt *{*
                      02190 ;; ***  genCmpLt  3584
                      02191 ;; ***  aopForSym 315
                      02192 ;;      327 sym->rname = _scanCode, size = 1
                      02193 ;;; gen.c:3294:genCmp *{*
                      02194 ;;unsigned compare: left < lit(0x7E=126), size=1
                      02195 ;; >>> gen.c:3265:pic14_mov2w_regOrLit
0157   307E           02196         MOVLW   0x7e
                      02197 ;; >>> gen.c:3432:genCmp
                      02198 ;;      1009
                      02199 ;;      1028  _scanCode   offset=0
0158   02??           02200         SUBWF   _scanCode,W
                      02201 ;;; gen.c:3237:genSkipc *{*
                      02202 ;; >>> gen.c:3242:genSkipc
0159   1803           02203         BTFSC   STATUS,0
                      02204 ;; >>> gen.c:3246:genSkipc
                      02205 ;; ***  popGetLabel  key=48, label offset 115
015A   2???           02206         GOTO    _00263_DS_
                      02207 ;;genSkipc:3247: created from rifx:0x7fff91f84700
                      02208 ;;; gen.c:2316:resultRemat *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02209 ;;; gen.c:2316:resultRemat *{*
                      02210 ;;; gen.c:7300:genDjnz *{*
                      02211 ;; ***  genDjnz  7301
                      02212 ;;; genarith.c:896:genMinus *{*
                      02213 ;; ***  genMinus  897
                      02214 ;; ***  aopForSym 315
                      02215 ;;      327 sym->rname = _scanCode, size = 1
                      02216 ;;      575
                      02217 ;;      result AOP_DIR, left AOP_DIR, right AOP_LIT
                      02218 ;;; genarith.c:269:genAddLit *{*
                      02219 ;; ***  genAddLit  270
                      02220 ;;; genarith.c:233:genAddLit2byte *{*
                      02221 ;; >>> genarith.c:245:genAddLit2byte
                      02222         .line   384; "main.c"   scanCode -= 0x0D;
015B   30F3           02223         MOVLW   0xf3
                      02224 ;; >>> genarith.c:246:genAddLit2byte
                      02225 ;;      1009
                      02226 ;;      1028  _scanCode   offset=0
015C   07??           02227         ADDWF   _scanCode,F
                      02228 ;; ***  addSign  861
                      02229 ;;; genarith.c:862:addSign *{*
                      02230 ;;; gen.c:2316:resultRemat *{*
                      02231 ;;; gen.c:3919:genAnd *{*
                      02232 ;; ***  genAnd  3920
                      02233 ;;      694 register type nRegs=1
                      02234 ;;      line = 3955 result AOP_CRY=0x00, size=0, left AOP_REG=r0x1059, size=1, right AOP_LIT=0x01, size=
                            1
                      02235 ;;; gen.c:3842:isLiteralBit *{*
                      02236 ;; ***  isLiteralBit  3843
                      02237 ;; >>> gen.c:4039:genAnd
                      02238         .line   385; "main.c"   if(ps2Config & layoutUSA)
015D   ???? ????      02239         BANKSEL r0x100E
015F   1C??           02240         BTFSS   r0x100E,0
                      02241 ;; >>> gen.c:4040:genAnd
                      02242 ;; ***  popGetLabel  key=34, label offset 115
0160   2???           02243         GOTO    _00249_DS_
                      02244 ;;; gen.c:2316:resultRemat *{*
                      02245 ;;; gen.c:2316:resultRemat *{*
                      02246 ;; ***  genPlus  611
                      02247 ;;; genarith.c:612:genPlus *{*
                      02248 ;; ***  aopForSym 315
                      02249 ;;      327 sym->rname = _scanCode, size = 1
                      02250 ;;      575
                      02251 ;;      line = 618 result AOP_DIR=_scanCode, size=1, left AOP_DIR=_scanCode, size=1, right AOP_LIT=0x71,
                             size=1
                      02252 ;;; genarith.c:142:genPlusIncr *{*
                      02253 ;; ***  genPlusIncr  144
                      02254 ;;      result AOP_DIR, left AOP_DIR, right AOP_LIT
                      02255 ;;      genPlusIncr  156
                      02256 ;;      adding lit to something. size 1
                      02257 ;;; genarith.c:269:genAddLit *{*
                      02258 ;; ***  genAddLit  270
                      02259 ;;; genarith.c:233:genAddLit2byte *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02260 ;; >>> genarith.c:245:genAddLit2byte
                      02261         .line   386; "main.c"   scanCode += 0x71;
0161   3071           02262         MOVLW   0x71
                      02263 ;; >>> genarith.c:246:genAddLit2byte
                      02264 ;;      1009
                      02265 ;;      1028  _scanCode   offset=0
0162   ???? ????      02266         BANKSEL _scanCode
0164   07??           02267         ADDWF   _scanCode,F
                      02268 ;; ***  addSign  861
                      02269 ;;; genarith.c:862:addSign *{*
                      02270 ;;; gen.c:2316:resultRemat *{*
                      02271 ;;; gen.c:2760:genLabel *{*
                      02272 ;; ***  genLabel  2763
                      02273 ;;; gen.c:2316:resultRemat *{*
                      02274 ;;; gen.c:6742:genIfx *{*
                      02275 ;; ***  genIfx  6743
                      02276 ;; ***  aopForSym 315
                      02277 ;;      327 sym->rname = _ctrl, size = 1
                      02278 ;; ***  pic14_toBoolean  1515
                      02279 ;; >>> gen.c:1522:pic14_toBoolean
0165                  02280 _00249_DS_
                      02281         .line   388; "main.c"   if(ctrl)                                // CTRL + tasto
0165   3000           02282         MOVLW   0x00
                      02283 ;; >>> gen.c:1533:pic14_toBoolean
                      02284 ;;      1009
                      02285 ;;      1028  _ctrl   offset=0
0166   ???? ????      02286         BANKSEL _ctrl
0168   04??           02287         IORWF   _ctrl,W
                      02288 ;; >>> gen.c:6796:genIfx
0169   1903           02289         BTFSC   STATUS,2
                      02290 ;; >>> gen.c:6797:genIfx
                      02291 ;; ***  popGetLabel  key=39, label offset 115
016A   2???           02292         GOTO    _00254_DS_
                      02293 ;;; gen.c:2316:resultRemat *{*
                      02294 ;;; gen.c:2316:resultRemat *{*
                      02295 ;; ***  genPlus  611
                      02296 ;;; genarith.c:612:genPlus *{*
                      02297 ;;      613
                      02298 ;;      aopForRemat 392
                      02299 ;;      418: rname _ctrlAscii, val 0, const = 0
                      02300 ;; ***  aopForSym 315
                      02301 ;;      327 sym->rname = _scanCode, size = 1
                      02302 ;;      694 register type nRegs=2
                      02303 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02304 ;;      _ctrlAscii
                      02305 ;;      line = 618 result AOP_REG=r0x105B, size=2, left AOP_PCODE=_ctrlAscii, size=2, right AOP_DIR=_sca
                            nCode, size=1
                      02306 ;;; genarith.c:142:genPlusIncr *{*
                      02307 ;; ***  genPlusIncr  144
                      02308 ;;      result AOP_REG, left AOP_PCODE, right AOP_DIR
                      02309 ;; ***  genPlus  717
                      02310 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02311 ;;      _ctrlAscii
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02312 ;; >>> genarith.c:726:genPlus
                      02313 ;;      1009
                      02314 ;;      1028  _scanCode   offset=0
                      02315         .line   389; "main.c"   ascii = ctrlAscii[scanCode];
016B   ???? ????      02316         BANKSEL _scanCode
016D   08??           02317         MOVF    _scanCode,W
                      02318 ;; >>> genarith.c:735:genPlus
016E   3E??           02319         ADDLW   (_ctrlAscii + 0)
                      02320 ;; >>> genarith.c:736:genPlus
                      02321 ;;      1109 rIdx = r0x105B 
016F   ???? ????      02322         BANKSEL r0x1010
0171   00??           02323         MOVWF   r0x1010
                      02324 ;; >>> genarith.c:799:genPlus
0172   30??           02325         MOVLW   high (_ctrlAscii + 0)
                      02326 ;; >>> genarith.c:800:genPlus
0173   1803           02327         BTFSC   STATUS,0
                      02328 ;; >>> genarith.c:801:genPlus
0174   3E01           02329         ADDLW   0x01
                      02330 ;; >>> genarith.c:802:genPlus
                      02331 ;;      1109 rIdx = r0x105C 
0175   00??           02332         MOVWF   r0x1011
                      02333 ;;; gen.c:2316:resultRemat *{*
                      02334 ;;; gen.c:6145:genPointerGet *{*
                      02335 ;; ***  genPointerGet  6146
                      02336 ;;; gen.c:6092:genConstPointerGet *{*
                      02337 ;; ***  genConstPointerGet  6093
                      02338 ;;      694 register type nRegs=2
                      02339 ;;      694 register type nRegs=1
                      02340 ;;      line = 6097 result AOP_REG=r0x105A, size=1, left AOP_REG=r0x105B, size=2, right -=-, size=0
                      02341 ;;       6099 getting const pointer
                      02342 ;;; gen.c:1343:mov2w_op *{*
                      02343 ;; ***  mov2w  1381  offset=0
                      02344 ;; >>> gen.c:1386:mov2w
                      02345 ;;      1109 rIdx = r0x105B 
0176   08??           02346         MOVF    r0x1010,W
                      02347 ;; >>> gen.c:6115:genConstPointerGet
                      02348 ;; ***  popRegFromIdx,1042  , rIdx=0x7e
0177   00??           02349         MOVWF   STK01
                      02350 ;;; gen.c:1343:mov2w_op *{*
                      02351 ;; ***  mov2w  1381  offset=1
                      02352 ;; >>> gen.c:1386:mov2w
                      02353 ;;      1109 rIdx = r0x105C 
0178   08??           02354         MOVF    r0x1011,W
                      02355 ;; >>> gen.c:6117:genConstPointerGet
                      02356 ;; ***  popRegFromIdx,1042  , rIdx=0x7f
0179   00??           02357         MOVWF   STK00
                      02358 ;; >>> gen.c:6118:genConstPointerGet
017A   3080           02359         MOVLW   0x80
                      02360 ;; >>> gen.c:1433:call_libraryfunc
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02361         PAGESEL __gptrget1
                      02362 ;; >>> gen.c:1435:call_libraryfunc
017B   2???           02363         CALL    __gptrget1
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02364 ;; >>> gen.c:1437:call_libraryfunc
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02365         PAGESEL $
                      02366 ;; >>> gen.c:1393:movwf
                      02367 ;;      1109 rIdx = r0x105A 
017C   ???? ????      02368         BANKSEL r0x100F
017E   00??           02369         MOVWF   r0x100F
                      02370 ;;; gen.c:2316:resultRemat *{*
                      02371 ;;; gen.c:2778:genGoto *{*
                      02372 ;; >>> gen.c:2780:genGoto
                      02373 ;; ***  popGetLabel  key=48, label offset 115
017F   2???           02374         GOTO    _00263_DS_
                      02375 ;;; gen.c:2316:resultRemat *{*
                      02376 ;;; gen.c:2760:genLabel *{*
                      02377 ;; ***  genLabel  2763
                      02378 ;;; gen.c:2316:resultRemat *{*
                      02379 ;;; gen.c:4220:genOr *{*
                      02380 ;; ***  genOr  4221
                      02381 ;; ***  aopForSym 315
                      02382 ;;      327 sym->rname = _shift, size = 1
                      02383 ;; ***  aopForSym 315
                      02384 ;;      327 sym->rname = _shiftLock, size = 1
                      02385 ;;      694 register type nRegs=1
                      02386 ;;      line = 4227 result AOP_REG=r0x105B, size=1, left AOP_DIR=_shift, size=1, right AOP_DIR=_shiftLoc
                            k, size=1
                      02387 ;;      line = 4253 result AOP_REG=r0x105B, size=1, left AOP_DIR=_shift, size=1, right AOP_DIR=_shiftLoc
                            k, size=1
                      02388 ;; >>> gen.c:4479:genOr
                      02389 ;;      1009
                      02390 ;;      1028  _shiftLock   offset=0
0180                  02391 _00254_DS_
                      02392         .line   391; "main.c"   if(shift | shiftLock)   // SHIFT + tasto
0180   ???? ????      02393         BANKSEL _shiftLock
0182   08??           02394         MOVF    _shiftLock,W
                      02395 ;; >>> gen.c:4480:genOr
                      02396 ;;      1009
                      02397 ;;      1028  _shift   offset=0
0183   ???? ????      02398         BANKSEL _shift
0185   04??           02399         IORWF   _shift,W
                      02400 ;; >>> gen.c:4481:genOr
                      02401 ;;      1109 rIdx = r0x105B 
0186   ???? ????      02402         BANKSEL r0x1010
0188   00??           02403         MOVWF   r0x1010
                      02404 ;;; gen.c:2316:resultRemat *{*
                      02405 ;;; gen.c:6742:genIfx *{*
                      02406 ;; ***  genIfx  6743
                      02407 ;;      694 register type nRegs=1
                      02408 ;; ***  pic14_toBoolean  1515
                      02409 ;; >>> gen.c:1522:pic14_toBoolean
0189   08??           02410         MOVF    r0x1010,W
018A   1903           02411         BTFSC   STATUS,2
                      02412 ;; >>> gen.c:6797:genIfx
                      02413 ;; ***  popGetLabel  key=36, label offset 115
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018B   2???           02414         GOTO    _00251_DS_
                      02415 ;;; gen.c:2316:resultRemat *{*
                      02416 ;;; gen.c:2316:resultRemat *{*
                      02417 ;; ***  genPlus  611
                      02418 ;;; genarith.c:612:genPlus *{*
                      02419 ;;      613
                      02420 ;;      aopForRemat 392
                      02421 ;;      418: rname _shiftAscii, val 0, const = 0
                      02422 ;; ***  aopForSym 315
                      02423 ;;      327 sym->rname = _scanCode, size = 1
                      02424 ;;      694 register type nRegs=2
                      02425 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02426 ;;      _shiftAscii
                      02427 ;;      line = 618 result AOP_REG=r0x105B, size=2, left AOP_PCODE=_shiftAscii, size=2, right AOP_DIR=_sc
                            anCode, size=1
                      02428 ;;; genarith.c:142:genPlusIncr *{*
                      02429 ;; ***  genPlusIncr  144
                      02430 ;;      result AOP_REG, left AOP_PCODE, right AOP_DIR
                      02431 ;; ***  genPlus  717
                      02432 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02433 ;;      _shiftAscii
                      02434 ;; >>> genarith.c:726:genPlus
                      02435 ;;      1009
                      02436 ;;      1028  _scanCode   offset=0
                      02437         .line   392; "main.c"   ascii = shiftAscii[scanCode];
018C   ???? ????      02438         BANKSEL _scanCode
018E   08??           02439         MOVF    _scanCode,W
                      02440 ;; >>> genarith.c:735:genPlus
018F   3E??           02441         ADDLW   (_shiftAscii + 0)
                      02442 ;; >>> genarith.c:736:genPlus
                      02443 ;;      1109 rIdx = r0x105B 
0190   ???? ????      02444         BANKSEL r0x1010
0192   00??           02445         MOVWF   r0x1010
                      02446 ;; >>> genarith.c:799:genPlus
0193   30??           02447         MOVLW   high (_shiftAscii + 0)
                      02448 ;; >>> genarith.c:800:genPlus
0194   1803           02449         BTFSC   STATUS,0
                      02450 ;; >>> genarith.c:801:genPlus
0195   3E01           02451         ADDLW   0x01
                      02452 ;; >>> genarith.c:802:genPlus
                      02453 ;;      1109 rIdx = r0x105C 
0196   00??           02454         MOVWF   r0x1011
                      02455 ;;; gen.c:2316:resultRemat *{*
                      02456 ;;; gen.c:6145:genPointerGet *{*
                      02457 ;; ***  genPointerGet  6146
                      02458 ;;; gen.c:6092:genConstPointerGet *{*
                      02459 ;; ***  genConstPointerGet  6093
                      02460 ;;      694 register type nRegs=2
                      02461 ;;      694 register type nRegs=1
                      02462 ;;      line = 6097 result AOP_REG=r0x105A, size=1, left AOP_REG=r0x105B, size=2, right -=-, size=0
                      02463 ;;       6099 getting const pointer
                      02464 ;;; gen.c:1343:mov2w_op *{*
                      02465 ;; ***  mov2w  1381  offset=0
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02466 ;; >>> gen.c:1386:mov2w
                      02467 ;;      1109 rIdx = r0x105B 
0197   08??           02468         MOVF    r0x1010,W
                      02469 ;; >>> gen.c:6115:genConstPointerGet
                      02470 ;; ***  popRegFromIdx,1042  , rIdx=0x7e
0198   00??           02471         MOVWF   STK01
                      02472 ;;; gen.c:1343:mov2w_op *{*
                      02473 ;; ***  mov2w  1381  offset=1
                      02474 ;; >>> gen.c:1386:mov2w
                      02475 ;;      1109 rIdx = r0x105C 
0199   08??           02476         MOVF    r0x1011,W
                      02477 ;; >>> gen.c:6117:genConstPointerGet
                      02478 ;; ***  popRegFromIdx,1042  , rIdx=0x7f
019A   00??           02479         MOVWF   STK00
                      02480 ;; >>> gen.c:6118:genConstPointerGet
019B   3080           02481         MOVLW   0x80
                      02482 ;; >>> gen.c:1433:call_libraryfunc
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02483         PAGESEL __gptrget1
                      02484 ;; >>> gen.c:1435:call_libraryfunc
019C   2???           02485         CALL    __gptrget1
                      02486 ;; >>> gen.c:1437:call_libraryfunc
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02487         PAGESEL $
                      02488 ;; >>> gen.c:1393:movwf
                      02489 ;;      1109 rIdx = r0x105A 
019D   ???? ????      02490         BANKSEL r0x100F
019F   00??           02491         MOVWF   r0x100F
                      02492 ;;; gen.c:2316:resultRemat *{*
                      02493 ;;; gen.c:2778:genGoto *{*
                      02494 ;; >>> gen.c:2780:genGoto
                      02495 ;; ***  popGetLabel  key=48, label offset 115
01A0   2???           02496         GOTO    _00263_DS_
                      02497 ;;; gen.c:2316:resultRemat *{*
                      02498 ;;; gen.c:2760:genLabel *{*
                      02499 ;; ***  genLabel  2763
                      02500 ;;; gen.c:2316:resultRemat *{*
                      02501 ;;; gen.c:2316:resultRemat *{*
                      02502 ;; ***  genPlus  611
                      02503 ;;; genarith.c:612:genPlus *{*
                      02504 ;;      613
                      02505 ;;      aopForRemat 392
                      02506 ;;      418: rname _normalAscii, val 0, const = 0
                      02507 ;; ***  aopForSym 315
                      02508 ;;      327 sym->rname = _scanCode, size = 1
                      02509 ;;      694 register type nRegs=2
                      02510 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02511 ;;      _normalAscii
                      02512 ;;      line = 618 result AOP_REG=r0x105B, size=2, left AOP_PCODE=_normalAscii, size=2, right AOP_DIR=_s
                            canCode, size=1
                      02513 ;;; genarith.c:142:genPlusIncr *{*
                      02514 ;; ***  genPlusIncr  144
                      02515 ;;      result AOP_REG, left AOP_PCODE, right AOP_DIR
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02516 ;; ***  genPlus  717
                      02517 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02518 ;;      _normalAscii
                      02519 ;; >>> genarith.c:726:genPlus
                      02520 ;;      1009
                      02521 ;;      1028  _scanCode   offset=0
01A1                  02522 _00251_DS_
                      02523         .line   394; "main.c"   ascii = normalAscii[scanCode];
01A1   ???? ????      02524         BANKSEL _scanCode
01A3   08??           02525         MOVF    _scanCode,W
                      02526 ;; >>> genarith.c:735:genPlus
01A4   3E??           02527         ADDLW   (_normalAscii + 0)
                      02528 ;; >>> genarith.c:736:genPlus
                      02529 ;;      1109 rIdx = r0x105B 
01A5   ???? ????      02530         BANKSEL r0x1010
01A7   00??           02531         MOVWF   r0x1010
                      02532 ;; >>> genarith.c:799:genPlus
01A8   30??           02533         MOVLW   high (_normalAscii + 0)
                      02534 ;; >>> genarith.c:800:genPlus
01A9   1803           02535         BTFSC   STATUS,0
                      02536 ;; >>> genarith.c:801:genPlus
01AA   3E01           02537         ADDLW   0x01
                      02538 ;; >>> genarith.c:802:genPlus
                      02539 ;;      1109 rIdx = r0x105C 
01AB   00??           02540         MOVWF   r0x1011
                      02541 ;;; gen.c:2316:resultRemat *{*
                      02542 ;;; gen.c:6145:genPointerGet *{*
                      02543 ;; ***  genPointerGet  6146
                      02544 ;;; gen.c:6092:genConstPointerGet *{*
                      02545 ;; ***  genConstPointerGet  6093
                      02546 ;;      694 register type nRegs=2
                      02547 ;;      694 register type nRegs=1
                      02548 ;;      line = 6097 result AOP_REG=r0x105A, size=1, left AOP_REG=r0x105B, size=2, right -=-, size=0
                      02549 ;;       6099 getting const pointer
                      02550 ;;; gen.c:1343:mov2w_op *{*
                      02551 ;; ***  mov2w  1381  offset=0
                      02552 ;; >>> gen.c:1386:mov2w
                      02553 ;;      1109 rIdx = r0x105B 
01AC   08??           02554         MOVF    r0x1010,W
                      02555 ;; >>> gen.c:6115:genConstPointerGet
                      02556 ;; ***  popRegFromIdx,1042  , rIdx=0x7e
01AD   00??           02557         MOVWF   STK01
                      02558 ;;; gen.c:1343:mov2w_op *{*
                      02559 ;; ***  mov2w  1381  offset=1
                      02560 ;; >>> gen.c:1386:mov2w
                      02561 ;;      1109 rIdx = r0x105C 
01AE   08??           02562         MOVF    r0x1011,W
                      02563 ;; >>> gen.c:6117:genConstPointerGet
                      02564 ;; ***  popRegFromIdx,1042  , rIdx=0x7f
01AF   00??           02565         MOVWF   STK00
                      02566 ;; >>> gen.c:6118:genConstPointerGet
01B0   3080           02567         MOVLW   0x80
                      02568 ;; >>> gen.c:1433:call_libraryfunc
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02569         PAGESEL __gptrget1
                      02570 ;; >>> gen.c:1435:call_libraryfunc
01B1   2???           02571         CALL    __gptrget1
                      02572 ;; >>> gen.c:1437:call_libraryfunc
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02573         PAGESEL $
                      02574 ;; >>> gen.c:1393:movwf
                      02575 ;;      1109 rIdx = r0x105A 
01B2   ???? ????      02576         BANKSEL r0x100F
01B4   00??           02577         MOVWF   r0x100F
                      02578 ;;; gen.c:2316:resultRemat *{*
                      02579 ;;; gen.c:2760:genLabel *{*
                      02580 ;; ***  genLabel  2763
                      02581 ;;; gen.c:2316:resultRemat *{*
                      02582 ;;; gen.c:6742:genIfx *{*
                      02583 ;; ***  genIfx  6743
                      02584 ;;      694 register type nRegs=1
                      02585 ;; ***  pic14_toBoolean  1515
                      02586 ;; >>> gen.c:1522:pic14_toBoolean
01B5                  02587 _00263_DS_
                      02588         .line   400; "main.c"   if(ascii)
01B5   3000           02589         MOVLW   0x00
                      02590 ;; >>> gen.c:1533:pic14_toBoolean
                      02591 ;;      1109 rIdx = r0x105A 
01B6   ???? ????      02592         BANKSEL r0x100F
01B8   04??           02593         IORWF   r0x100F,W
                      02594 ;; >>> gen.c:6796:genIfx
01B9   1903           02595         BTFSC   STATUS,2
                      02596 ;; >>> gen.c:6797:genIfx
                      02597 ;; ***  popGetLabel  key=53, label offset 115
01BA   2???           02598         GOTO    _00268_DS_
                      02599 ;;; gen.c:2316:resultRemat *{*
                      02600 ;;; gen.c:1609:genCpl *{*
                      02601 ;; ***  genCpl  1611
                      02602 ;;      694 register type nRegs=1
                      02603 ;; ***  aopForSym 315
                      02604 ;;      327 sym->rname = _PORTB, size = 1
                      02605 ;; >>> gen.c:1631:genCpl
                      02606 ;;      1109 rIdx = r0x105A 
                      02607         .line   402; "main.c"   lxData = ~ascii;
01BB   09??           02608         COMF    r0x100F,W
                      02609 ;; >>> gen.c:1632:genCpl
                      02610 ;;      1009
                      02611 ;;      1028  _PORTB   offset=0
01BC   ???? ????      02612         BANKSEL _PORTB
01BE   00??           02613         MOVWF   _PORTB
                      02614 ;; ***  addSign  861
                      02615 ;;; genarith.c:862:addSign *{*
                      02616 ;;; gen.c:2316:resultRemat *{*
                      02617 ;;; gen.c:2316:resultRemat *{*
                      02618 ;;; gen.c:2086:genCall *{*
                      02619 ;; ***  genCall  2088
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02620 ;;; gen.c:1801:saveRegisters *{*
                      02621 ;; ***  saveRegisters  1803
                      02622 ;;      2135 left AOP_LIT
                      02623 ;;; gen.c:1343:mov2w_op *{*
                      02624 ;; >>> gen.c:1361:mov2w_op
                      02625         .line   403; "main.c"   delay_us(1500);
01BF   30DC           02626         MOVLW   0xdc
                      02627 ;;      2135 left AOP_LIT
                      02628 ;; >>> gen.c:2143:genCall
                      02629 ;; ***  popRegFromIdx,1042  , rIdx=0x7f
01C0   00??           02630         MOVWF   STK00
                      02631 ;;; gen.c:1343:mov2w_op *{*
                      02632 ;; >>> gen.c:1361:mov2w_op
01C1   3005           02633         MOVLW   0x05
                      02634 ;; >>> gen.c:2173:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02635         PAGESEL _delay_us
                      02636 ;; >>> gen.c:2175:genCall
01C2   2???           02637         CALL    _delay_us
                      02638 ;; >>> gen.c:2181:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02639         PAGESEL $
                      02640 ;;; gen.c:1845:unsaveRegisters *{*
                      02641 ;; ***  unsaveRegisters  1847
                      02642 ;;; gen.c:2316:resultRemat *{*
                      02643 ;;; gen.c:2316:resultRemat *{*
                      02644 ;;; gen.c:6669:genPointerSet *{*
                      02645 ;; ***  genPointerSet  6670
                      02646 ;;; gen.c:6488:genNearPointerSet *{*
                      02647 ;; ***  genNearPointerSet  6489
                      02648 ;;      613
                      02649 ;;      aopForRemat 392
                      02650 ;;      418: rname _PORTBbits, val 0, const = 0
                      02651 ;; ***  genNearPointerSet  6504
                      02652 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02653 ;;      _PORTBbits
                      02654 ;;      line = 6506 result AOP_PCODE=_PORTBbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      02655 ;;; gen.c:6232:genPackBits *{*
                      02656 ;; ***  genPackBits  6233
                      02657 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02658 ;;      _PORTBbits
                      02659 ;; >>> gen.c:6258:genPackBits
                      02660         .line   404; "main.c"   lxStrobe = 0;
01C3   ???? ????      02661         BANKSEL _PORTBbits
01C5   13??           02662         BCF     _PORTBbits,7
                      02663 ;;; gen.c:2316:resultRemat *{*
                      02664 ;;; gen.c:2778:genGoto *{*
                      02665 ;; >>> gen.c:2780:genGoto
                      02666 ;; ***  popGetLabel  key=4, label offset 115
01C6   2???           02667         GOTO    _00219_DS_
                      02668 ;;; gen.c:2316:resultRemat *{*
                      02669 ;;; gen.c:2760:genLabel *{*
                      02670 ;; ***  genLabel  2763
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02671 ;;; gen.c:2316:resultRemat *{*
                      02672 ;;; gen.c:3919:genAnd *{*
                      02673 ;; ***  genAnd  3920
                      02674 ;; ***  aopForSym 315
                      02675 ;;      327 sym->rname = _alt, size = 1
                      02676 ;; ***  aopForSym 315
                      02677 ;;      327 sym->rname = _altGr, size = 1
                      02678 ;;      694 register type nRegs=1
                      02679 ;;      line = 3955 result AOP_REG=r0x105A, size=1, left AOP_DIR=_alt, size=1, right AOP_DIR=_altGr, siz
                            e=1
                      02680 ;; >>> gen.c:4197:genAnd
                      02681 ;;      1009
                      02682 ;;      1028  _altGr   offset=0
01C7                  02683 _00268_DS_
                      02684         .line   407; "main.c"   if(alt & altGr)
01C7   ???? ????      02685         BANKSEL _altGr
01C9   08??           02686         MOVF    _altGr,W
                      02687 ;; >>> gen.c:4198:genAnd
                      02688 ;;      1009
                      02689 ;;      1028  _alt   offset=0
01CA   ???? ????      02690         BANKSEL _alt
01CC   05??           02691         ANDWF   _alt,W
                      02692 ;; >>> gen.c:4199:genAnd
                      02693 ;;      1109 rIdx = r0x105A 
01CD   ???? ????      02694         BANKSEL r0x100F
01CF   00??           02695         MOVWF   r0x100F
                      02696 ;;; gen.c:2316:resultRemat *{*
                      02697 ;;; gen.c:6742:genIfx *{*
                      02698 ;; ***  genIfx  6743
                      02699 ;;      694 register type nRegs=1
                      02700 ;; ***  pic14_toBoolean  1515
                      02701 ;; >>> gen.c:1522:pic14_toBoolean
01D0   08??           02702         MOVF    r0x100F,W
01D1   1903           02703         BTFSC   STATUS,2
                      02704 ;; >>> gen.c:6797:genIfx
                      02705 ;; ***  popGetLabel  key=50, label offset 115
01D2   2???           02706         GOTO    _00265_DS_
                      02707 ;;; gen.c:2316:resultRemat *{*
                      02708 ;;; gen.c:2316:resultRemat *{*
                      02709 ;;; gen.c:6669:genPointerSet *{*
                      02710 ;; ***  genPointerSet  6670
                      02711 ;;; gen.c:6488:genNearPointerSet *{*
                      02712 ;; ***  genNearPointerSet  6489
                      02713 ;;      613
                      02714 ;;      aopForRemat 392
                      02715 ;;      418: rname _PORTAbits, val 0, const = 0
                      02716 ;; ***  genNearPointerSet  6504
                      02717 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02718 ;;      _PORTAbits
                      02719 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      02720 ;;; gen.c:6232:genPackBits *{*
                      02721 ;; ***  genPackBits  6233
                      02722 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02723 ;;      _PORTAbits
                      02724 ;; >>> gen.c:6258:genPackBits
                      02725         .line   408; "main.c"   z80Break = 0;
01D3   ???? ????      02726         BANKSEL _PORTAbits
01D5   11??           02727         BCF     _PORTAbits,2
                      02728 ;;; gen.c:2316:resultRemat *{*
                      02729 ;;; gen.c:2778:genGoto *{*
                      02730 ;; >>> gen.c:2780:genGoto
                      02731 ;; ***  popGetLabel  key=4, label offset 115
01D6   2???           02732         GOTO    _00219_DS_
                      02733 ;;; gen.c:2316:resultRemat *{*
                      02734 ;;; gen.c:2760:genLabel *{*
                      02735 ;; ***  genLabel  2763
                      02736 ;;; gen.c:2316:resultRemat *{*
                      02737 ;;; gen.c:2316:resultRemat *{*
                      02738 ;;; gen.c:6669:genPointerSet *{*
                      02739 ;; ***  genPointerSet  6670
                      02740 ;;; gen.c:6488:genNearPointerSet *{*
                      02741 ;; ***  genNearPointerSet  6489
                      02742 ;;      613
                      02743 ;;      aopForRemat 392
                      02744 ;;      418: rname _PORTAbits, val 0, const = 0
                      02745 ;; ***  genNearPointerSet  6504
                      02746 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02747 ;;      _PORTAbits
                      02748 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x01, size=1
                      02749 ;;; gen.c:6232:genPackBits *{*
                      02750 ;; ***  genPackBits  6233
                      02751 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      02752 ;;      _PORTAbits
                      02753 ;; >>> gen.c:6258:genPackBits
01D7                  02754 _00265_DS_
                      02755         .line   410; "main.c"   z80Break = 1;
01D7   ???? ????      02756         BANKSEL _PORTAbits
01D9   15??           02757         BSF     _PORTAbits,2
                      02758 ;;; gen.c:2316:resultRemat *{*
                      02759 ;;; gen.c:2778:genGoto *{*
                      02760 ;; >>> gen.c:2780:genGoto
                      02761 ;; ***  popGetLabel  key=4, label offset 115
01DA   2???           02762         GOTO    _00219_DS_
                      02763 ;;; gen.c:2316:resultRemat *{*
                      02764 ;;; gen.c:2760:genLabel *{*
                      02765 ;; ***  genLabel  2763
                      02766 ;;; gen.c:2316:resultRemat *{*
                      02767 ;;; gen.c:2528:genEndFunction *{*
                      02768 ;; ***  genEndFunction  2530
01DB   0008           02769         RETURN  
                      02770 ; exit point of _main
                      02771 
                      02772 ;***
                      02773 ;  pBlock Stats: dbName = C
                      02774 ;***
                      02775 ;entry:  _flashPanel    ;Function start
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02776 ; 2 exit points
                      02777 ;has an exit
                      02778 ;functions called:
                      02779 ;   _setPanel
                      02780 ;   _delay_ms
                      02781 ;   _setPanel
                      02782 ;   _delay_ms
                      02783 ;   _setPanel
                      02784 ;   _delay_ms
                      02785 ;   _setPanel
                      02786 ;   _delay_ms
                      02787 ;3 compiler assigned registers:
                      02788 ;   r0x100C
                      02789 ;   STK00
                      02790 ;   r0x100D
                      02791 ;; Starting pCode block
                      02792 ;;; gen.c:2316:resultRemat *{*
                      02793 ;;; gen.c:2760:genLabel *{*
                      02794 ;; ***  genLabel  2763
                      02795 ;;; gen.c:2316:resultRemat *{*
                      02796 ;;; gen.c:2340:genFunction *{*
                      02797 ;; ***  genFunction  2342 curr label offset=102previous max_key=4 
01DC                  02798 _flashPanel     ;Function start
                      02799 ; 2 exit points
                      02800 ;;; gen.c:2316:resultRemat *{*
                      02801 ;;; gen.c:7341:genReceive *{*
                      02802 ;; ***  genReceive  7342
                      02803 ;;      694 register type nRegs=1
                      02804 ;;; gen.c:1907:assignResultValue *{*
                      02805 ;; ***  assignResultValue  1909
                      02806 ;;      line = 1911 result -=-, size=0, left AOP_REG=r0x1052, size=1, right -=-, size=0
                      02807 ;; >>> gen.c:1393:movwf
                      02808 ;;      1109 rIdx = r0x1052 
                      02809         .line   249; "main.c"   void flashPanel(unsigned char count)
01DC   ???? ????      02810         BANKSEL r0x100C
01DE   00??           02811         MOVWF   r0x100C
                      02812 ;;; gen.c:2316:resultRemat *{*
                      02813 ;;; gen.c:2760:genLabel *{*
                      02814 ;; ***  genLabel  2763
                      02815 ;;; gen.c:2316:resultRemat *{*
                      02816 ;;; gen.c:2316:resultRemat *{*
                      02817 ;;; gen.c:2086:genCall *{*
                      02818 ;; ***  genCall  2088
                      02819 ;;; gen.c:1801:saveRegisters *{*
                      02820 ;; ***  saveRegisters  1803
                      02821 ;;      2135 left AOP_LIT
                      02822 ;;; gen.c:1343:mov2w_op *{*
                      02823 ;; >>> gen.c:1361:mov2w_op
01DF                  02824 _00211_DS_
                      02825         .line   253; "main.c"   setPanel(0b00000111);
01DF   3007           02826         MOVLW   0x07
                      02827 ;; >>> gen.c:2175:genCall
01E0   2???           02828         CALL    _setPanel
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02829 ;;; gen.c:1845:unsaveRegisters *{*
                      02830 ;; ***  unsaveRegisters  1847
                      02831 ;;; gen.c:2316:resultRemat *{*
                      02832 ;;; gen.c:2316:resultRemat *{*
                      02833 ;;; gen.c:2086:genCall *{*
                      02834 ;; ***  genCall  2088
                      02835 ;;; gen.c:1801:saveRegisters *{*
                      02836 ;; ***  saveRegisters  1803
                      02837 ;;      2135 left AOP_LIT
                      02838 ;;; gen.c:1343:mov2w_op *{*
                      02839 ;; >>> gen.c:1361:mov2w_op
                      02840         .line   254; "main.c"   delay_ms(100);
01E1   3064           02841         MOVLW   0x64
                      02842 ;;      2135 left AOP_LIT
                      02843 ;; >>> gen.c:2143:genCall
                      02844 ;; ***  popRegFromIdx,1042  , rIdx=0x7f
01E2   00??           02845         MOVWF   STK00
                      02846 ;;; gen.c:1343:mov2w_op *{*
                      02847 ;; >>> gen.c:1361:mov2w_op
01E3   3000           02848         MOVLW   0x00
                      02849 ;; >>> gen.c:2173:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02850         PAGESEL _delay_ms
                      02851 ;; >>> gen.c:2175:genCall
01E4   2???           02852         CALL    _delay_ms
                      02853 ;; >>> gen.c:2181:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02854         PAGESEL $
                      02855 ;;; gen.c:1845:unsaveRegisters *{*
                      02856 ;; ***  unsaveRegisters  1847
                      02857 ;;; gen.c:2316:resultRemat *{*
                      02858 ;;; gen.c:2316:resultRemat *{*
                      02859 ;;; gen.c:2086:genCall *{*
                      02860 ;; ***  genCall  2088
                      02861 ;;; gen.c:1801:saveRegisters *{*
                      02862 ;; ***  saveRegisters  1803
                      02863 ;;      2135 left AOP_LIT
                      02864 ;;; gen.c:1343:mov2w_op *{*
                      02865 ;; >>> gen.c:1361:mov2w_op
                      02866         .line   255; "main.c"   setPanel(0x00000000);
01E5   3000           02867         MOVLW   0x00
                      02868 ;; >>> gen.c:2175:genCall
01E6   2???           02869         CALL    _setPanel
                      02870 ;;; gen.c:1845:unsaveRegisters *{*
                      02871 ;; ***  unsaveRegisters  1847
                      02872 ;;; gen.c:2316:resultRemat *{*
                      02873 ;;; gen.c:2316:resultRemat *{*
                      02874 ;;; gen.c:2086:genCall *{*
                      02875 ;; ***  genCall  2088
                      02876 ;;; gen.c:1801:saveRegisters *{*
                      02877 ;; ***  saveRegisters  1803
                      02878 ;;      2135 left AOP_LIT
                      02879 ;;; gen.c:1343:mov2w_op *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02880 ;; >>> gen.c:1361:mov2w_op
                      02881         .line   256; "main.c"   delay_ms(100);
01E7   3064           02882         MOVLW   0x64
                      02883 ;;      2135 left AOP_LIT
                      02884 ;; >>> gen.c:2143:genCall
                      02885 ;; ***  popRegFromIdx,1042  , rIdx=0x7f
01E8   00??           02886         MOVWF   STK00
                      02887 ;;; gen.c:1343:mov2w_op *{*
                      02888 ;; >>> gen.c:1361:mov2w_op
01E9   3000           02889         MOVLW   0x00
                      02890 ;; >>> gen.c:2173:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02891         PAGESEL _delay_ms
                      02892 ;; >>> gen.c:2175:genCall
01EA   2???           02893         CALL    _delay_ms
                      02894 ;; >>> gen.c:2181:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      02895         PAGESEL $
                      02896 ;;; gen.c:1845:unsaveRegisters *{*
                      02897 ;; ***  unsaveRegisters  1847
                      02898 ;;; gen.c:2316:resultRemat *{*
                      02899 ;;; gen.c:6910:genAssign *{*
                      02900 ;; ***  genAssign  6911
                      02901 ;;      694 register type nRegs=1
                      02902 ;;      694 register type nRegs=1
                      02903 ;;      line = 6920 result AOP_REG=r0x1053, size=1, left -=-, size=0, right AOP_REG=r0x1052, size=1
                      02904 ;; ***  genAssign  7006
                      02905 ;;; gen.c:1343:mov2w_op *{*
                      02906 ;; ***  mov2w  1381  offset=0
                      02907 ;; >>> gen.c:1386:mov2w
                      02908 ;;      1109 rIdx = r0x1052 
                      02909         .line   257; "main.c"   } while(count--);
01EB   ???? ????      02910         BANKSEL r0x100C
01ED   08??           02911         MOVF    r0x100C,W
                      02912 ;; >>> gen.c:7033:genAssign
                      02913 ;;      1109 rIdx = r0x1053 
01EE   00??           02914         MOVWF   r0x100D
                      02915 ;;; gen.c:2316:resultRemat *{*
                      02916 ;;; gen.c:7300:genDjnz *{*
                      02917 ;; ***  genDjnz  7301
                      02918 ;;; genarith.c:896:genMinus *{*
                      02919 ;; ***  genMinus  897
                      02920 ;;      694 register type nRegs=1
                      02921 ;;      575
                      02922 ;;      result AOP_REG, left AOP_REG, right AOP_LIT
                      02923 ;;; genarith.c:269:genAddLit *{*
                      02924 ;; ***  genAddLit  270
                      02925 ;;; genarith.c:233:genAddLit2byte *{*
                      02926 ;; >>> genarith.c:242:genAddLit2byte
                      02927 ;;      1109 rIdx = r0x1052 
01EF   03??           02928         DECF    r0x100C,F
                      02929 ;; ***  addSign  861
                      02930 ;;; genarith.c:862:addSign *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02931 ;;; gen.c:2316:resultRemat *{*
                      02932 ;;; gen.c:6742:genIfx *{*
                      02933 ;; ***  genIfx  6743
                      02934 ;;      694 register type nRegs=1
                      02935 ;; ***  pic14_toBoolean  1515
                      02936 ;; >>> gen.c:1522:pic14_toBoolean
01F0   08??           02937         MOVF    r0x100D,W
01F1   1D03           02938         BTFSS   STATUS,2
                      02939 ;; >>> gen.c:6792:genIfx
                      02940 ;; ***  popGetLabel  key=1, label offset 110
01F2   2???           02941         GOTO    _00211_DS_
                      02942 ;;; gen.c:2316:resultRemat *{*
                      02943 ;;; gen.c:2683:genRet *{*
                      02944 ;; ***  genRet  2685
                      02945 ;;; gen.c:2316:resultRemat *{*
                      02946 ;;; gen.c:2760:genLabel *{*
                      02947 ;; ***  genLabel  2763
                      02948 ;;; gen.c:2316:resultRemat *{*
                      02949 ;;; gen.c:2528:genEndFunction *{*
                      02950 ;; ***  genEndFunction  2530
                      02951         .line   259; "main.c"   return;
01F3   0008           02952         RETURN  
                      02953 ; exit point of _flashPanel
                      02954 ;;; gen.c:7409:genpic14Code *{*
                      02955 
                      02956 ;***
                      02957 ;  pBlock Stats: dbName = C
                      02958 ;***
                      02959 ;entry:  _setPanel      ;Function start
                      02960 ; 2 exit points
                      02961 ;has an exit
                      02962 ;functions called:
                      02963 ;   _sendCommandCode
                      02964 ;   _readScanCode
                      02965 ;   _sendCommandCode
                      02966 ;   _readScanCode
                      02967 ;   _sendCommandCode
                      02968 ;   _readScanCode
                      02969 ;   _sendCommandCode
                      02970 ;   _readScanCode
                      02971 ;1 compiler assigned register :
                      02972 ;   r0x100B
                      02973 ;; Starting pCode block
                      02974 ;;; gen.c:2316:resultRemat *{*
                      02975 ;;; gen.c:2760:genLabel *{*
                      02976 ;; ***  genLabel  2763
                      02977 ;;; gen.c:2316:resultRemat *{*
                      02978 ;;; gen.c:2340:genFunction *{*
                      02979 ;; ***  genFunction  2342 curr label offset=38previous max_key=60 
01F4                  02980 _setPanel       ;Function start
                      02981 ; 2 exit points
                      02982 ;;; gen.c:2316:resultRemat *{*
                      02983 ;;; gen.c:7341:genReceive *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02984 ;; ***  genReceive  7342
                      02985 ;;      694 register type nRegs=1
                      02986 ;;; gen.c:1907:assignResultValue *{*
                      02987 ;; ***  assignResultValue  1909
                      02988 ;;      line = 1911 result -=-, size=0, left AOP_REG=r0x1051, size=1, right -=-, size=0
                      02989 ;; >>> gen.c:1393:movwf
                      02990 ;;      1109 rIdx = r0x1051 
                      02991         .line   228; "main.c"   void setPanel(unsigned char leds)
01F4   ???? ????      02992         BANKSEL r0x100B
01F6   00??           02993         MOVWF   r0x100B
                      02994 ;;; gen.c:2316:resultRemat *{*
                      02995 ;;; gen.c:6910:genAssign *{*
                      02996 ;; ***  genAssign  6911
                      02997 ;;      575
                      02998 ;;      line = 6920 result AOP_DIR=_commandCode, size=1, left -=-, size=0, right AOP_LIT=0xed, size=1
                      02999 ;; ***  genAssign  7006
                      03000 ;; >>> gen.c:7013:genAssign
                      03001         .line   230; "main.c"   commandCode = 0xED;
01F7   30ED           03002         MOVLW   0xed
                      03003 ;; >>> gen.c:7015:genAssign
                      03004 ;;      1009
                      03005 ;;      1028  _commandCode   offset=0
01F8   ???? ????      03006         BANKSEL _commandCode
01FA   00??           03007         MOVWF   _commandCode
                      03008 ;;; gen.c:2316:resultRemat *{*
                      03009 ;;; gen.c:2760:genLabel *{*
                      03010 ;; ***  genLabel  2763
                      03011 ;;; gen.c:2316:resultRemat *{*
                      03012 ;;; gen.c:2086:genCall *{*
                      03013 ;; ***  genCall  2088
                      03014 ;;; gen.c:1801:saveRegisters *{*
                      03015 ;; ***  saveRegisters  1803
                      03016 ;; >>> gen.c:2175:genCall
01FB                  03017 _00203_DS_
                      03018         .line   233; "main.c"   sendCommandCode();
01FB   2???           03019         CALL    _sendCommandCode
                      03020 ;;; gen.c:1845:unsaveRegisters *{*
                      03021 ;; ***  unsaveRegisters  1847
                      03022 ;;; gen.c:2316:resultRemat *{*
                      03023 ;;; gen.c:2086:genCall *{*
                      03024 ;; ***  genCall  2088
                      03025 ;;; gen.c:1801:saveRegisters *{*
                      03026 ;; ***  saveRegisters  1803
                      03027 ;; >>> gen.c:2175:genCall
                      03028         .line   234; "main.c"   readScanCode();
01FC   2???           03029         CALL    _readScanCode
                      03030 ;;; gen.c:1845:unsaveRegisters *{*
                      03031 ;; ***  unsaveRegisters  1847
                      03032 ;;; gen.c:2316:resultRemat *{*
                      03033 ;;; gen.c:3619:genCmpEq *{*
                      03034 ;; ***  genCmpEq  3620
                      03035 ;; ifx is non-null
                      03036 ;; ***  aopForSym 315
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03037 ;;      327 sym->rname = _scanCode, size = 1
                      03038 ;;      line = 3631 result AOP_CRY=0x00, size=0, left AOP_DIR=_scanCode, size=1, right AOP_LIT=0xfa, siz
                            e=1
                      03039 ;; ***  mov2w  1381  offset=0
                      03040 ;; >>> gen.c:1386:mov2w
                      03041 ;;      1009
                      03042 ;;      1028  _scanCode   offset=0
                      03043         .line   235; "main.c"   } while(scanCode != 0xFA);
01FD   ???? ????      03044         BANKSEL _scanCode
01FF   08??           03045         MOVF    _scanCode,W
                      03046 ;; >>> gen.c:3685:genCmpEq
0200   3AFA           03047         XORLW   0xfa
                      03048 ;; >>> gen.c:3687:genCmpEq
0201   1D03           03049         BTFSS   STATUS,2
                      03050 ;; >>> gen.c:3690:genCmpEq
                      03051 ;; ***  popGetLabel  key=1, label offset 102
0202   2???           03052         GOTO    _00203_DS_
                      03053 ;;; gen.c:2316:resultRemat *{*
                      03054 ;;; gen.c:2316:resultRemat *{*
                      03055 ;;; gen.c:6910:genAssign *{*
                      03056 ;; ***  genAssign  6911
                      03057 ;;      694 register type nRegs=1
                      03058 ;; ***  aopForSym 315
                      03059 ;;      327 sym->rname = _commandCode, size = 1
                      03060 ;;      line = 6920 result AOP_DIR=_commandCode, size=1, left -=-, size=0, right AOP_REG=r0x1051, size=1
                      03061 ;; ***  genAssign  7006
                      03062 ;;; gen.c:1343:mov2w_op *{*
                      03063 ;; ***  mov2w  1381  offset=0
                      03064 ;; >>> gen.c:1386:mov2w
                      03065 ;;      1109 rIdx = r0x1051 
                      03066         .line   237; "main.c"   commandCode = leds;
0203   ???? ????      03067         BANKSEL r0x100B
0205   08??           03068         MOVF    r0x100B,W
                      03069 ;; >>> gen.c:7033:genAssign
                      03070 ;;      1009
                      03071 ;;      1028  _commandCode   offset=0
0206   ???? ????      03072         BANKSEL _commandCode
0208   00??           03073         MOVWF   _commandCode
                      03074 ;;; gen.c:2316:resultRemat *{*
                      03075 ;;; gen.c:2760:genLabel *{*
                      03076 ;; ***  genLabel  2763
                      03077 ;;; gen.c:2316:resultRemat *{*
                      03078 ;;; gen.c:2086:genCall *{*
                      03079 ;; ***  genCall  2088
                      03080 ;;; gen.c:1801:saveRegisters *{*
                      03081 ;; ***  saveRegisters  1803
                      03082 ;; >>> gen.c:2175:genCall
0209                  03083 _00206_DS_
                      03084         .line   240; "main.c"   sendCommandCode();
0209   2???           03085         CALL    _sendCommandCode
                      03086 ;;; gen.c:1845:unsaveRegisters *{*
                      03087 ;; ***  unsaveRegisters  1847
                      03088 ;;; gen.c:2316:resultRemat *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03089 ;;; gen.c:2086:genCall *{*
                      03090 ;; ***  genCall  2088
                      03091 ;;; gen.c:1801:saveRegisters *{*
                      03092 ;; ***  saveRegisters  1803
                      03093 ;; >>> gen.c:2175:genCall
                      03094         .line   241; "main.c"   readScanCode();
020A   2???           03095         CALL    _readScanCode
                      03096 ;;; gen.c:1845:unsaveRegisters *{*
                      03097 ;; ***  unsaveRegisters  1847
                      03098 ;;; gen.c:2316:resultRemat *{*
                      03099 ;;; gen.c:3619:genCmpEq *{*
                      03100 ;; ***  genCmpEq  3620
                      03101 ;; ifx is non-null
                      03102 ;; ***  aopForSym 315
                      03103 ;;      327 sym->rname = _scanCode, size = 1
                      03104 ;;      line = 3631 result AOP_CRY=0x00, size=0, left AOP_DIR=_scanCode, size=1, right AOP_LIT=0xfa, siz
                            e=1
                      03105 ;; ***  mov2w  1381  offset=0
                      03106 ;; >>> gen.c:1386:mov2w
                      03107 ;;      1009
                      03108 ;;      1028  _scanCode   offset=0
                      03109         .line   242; "main.c"   } while(scanCode != 0xFA);
020B   ???? ????      03110         BANKSEL _scanCode
020D   08??           03111         MOVF    _scanCode,W
                      03112 ;; >>> gen.c:3685:genCmpEq
020E   3AFA           03113         XORLW   0xfa
                      03114 ;; >>> gen.c:3687:genCmpEq
020F   1D03           03115         BTFSS   STATUS,2
                      03116 ;; >>> gen.c:3690:genCmpEq
                      03117 ;; ***  popGetLabel  key=4, label offset 102
0210   2???           03118         GOTO    _00206_DS_
                      03119 ;;; gen.c:2316:resultRemat *{*
                      03120 ;;; gen.c:2316:resultRemat *{*
                      03121 ;;; gen.c:2683:genRet *{*
                      03122 ;; ***  genRet  2685
                      03123 ;;; gen.c:2316:resultRemat *{*
                      03124 ;;; gen.c:2760:genLabel *{*
                      03125 ;; ***  genLabel  2763
                      03126 ;;; gen.c:2316:resultRemat *{*
                      03127 ;;; gen.c:2528:genEndFunction *{*
                      03128 ;; ***  genEndFunction  2530
                      03129         .line   244; "main.c"   return;
0211   0008           03130         RETURN  
                      03131 ; exit point of _setPanel
                      03132 ;;; gen.c:7409:genpic14Code *{*
                      03133 
                      03134 ;***
                      03135 ;  pBlock Stats: dbName = C
                      03136 ;***
                      03137 ;entry:  _readScanCode  ;Function start
                      03138 ; 2 exit points
                      03139 ;has an exit
                      03140 ;functions called:
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03141 ;   _clockCycle
                      03142 ;   _clockCycle
                      03143 ;   _clockCycle
                      03144 ;   _clockCycle
                      03145 ;   _clockCycle
                      03146 ;   _clockCycle
                      03147 ;1 compiler assigned register :
                      03148 ;   r0x1009
                      03149 ;; Starting pCode block
                      03150 ;;; gen.c:2316:resultRemat *{*
                      03151 ;;; gen.c:2760:genLabel *{*
                      03152 ;; ***  genLabel  2763
                      03153 ;;; gen.c:2316:resultRemat *{*
                      03154 ;;; gen.c:2340:genFunction *{*
                      03155 ;; ***  genFunction  2342 curr label offset=12previous max_key=22 
0212                  03156 _readScanCode   ;Function start
                      03157 ; 2 exit points
                      03158 ;;; gen.c:2316:resultRemat *{*
                      03159 ;;; gen.c:6910:genAssign *{*
                      03160 ;; ***  genAssign  6911
                      03161 ;; ***  aopForSym 315
                      03162 ;;      327 sym->rname = _extendedKey, size = 1
                      03163 ;;      line = 6920 result AOP_DIR=_extendedKey, size=1, left -=-, size=0, right AOP_LIT=0x00, size=1
                      03164 ;; ***  genAssign  7006
                      03165 ;; >>> gen.c:7018:genAssign
                      03166 ;;      1009
                      03167 ;;      1028  _extendedKey   offset=0
                      03168         .line   194; "main.c"   keyUp = extendedKey = 0;
0212   ???? ????      03169         BANKSEL _extendedKey
0214   01??           03170         CLRF    _extendedKey
                      03171 ;;; gen.c:2316:resultRemat *{*
                      03172 ;;; gen.c:6910:genAssign *{*
                      03173 ;; ***  genAssign  6911
                      03174 ;; ***  aopForSym 315
                      03175 ;;      327 sym->rname = _keyUp, size = 1
                      03176 ;;      line = 6920 result AOP_DIR=_keyUp, size=1, left -=-, size=0, right AOP_LIT=0x00, size=1
                      03177 ;; ***  genAssign  7006
                      03178 ;; >>> gen.c:7018:genAssign
                      03179 ;;      1009
                      03180 ;;      1028  _keyUp   offset=0
0215   ???? ????      03181         BANKSEL _keyUp
0217   01??           03182         CLRF    _keyUp
                      03183 ;;; gen.c:2316:resultRemat *{*
                      03184 ;;; gen.c:2760:genLabel *{*
                      03185 ;; ***  genLabel  2763
                      03186 ;;; gen.c:2316:resultRemat *{*
                      03187 ;;; gen.c:6910:genAssign *{*
                      03188 ;; ***  genAssign  6911
                      03189 ;; ***  aopForSym 315
                      03190 ;;      327 sym->rname = _scanCode, size = 1
                      03191 ;;      line = 6920 result AOP_DIR=_scanCode, size=1, left -=-, size=0, right AOP_LIT=0x00, size=1
                      03192 ;; ***  genAssign  7006
                      03193 ;; >>> gen.c:7018:genAssign
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03194 ;;      1009
                      03195 ;;      1028  _scanCode   offset=0
0218                  03196 _00156_DS_
                      03197         .line   198; "main.c"   n = 9; scanCode = 0;
0218   ???? ????      03198         BANKSEL _scanCode
021A   01??           03199         CLRF    _scanCode
                      03200 ;;; gen.c:2316:resultRemat *{*
                      03201 ;;; gen.c:2316:resultRemat *{*
                      03202 ;;; gen.c:6669:genPointerSet *{*
                      03203 ;; ***  genPointerSet  6670
                      03204 ;;; gen.c:6488:genNearPointerSet *{*
                      03205 ;; ***  genNearPointerSet  6489
                      03206 ;;      613
                      03207 ;;      aopForRemat 392
                      03208 ;;      418: rname _TRISAbits, val 0, const = 0
                      03209 ;; ***  genNearPointerSet  6504
                      03210 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03211 ;;      _TRISAbits
                      03212 ;;      line = 6506 result AOP_PCODE=_TRISAbits, size=2, left -=-, size=0, right AOP_LIT=0x01, size=1
                      03213 ;;; gen.c:6232:genPackBits *{*
                      03214 ;; ***  genPackBits  6233
                      03215 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03216 ;;      _TRISAbits
                      03217 ;; >>> gen.c:6258:genPackBits
                      03218         .line   200; "main.c"   INPUT_ps2Clock();
021B   ???? ????      03219         BANKSEL _TRISAbits
021D   14??           03220         BSF     _TRISAbits,0
                      03221 ;;; gen.c:2316:resultRemat *{*
                      03222 ;;; gen.c:2760:genLabel *{*
                      03223 ;; ***  genLabel  2763
                      03224 ;;; gen.c:2316:resultRemat *{*
                      03225 ;;; gen.c:2316:resultRemat *{*
                      03226 ;;; gen.c:6145:genPointerGet *{*
                      03227 ;; ***  genPointerGet  6146
                      03228 ;;; gen.c:5927:genNearPointerGet *{*
                      03229 ;; ***  genNearPointerGet  5928
                      03230 ;;      613
                      03231 ;;      aopForRemat 392
                      03232 ;;      418: rname _PORTAbits, val 0, const = 0
                      03233 ;; ***  genNearPointerGet  5944
                      03234 ;;      694 register type nRegs=1
                      03235 ;;; gen.c:5743:genUnpackBits *{*
                      03236 ;; ***  genUnpackBits  5744
                      03237 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03238 ;;      _PORTAbits
                      03239 ;; >>> gen.c:5766:genUnpackBits
021E                  03240 _00139_DS_
                      03241         .line   201; "main.c"   while(ps2Clock);
021E   ???? ????      03242         BANKSEL _PORTAbits
0220   18??           03243         BTFSC   _PORTAbits,0
                      03244 ;; >>> gen.c:5767:genUnpackBits
                      03245 ;; ***  popGetLabel  key=1, label offset 38
0221   2???           03246         GOTO    _00139_DS_
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03247 ;;; gen.c:2316:resultRemat *{*
                      03248 ;;; gen.c:2316:resultRemat *{*
                      03249 ;;; gen.c:6910:genAssign *{*
                      03250 ;; ***  genAssign  6911
                      03251 ;;      694 register type nRegs=1
                      03252 ;;      line = 6920 result AOP_REG=r0x104F, size=1, left -=-, size=0, right AOP_LIT=0x09, size=1
                      03253 ;; ***  genAssign  7006
                      03254 ;; >>> gen.c:7013:genAssign
                      03255         .line   203; "main.c"   while(--n)
0222   3009           03256         MOVLW   0x09
                      03257 ;; >>> gen.c:7015:genAssign
                      03258 ;;      1109 rIdx = r0x104F 
0223   ???? ????      03259         BANKSEL r0x1009
0225   00??           03260         MOVWF   r0x1009
                      03261 ;;; gen.c:2316:resultRemat *{*
                      03262 ;;; gen.c:2760:genLabel *{*
                      03263 ;; ***  genLabel  2763
                      03264 ;;; gen.c:2316:resultRemat *{*
                      03265 ;;; gen.c:7300:genDjnz *{*
                      03266 ;; ***  genDjnz  7301
                      03267 ;;; genarith.c:896:genMinus *{*
                      03268 ;; ***  genMinus  897
                      03269 ;;      694 register type nRegs=1
                      03270 ;;      575
                      03271 ;;      result AOP_REG, left AOP_REG, right AOP_LIT
                      03272 ;;; genarith.c:269:genAddLit *{*
                      03273 ;; ***  genAddLit  270
                      03274 ;;; genarith.c:233:genAddLit2byte *{*
                      03275 ;; >>> genarith.c:242:genAddLit2byte
                      03276 ;;      1109 rIdx = r0x104F 
0226                  03277 _00144_DS_
0226   ???? ????      03278         BANKSEL r0x1009
0228   03??           03279         DECF    r0x1009,F
                      03280 ;; ***  addSign  861
                      03281 ;;; genarith.c:862:addSign *{*
                      03282 ;;; gen.c:2316:resultRemat *{*
                      03283 ;;; gen.c:6742:genIfx *{*
                      03284 ;; ***  genIfx  6743
                      03285 ;;      694 register type nRegs=1
                      03286 ;; ***  pic14_toBoolean  1515
                      03287 ;; >>> gen.c:1522:pic14_toBoolean
0229   08??           03288         MOVF    r0x1009,W
022A   1903           03289         BTFSC   STATUS,2
                      03290 ;; >>> gen.c:6797:genIfx
                      03291 ;; ***  popGetLabel  key=8, label offset 38
022B   2???           03292         GOTO    _00146_DS_
                      03293 ;;; gen.c:2316:resultRemat *{*
                      03294 ;;; gen.c:5418:genGenericShift *{*
                      03295 ;; ***  genGenericShift  5421
                      03296 ;; ***  aopForSym 315
                      03297 ;;      327 sym->rname = _scanCode, size = 1
                      03298 ;;      575
                      03299 ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03300 ;; >>> gen.c:5283:shiftRight_Left2ResultLit
                      03301         .line   205; "main.c"   scanCode >>= 1;
022C   1003           03302         BCF     STATUS,0
                      03303 ;; >>> gen.c:5293:shiftRight_Left2ResultLit
                      03304 ;;      1009
                      03305 ;;      1028  _scanCode   offset=0
022D   ???? ????      03306         BANKSEL _scanCode
022F   0C??           03307         RRF     _scanCode,F
                      03308 ;; ***  addSign  861
                      03309 ;;; genarith.c:862:addSign *{*
                      03310 ;;; gen.c:2316:resultRemat *{*
                      03311 ;;; gen.c:2086:genCall *{*
                      03312 ;; ***  genCall  2088
                      03313 ;;; gen.c:1801:saveRegisters *{*
                      03314 ;; ***  saveRegisters  1803
                      03315 ;; >>> gen.c:2175:genCall
                      03316         .line   206; "main.c"   clockCycle();
0230   2???           03317         CALL    _clockCycle
                      03318 ;;; gen.c:1845:unsaveRegisters *{*
                      03319 ;; ***  unsaveRegisters  1847
                      03320 ;;; gen.c:2316:resultRemat *{*
                      03321 ;;; gen.c:2316:resultRemat *{*
                      03322 ;;; gen.c:6145:genPointerGet *{*
                      03323 ;; ***  genPointerGet  6146
                      03324 ;;; gen.c:5927:genNearPointerGet *{*
                      03325 ;; ***  genNearPointerGet  5928
                      03326 ;;      613
                      03327 ;;      aopForRemat 392
                      03328 ;;      418: rname _PORTAbits, val 0, const = 0
                      03329 ;; ***  genNearPointerGet  5944
                      03330 ;;      694 register type nRegs=1
                      03331 ;;; gen.c:5743:genUnpackBits *{*
                      03332 ;; ***  genUnpackBits  5744
                      03333 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03334 ;;      _PORTAbits
                      03335 ;; >>> gen.c:5766:genUnpackBits
                      03336         .line   207; "main.c"   if(ps2Data) scanCode |= 0b10000000;
0231   ???? ????      03337         BANKSEL _PORTAbits
0233   1C??           03338         BTFSS   _PORTAbits,1
                      03339 ;; >>> gen.c:5767:genUnpackBits
                      03340 ;; ***  popGetLabel  key=6, label offset 38
0234   2???           03341         GOTO    _00144_DS_
                      03342 ;;; gen.c:2316:resultRemat *{*
                      03343 ;;; gen.c:2316:resultRemat *{*
                      03344 ;;; gen.c:4220:genOr *{*
                      03345 ;; ***  genOr  4221
                      03346 ;;      575
                      03347 ;;      575
                      03348 ;;      line = 4227 result AOP_DIR=_scanCode, size=1, left AOP_DIR=_scanCode, size=1, right AOP_LIT=0x80
                            , size=1
                      03349 ;;      line = 4253 result AOP_DIR=_scanCode, size=1, left AOP_DIR=_scanCode, size=1, right AOP_LIT=0x80
                            , size=1
                      03350 ;; >>> gen.c:4404:genOr
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0235   ???? ????      03351         BANKSEL _scanCode
0237   17??           03352         BSF     _scanCode,7
                      03353 ;;; gen.c:2316:resultRemat *{*
                      03354 ;;; gen.c:2778:genGoto *{*
                      03355 ;; >>> gen.c:2780:genGoto
                      03356 ;; ***  popGetLabel  key=6, label offset 38
0238   2???           03357         GOTO    _00144_DS_
                      03358 ;;; gen.c:2316:resultRemat *{*
                      03359 ;;; gen.c:2760:genLabel *{*
                      03360 ;; ***  genLabel  2763
                      03361 ;;; gen.c:2316:resultRemat *{*
                      03362 ;;; gen.c:2086:genCall *{*
                      03363 ;; ***  genCall  2088
                      03364 ;;; gen.c:1801:saveRegisters *{*
                      03365 ;; ***  saveRegisters  1803
                      03366 ;; >>> gen.c:2175:genCall
0239                  03367 _00146_DS_
                      03368         .line   209; "main.c"   clockCycle();           // Scarta il bit di parita'
0239   2???           03369         CALL    _clockCycle
                      03370 ;;; gen.c:1845:unsaveRegisters *{*
                      03371 ;; ***  unsaveRegisters  1847
                      03372 ;;; gen.c:2316:resultRemat *{*
                      03373 ;;; gen.c:2086:genCall *{*
                      03374 ;; ***  genCall  2088
                      03375 ;;; gen.c:1801:saveRegisters *{*
                      03376 ;; ***  saveRegisters  1803
                      03377 ;; >>> gen.c:2175:genCall
                      03378         .line   210; "main.c"   clockCycle();           // Scarta il bit di stop
023A   2???           03379         CALL    _clockCycle
                      03380 ;;; gen.c:1845:unsaveRegisters *{*
                      03381 ;; ***  unsaveRegisters  1847
                      03382 ;;; gen.c:2316:resultRemat *{*
                      03383 ;;; gen.c:2760:genLabel *{*
                      03384 ;; ***  genLabel  2763
                      03385 ;;; gen.c:2316:resultRemat *{*
                      03386 ;;; gen.c:2316:resultRemat *{*
                      03387 ;;; gen.c:6145:genPointerGet *{*
                      03388 ;; ***  genPointerGet  6146
                      03389 ;;; gen.c:5927:genNearPointerGet *{*
                      03390 ;; ***  genNearPointerGet  5928
                      03391 ;;      613
                      03392 ;;      aopForRemat 392
                      03393 ;;      418: rname _PORTAbits, val 0, const = 0
                      03394 ;; ***  genNearPointerGet  5944
                      03395 ;;      694 register type nRegs=1
                      03396 ;;; gen.c:5743:genUnpackBits *{*
                      03397 ;; ***  genUnpackBits  5744
                      03398 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03399 ;;      _PORTAbits
                      03400 ;; >>> gen.c:5766:genUnpackBits
023B                  03401 _00147_DS_
                      03402         .line   212; "main.c"   while(!ps2Clock);
023B   ???? ????      03403         BANKSEL _PORTAbits
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

023D   1C??           03404         BTFSS   _PORTAbits,0
                      03405 ;; >>> gen.c:5767:genUnpackBits
                      03406 ;; ***  popGetLabel  key=9, label offset 38
023E   2???           03407         GOTO    _00147_DS_
                      03408 ;;; gen.c:2316:resultRemat *{*
                      03409 ;;; gen.c:2316:resultRemat *{*
                      03410 ;;; gen.c:2316:resultRemat *{*
                      03411 ;;; gen.c:6669:genPointerSet *{*
                      03412 ;; ***  genPointerSet  6670
                      03413 ;;; gen.c:6488:genNearPointerSet *{*
                      03414 ;; ***  genNearPointerSet  6489
                      03415 ;;      613
                      03416 ;;      aopForRemat 392
                      03417 ;;      418: rname _PORTAbits, val 0, const = 0
                      03418 ;; ***  genNearPointerSet  6504
                      03419 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03420 ;;      _PORTAbits
                      03421 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      03422 ;;; gen.c:6232:genPackBits *{*
                      03423 ;; ***  genPackBits  6233
                      03424 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03425 ;;      _PORTAbits
                      03426 ;; >>> gen.c:6258:genPackBits
                      03427         .line   213; "main.c"   LOW_ps2Clock();
023F   10??           03428         BCF     _PORTAbits,0
                      03429 ;;; gen.c:2316:resultRemat *{*
                      03430 ;;; gen.c:2316:resultRemat *{*
                      03431 ;;; gen.c:6669:genPointerSet *{*
                      03432 ;; ***  genPointerSet  6670
                      03433 ;;; gen.c:6488:genNearPointerSet *{*
                      03434 ;; ***  genNearPointerSet  6489
                      03435 ;;      613
                      03436 ;;      aopForRemat 392
                      03437 ;;      418: rname _TRISAbits, val 0, const = 0
                      03438 ;; ***  genNearPointerSet  6504
                      03439 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03440 ;;      _TRISAbits
                      03441 ;;      line = 6506 result AOP_PCODE=_TRISAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      03442 ;;; gen.c:6232:genPackBits *{*
                      03443 ;; ***  genPackBits  6233
                      03444 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03445 ;;      _TRISAbits
                      03446 ;; >>> gen.c:6258:genPackBits
0240   ???? ????      03447         BANKSEL _TRISAbits
0242   10??           03448         BCF     _TRISAbits,0
                      03449 ;;; gen.c:2316:resultRemat *{*
                      03450 ;;; gen.c:3619:genCmpEq *{*
                      03451 ;; ***  genCmpEq  3620
                      03452 ;; ifx is null
                      03453 ;; ***  aopForSym 315
                      03454 ;;      327 sym->rname = _scanCode, size = 1
                      03455 ;;      694 register type nRegs=1
                      03456 ;;      line = 3631 result AOP_REG=r0x104F, size=1, left AOP_DIR=_scanCode, size=1, right AOP_LIT=0xf0, 
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            size=1
                      03457 ;; >>> gen.c:3657:genCmpEq
                      03458 ;;      1109 rIdx = r0x104F 
                      03459         .line   215; "main.c"   if(scanCode == 0xF0)
0243   ???? ????      03460         BANKSEL r0x1009
0245   01??           03461         CLRF    r0x1009
                      03462 ;; ***  mov2w  1381  offset=0
                      03463 ;; >>> gen.c:1386:mov2w
                      03464 ;;      1009
                      03465 ;;      1028  _scanCode   offset=0
0246   ???? ????      03466         BANKSEL _scanCode
0248   08??           03467         MOVF    _scanCode,W
                      03468 ;; >>> gen.c:3685:genCmpEq
0249   3AF0           03469         XORLW   0xf0
024A   1D03           03470         BTFSS   STATUS,2
024B   2???           03471         GOTO    _00001_DS_
024C   ???? ????      03472         BANKSEL r0x1009
024E   0A??           03473         INCF    r0x1009,F
024F                  03474 _00001_DS_
024F   ???? ????      03475         BANKSEL r0x1009
0251   08??           03476         MOVF    r0x1009,W
0252   1903           03477         BTFSC   STATUS,2
                      03478 ;; >>> gen.c:6797:genIfx
                      03479 ;; ***  popGetLabel  key=15, label offset 38
0253   2???           03480         GOTO    _00153_DS_
                      03481 ;;; gen.c:2316:resultRemat *{*
                      03482 ;;; gen.c:6910:genAssign *{*
                      03483 ;; ***  genAssign  6911
                      03484 ;; ***  aopForSym 315
                      03485 ;;      327 sym->rname = _keyUp, size = 1
                      03486 ;;      line = 6920 result AOP_DIR=_keyUp, size=1, left -=-, size=0, right AOP_LIT=0x01, size=1
                      03487 ;; ***  genAssign  7006
                      03488 ;; >>> gen.c:7013:genAssign
                      03489         .line   216; "main.c"   keyUp = 1;
0254   3001           03490         MOVLW   0x01
                      03491 ;; >>> gen.c:7015:genAssign
                      03492 ;;      1009
                      03493 ;;      1028  _keyUp   offset=0
0255   ???? ????      03494         BANKSEL _keyUp
0257   00??           03495         MOVWF   _keyUp
                      03496 ;;; gen.c:2316:resultRemat *{*
                      03497 ;;; gen.c:2778:genGoto *{*
                      03498 ;; >>> gen.c:2780:genGoto
                      03499 ;; ***  popGetLabel  key=19, label offset 38
0258   2???           03500         GOTO    _00157_DS_
                      03501 ;;; gen.c:2316:resultRemat *{*
                      03502 ;;; gen.c:2760:genLabel *{*
                      03503 ;; ***  genLabel  2763
                      03504 ;;; gen.c:2316:resultRemat *{*
                      03505 ;;; gen.c:3619:genCmpEq *{*
                      03506 ;; ***  genCmpEq  3620
                      03507 ;; ifx is non-null
                      03508 ;; ***  aopForSym 315
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03509 ;;      327 sym->rname = _scanCode, size = 1
                      03510 ;;      line = 3631 result AOP_CRY=0x00, size=0, left AOP_DIR=_scanCode, size=1, right AOP_LIT=0xe0, siz
                            e=1
                      03511 ;; ***  mov2w  1381  offset=0
                      03512 ;; >>> gen.c:1386:mov2w
                      03513 ;;      1009
                      03514 ;;      1028  _scanCode   offset=0
0259                  03515 _00153_DS_
                      03516         .line   218; "main.c"   if(scanCode == 0xE0)
0259   ???? ????      03517         BANKSEL _scanCode
025B   08??           03518         MOVF    _scanCode,W
                      03519 ;; >>> gen.c:3685:genCmpEq
025C   3AE0           03520         XORLW   0xe0
                      03521 ;; >>> gen.c:3687:genCmpEq
025D   1D03           03522         BTFSS   STATUS,2
                      03523 ;; >>> gen.c:3690:genCmpEq
                      03524 ;; ***  popGetLabel  key=19, label offset 38
025E   2???           03525         GOTO    _00157_DS_
                      03526 ;;; gen.c:2316:resultRemat *{*
                      03527 ;;; gen.c:2316:resultRemat *{*
                      03528 ;;; gen.c:6910:genAssign *{*
                      03529 ;; ***  genAssign  6911
                      03530 ;; ***  aopForSym 315
                      03531 ;;      327 sym->rname = _extendedKey, size = 1
                      03532 ;;      line = 6920 result AOP_DIR=_extendedKey, size=1, left -=-, size=0, right AOP_LIT=0x01, size=1
                      03533 ;; ***  genAssign  7006
                      03534 ;; >>> gen.c:7013:genAssign
                      03535         .line   219; "main.c"   extendedKey = 1;
025F   3001           03536         MOVLW   0x01
                      03537 ;; >>> gen.c:7015:genAssign
                      03538 ;;      1009
                      03539 ;;      1028  _extendedKey   offset=0
0260   ???? ????      03540         BANKSEL _extendedKey
0262   00??           03541         MOVWF   _extendedKey
                      03542 ;;; gen.c:2316:resultRemat *{*
                      03543 ;;; gen.c:2760:genLabel *{*
                      03544 ;; ***  genLabel  2763
                      03545 ;;; gen.c:2316:resultRemat *{*
                      03546 ;;; gen.c:3619:genCmpEq *{*
                      03547 ;; ***  genCmpEq  3620
                      03548 ;; ifx is non-null
                      03549 ;; ***  aopForSym 315
                      03550 ;;      327 sym->rname = _scanCode, size = 1
                      03551 ;;      line = 3631 result AOP_CRY=0x00, size=0, left AOP_DIR=_scanCode, size=1, right AOP_LIT=0xe0, siz
                            e=1
                      03552 ;; ***  mov2w  1381  offset=0
                      03553 ;; >>> gen.c:1386:mov2w
                      03554 ;;      1009
                      03555 ;;      1028  _scanCode   offset=0
0263                  03556 _00157_DS_
                      03557         .line   220; "main.c"   } while(scanCode == 0xE0 || scanCode == 0xF0);
0263   ???? ????      03558         BANKSEL _scanCode
0265   08??           03559         MOVF    _scanCode,W
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03560 ;; >>> gen.c:3685:genCmpEq
0266   3AE0           03561         XORLW   0xe0
0267   1903           03562         BTFSC   STATUS,2
0268   2???           03563         GOTO    _00156_DS_
0269   ???? ????      03564         BANKSEL r0x1009
026B   08??           03565         MOVF    r0x1009,W
026C   1D03           03566         BTFSS   STATUS,2
                      03567 ;; >>> gen.c:6792:genIfx
                      03568 ;; ***  popGetLabel  key=18, label offset 38
026D   2???           03569         GOTO    _00156_DS_
                      03570 ;;; gen.c:2316:resultRemat *{*
                      03571 ;;; gen.c:2683:genRet *{*
                      03572 ;; ***  genRet  2685
                      03573 ;;; gen.c:2316:resultRemat *{*
                      03574 ;;; gen.c:2760:genLabel *{*
                      03575 ;; ***  genLabel  2763
                      03576 ;;; gen.c:2316:resultRemat *{*
                      03577 ;;; gen.c:2528:genEndFunction *{*
                      03578 ;; ***  genEndFunction  2530
                      03579         .line   222; "main.c"   return;
026E   0008           03580         RETURN  
                      03581 ; exit point of _readScanCode
                      03582 ;;; gen.c:7409:genpic14Code *{*
                      03583 
                      03584 ;***
                      03585 ;  pBlock Stats: dbName = C
                      03586 ;***
                      03587 ;entry:  _sendCommandCode       ;Function start
                      03588 ; 2 exit points
                      03589 ;has an exit
                      03590 ;functions called:
                      03591 ;   _delay_us
                      03592 ;   _clockCycle
                      03593 ;   _clockCycle
                      03594 ;   _delay_us
                      03595 ;   _clockCycle
                      03596 ;   _clockCycle
                      03597 ;3 compiler assigned registers:
                      03598 ;   STK00
                      03599 ;   r0x1009
                      03600 ;   r0x100A
                      03601 ;; Starting pCode block
                      03602 ;;; gen.c:2316:resultRemat *{*
                      03603 ;;; gen.c:2760:genLabel *{*
                      03604 ;; ***  genLabel  2763
                      03605 ;;; gen.c:2316:resultRemat *{*
                      03606 ;;; gen.c:2340:genFunction *{*
                      03607 ;; ***  genFunction  2342 curr label offset=4previous max_key=4 
026F                  03608 _sendCommandCode        ;Function start
                      03609 ; 2 exit points
                      03610 ;;; gen.c:2316:resultRemat *{*
                      03611 ;;; gen.c:2316:resultRemat *{*
                      03612 ;;; gen.c:6669:genPointerSet *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03613 ;; ***  genPointerSet  6670
                      03614 ;;; gen.c:6488:genNearPointerSet *{*
                      03615 ;; ***  genNearPointerSet  6489
                      03616 ;;      613
                      03617 ;;      aopForRemat 392
                      03618 ;;      418: rname _PORTAbits, val 0, const = 0
                      03619 ;; ***  genNearPointerSet  6504
                      03620 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03621 ;;      _PORTAbits
                      03622 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      03623 ;;; gen.c:6232:genPackBits *{*
                      03624 ;; ***  genPackBits  6233
                      03625 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03626 ;;      _PORTAbits
                      03627 ;; >>> gen.c:6258:genPackBits
                      03628         .line   154; "main.c"   LOW_ps2Data();
026F   ???? ????      03629         BANKSEL _PORTAbits
0271   10??           03630         BCF     _PORTAbits,1
                      03631 ;;; gen.c:2316:resultRemat *{*
                      03632 ;;; gen.c:2316:resultRemat *{*
                      03633 ;;; gen.c:6669:genPointerSet *{*
                      03634 ;; ***  genPointerSet  6670
                      03635 ;;; gen.c:6488:genNearPointerSet *{*
                      03636 ;; ***  genNearPointerSet  6489
                      03637 ;;      613
                      03638 ;;      aopForRemat 392
                      03639 ;;      418: rname _TRISAbits, val 0, const = 0
                      03640 ;; ***  genNearPointerSet  6504
                      03641 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03642 ;;      _TRISAbits
                      03643 ;;      line = 6506 result AOP_PCODE=_TRISAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      03644 ;;; gen.c:6232:genPackBits *{*
                      03645 ;; ***  genPackBits  6233
                      03646 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03647 ;;      _TRISAbits
                      03648 ;; >>> gen.c:6258:genPackBits
0272   ???? ????      03649         BANKSEL _TRISAbits
0274   10??           03650         BCF     _TRISAbits,1
                      03651 ;;; gen.c:2316:resultRemat *{*
                      03652 ;;; gen.c:2316:resultRemat *{*
                      03653 ;;; gen.c:6669:genPointerSet *{*
                      03654 ;; ***  genPointerSet  6670
                      03655 ;;; gen.c:6488:genNearPointerSet *{*
                      03656 ;; ***  genNearPointerSet  6489
                      03657 ;;      613
                      03658 ;;      aopForRemat 392
                      03659 ;;      418: rname _PORTAbits, val 0, const = 0
                      03660 ;; ***  genNearPointerSet  6504
                      03661 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03662 ;;      _PORTAbits
                      03663 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      03664 ;;; gen.c:6232:genPackBits *{*
                      03665 ;; ***  genPackBits  6233
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03666 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03667 ;;      _PORTAbits
                      03668 ;; >>> gen.c:6258:genPackBits
                      03669         .line   155; "main.c"   LOW_ps2Clock();
0275   ???? ????      03670         BANKSEL _PORTAbits
0277   10??           03671         BCF     _PORTAbits,0
                      03672 ;;; gen.c:2316:resultRemat *{*
                      03673 ;;; gen.c:2316:resultRemat *{*
                      03674 ;;; gen.c:6669:genPointerSet *{*
                      03675 ;; ***  genPointerSet  6670
                      03676 ;;; gen.c:6488:genNearPointerSet *{*
                      03677 ;; ***  genNearPointerSet  6489
                      03678 ;;      613
                      03679 ;;      aopForRemat 392
                      03680 ;;      418: rname _TRISAbits, val 0, const = 0
                      03681 ;; ***  genNearPointerSet  6504
                      03682 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03683 ;;      _TRISAbits
                      03684 ;;      line = 6506 result AOP_PCODE=_TRISAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      03685 ;;; gen.c:6232:genPackBits *{*
                      03686 ;; ***  genPackBits  6233
                      03687 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03688 ;;      _TRISAbits
                      03689 ;; >>> gen.c:6258:genPackBits
0278   ???? ????      03690         BANKSEL _TRISAbits
027A   10??           03691         BCF     _TRISAbits,0
                      03692 ;;; gen.c:2316:resultRemat *{*
                      03693 ;;; gen.c:2316:resultRemat *{*
                      03694 ;;; gen.c:2086:genCall *{*
                      03695 ;; ***  genCall  2088
                      03696 ;;; gen.c:1801:saveRegisters *{*
                      03697 ;; ***  saveRegisters  1803
                      03698 ;;      2135 left AOP_LIT
                      03699 ;;; gen.c:1343:mov2w_op *{*
                      03700 ;; >>> gen.c:1361:mov2w_op
                      03701         .line   156; "main.c"   delay_us(100);
027B   3064           03702         MOVLW   0x64
                      03703 ;;      2135 left AOP_LIT
                      03704 ;; >>> gen.c:2143:genCall
                      03705 ;; ***  popRegFromIdx,1042  , rIdx=0x7f
027C   00??           03706         MOVWF   STK00
                      03707 ;;; gen.c:1343:mov2w_op *{*
                      03708 ;; >>> gen.c:1361:mov2w_op
027D   3000           03709         MOVLW   0x00
                      03710 ;; >>> gen.c:2173:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      03711         PAGESEL _delay_us
                      03712 ;; >>> gen.c:2175:genCall
027E   2???           03713         CALL    _delay_us
                      03714 ;; >>> gen.c:2181:genCall
Message[312]: Page or Bank selection not needed for this device.  No code generated.
                      03715         PAGESEL $
                      03716 ;;; gen.c:1845:unsaveRegisters *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03717 ;; ***  unsaveRegisters  1847
                      03718 ;;; gen.c:2316:resultRemat *{*
                      03719 ;;; gen.c:2316:resultRemat *{*
                      03720 ;;; gen.c:6669:genPointerSet *{*
                      03721 ;; ***  genPointerSet  6670
                      03722 ;;; gen.c:6488:genNearPointerSet *{*
                      03723 ;; ***  genNearPointerSet  6489
                      03724 ;;      613
                      03725 ;;      aopForRemat 392
                      03726 ;;      418: rname _TRISAbits, val 0, const = 0
                      03727 ;; ***  genNearPointerSet  6504
                      03728 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03729 ;;      _TRISAbits
                      03730 ;;      line = 6506 result AOP_PCODE=_TRISAbits, size=2, left -=-, size=0, right AOP_LIT=0x01, size=1
                      03731 ;;; gen.c:6232:genPackBits *{*
                      03732 ;; ***  genPackBits  6233
                      03733 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03734 ;;      _TRISAbits
                      03735 ;; >>> gen.c:6258:genPackBits
                      03736         .line   157; "main.c"   INPUT_ps2Clock();
027F   ???? ????      03737         BANKSEL _TRISAbits
0281   14??           03738         BSF     _TRISAbits,0
                      03739 ;;; gen.c:2316:resultRemat *{*
                      03740 ;;; gen.c:2760:genLabel *{*
                      03741 ;; ***  genLabel  2763
                      03742 ;;; gen.c:2316:resultRemat *{*
                      03743 ;;; gen.c:2316:resultRemat *{*
                      03744 ;;; gen.c:6145:genPointerGet *{*
                      03745 ;; ***  genPointerGet  6146
                      03746 ;;; gen.c:5927:genNearPointerGet *{*
                      03747 ;; ***  genNearPointerGet  5928
                      03748 ;;      613
                      03749 ;;      aopForRemat 392
                      03750 ;;      418: rname _PORTAbits, val 0, const = 0
                      03751 ;; ***  genNearPointerGet  5944
                      03752 ;;      694 register type nRegs=1
                      03753 ;;; gen.c:5743:genUnpackBits *{*
                      03754 ;; ***  genUnpackBits  5744
                      03755 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03756 ;;      _PORTAbits
                      03757 ;; >>> gen.c:5766:genUnpackBits
0282                  03758 _00113_DS_
                      03759         .line   158; "main.c"   while(ps2Clock);
0282   ???? ????      03760         BANKSEL _PORTAbits
0284   18??           03761         BTFSC   _PORTAbits,0
                      03762 ;; >>> gen.c:5767:genUnpackBits
                      03763 ;; ***  popGetLabel  key=1, label offset 12
0285   2???           03764         GOTO    _00113_DS_
                      03765 ;;; gen.c:2316:resultRemat *{*
                      03766 ;;; gen.c:2316:resultRemat *{*
                      03767 ;;; gen.c:6910:genAssign *{*
                      03768 ;; ***  genAssign  6911
                      03769 ;;      694 register type nRegs=1
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03770 ;;      line = 6920 result AOP_REG=r0x104A, size=1, left -=-, size=0, right AOP_LIT=0x01, size=1
                      03771 ;; ***  genAssign  7006
                      03772 ;; >>> gen.c:7013:genAssign
                      03773         .line   160; "main.c"   while(--n)
0286   3001           03774         MOVLW   0x01
                      03775 ;; >>> gen.c:7015:genAssign
                      03776 ;;      1109 rIdx = r0x104A 
0287   ???? ????      03777         BANKSEL r0x1009
0289   00??           03778         MOVWF   r0x1009
                      03779 ;;; gen.c:2316:resultRemat *{*
                      03780 ;;; gen.c:6910:genAssign *{*
                      03781 ;; ***  genAssign  6911
                      03782 ;;      694 register type nRegs=1
                      03783 ;;      line = 6920 result AOP_REG=r0x104B, size=1, left -=-, size=0, right AOP_LIT=0x09, size=1
                      03784 ;; ***  genAssign  7006
                      03785 ;; >>> gen.c:7013:genAssign
028A   3009           03786         MOVLW   0x09
                      03787 ;; >>> gen.c:7015:genAssign
                      03788 ;;      1109 rIdx = r0x104B 
028B   00??           03789         MOVWF   r0x100A
                      03790 ;;; gen.c:2316:resultRemat *{*
                      03791 ;;; gen.c:2760:genLabel *{*
                      03792 ;; ***  genLabel  2763
                      03793 ;;; gen.c:2316:resultRemat *{*
                      03794 ;;; gen.c:7300:genDjnz *{*
                      03795 ;; ***  genDjnz  7301
                      03796 ;;; genarith.c:896:genMinus *{*
                      03797 ;; ***  genMinus  897
                      03798 ;;      694 register type nRegs=1
                      03799 ;;      575
                      03800 ;;      result AOP_REG, left AOP_REG, right AOP_LIT
                      03801 ;;; genarith.c:269:genAddLit *{*
                      03802 ;; ***  genAddLit  270
                      03803 ;;; genarith.c:233:genAddLit2byte *{*
                      03804 ;; >>> genarith.c:242:genAddLit2byte
                      03805 ;;      1109 rIdx = r0x104B 
028C                  03806 _00121_DS_
028C   ???? ????      03807         BANKSEL r0x100A
028E   03??           03808         DECF    r0x100A,F
                      03809 ;; ***  addSign  861
                      03810 ;;; genarith.c:862:addSign *{*
                      03811 ;;; gen.c:2316:resultRemat *{*
                      03812 ;;; gen.c:6742:genIfx *{*
                      03813 ;; ***  genIfx  6743
                      03814 ;;      694 register type nRegs=1
                      03815 ;; ***  pic14_toBoolean  1515
                      03816 ;; >>> gen.c:1522:pic14_toBoolean
028F   08??           03817         MOVF    r0x100A,W
0290   1903           03818         BTFSC   STATUS,2
                      03819 ;; >>> gen.c:6797:genIfx
                      03820 ;; ***  popGetLabel  key=11, label offset 12
0291   2???           03821         GOTO    _00123_DS_
                      03822 ;;; gen.c:2316:resultRemat *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03823 ;;; gen.c:3919:genAnd *{*
                      03824 ;; ***  genAnd  3920
                      03825 ;; ***  aopForSym 315
                      03826 ;;      327 sym->rname = _commandCode, size = 1
                      03827 ;;      line = 3955 result AOP_CRY=0x00, size=0, left AOP_DIR=_commandCode, size=1, right AOP_LIT=0x01, 
                            size=1
                      03828 ;;; gen.c:3842:isLiteralBit *{*
                      03829 ;; ***  isLiteralBit  3843
                      03830 ;; >>> gen.c:4039:genAnd
                      03831         .line   162; "main.c"   if(commandCode & 0b00000001)
0292   ???? ????      03832         BANKSEL _commandCode
0294   1C??           03833         BTFSS   _commandCode,0
                      03834 ;; >>> gen.c:4040:genAnd
                      03835 ;; ***  popGetLabel  key=5, label offset 12
0295   2???           03836         GOTO    _00117_DS_
                      03837 ;;; gen.c:2316:resultRemat *{*
                      03838 ;;; gen.c:2316:resultRemat *{*
                      03839 ;;; gen.c:2316:resultRemat *{*
                      03840 ;;; gen.c:6669:genPointerSet *{*
                      03841 ;; ***  genPointerSet  6670
                      03842 ;;; gen.c:6488:genNearPointerSet *{*
                      03843 ;; ***  genNearPointerSet  6489
                      03844 ;;      613
                      03845 ;;      aopForRemat 392
                      03846 ;;      418: rname _PORTAbits, val 0, const = 0
                      03847 ;; ***  genNearPointerSet  6504
                      03848 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03849 ;;      _PORTAbits
                      03850 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x01, size=1
                      03851 ;;; gen.c:6232:genPackBits *{*
                      03852 ;; ***  genPackBits  6233
                      03853 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03854 ;;      _PORTAbits
                      03855 ;; >>> gen.c:6258:genPackBits
                      03856         .line   163; "main.c"   ps2Data = 1;
0296   ???? ????      03857         BANKSEL _PORTAbits
0298   14??           03858         BSF     _PORTAbits,1
                      03859 ;;; gen.c:2316:resultRemat *{*
                      03860 ;;; gen.c:2778:genGoto *{*
                      03861 ;; >>> gen.c:2780:genGoto
                      03862 ;; ***  popGetLabel  key=6, label offset 12
0299   2???           03863         GOTO    _00118_DS_
                      03864 ;;; gen.c:2316:resultRemat *{*
                      03865 ;;; gen.c:2760:genLabel *{*
                      03866 ;; ***  genLabel  2763
                      03867 ;;; gen.c:2316:resultRemat *{*
                      03868 ;;; gen.c:2316:resultRemat *{*
                      03869 ;;; gen.c:6669:genPointerSet *{*
                      03870 ;; ***  genPointerSet  6670
                      03871 ;;; gen.c:6488:genNearPointerSet *{*
                      03872 ;; ***  genNearPointerSet  6489
                      03873 ;;      613
                      03874 ;;      aopForRemat 392
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03875 ;;      418: rname _PORTAbits, val 0, const = 0
                      03876 ;; ***  genNearPointerSet  6504
                      03877 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03878 ;;      _PORTAbits
                      03879 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      03880 ;;; gen.c:6232:genPackBits *{*
                      03881 ;; ***  genPackBits  6233
                      03882 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03883 ;;      _PORTAbits
                      03884 ;; >>> gen.c:6258:genPackBits
029A                  03885 _00117_DS_
                      03886         .line   165; "main.c"   ps2Data = 0;
029A   ???? ????      03887         BANKSEL _PORTAbits
029C   10??           03888         BCF     _PORTAbits,1
                      03889 ;;; gen.c:2316:resultRemat *{*
                      03890 ;;; gen.c:2760:genLabel *{*
                      03891 ;; ***  genLabel  2763
                      03892 ;;; gen.c:2316:resultRemat *{*
                      03893 ;;; gen.c:2086:genCall *{*
                      03894 ;; ***  genCall  2088
                      03895 ;;; gen.c:1801:saveRegisters *{*
                      03896 ;; ***  saveRegisters  1803
                      03897 ;; >>> gen.c:2175:genCall
029D                  03898 _00118_DS_
                      03899         .line   166; "main.c"   clockCycle();
029D   2???           03900         CALL    _clockCycle
                      03901 ;;; gen.c:1845:unsaveRegisters *{*
                      03902 ;; ***  unsaveRegisters  1847
                      03903 ;;; gen.c:2316:resultRemat *{*
                      03904 ;;; gen.c:3919:genAnd *{*
                      03905 ;; ***  genAnd  3920
                      03906 ;; ***  aopForSym 315
                      03907 ;;      327 sym->rname = _commandCode, size = 1
                      03908 ;;      line = 3955 result AOP_CRY=0x00, size=0, left AOP_DIR=_commandCode, size=1, right AOP_LIT=0x01, 
                            size=1
                      03909 ;;; gen.c:3842:isLiteralBit *{*
                      03910 ;; ***  isLiteralBit  3843
                      03911 ;; >>> gen.c:4039:genAnd
                      03912         .line   167; "main.c"   if(commandCode & 0b00000001)
029E   ???? ????      03913         BANKSEL _commandCode
02A0   1C??           03914         BTFSS   _commandCode,0
                      03915 ;; >>> gen.c:4040:genAnd
                      03916 ;; ***  popGetLabel  key=8, label offset 12
02A1   2???           03917         GOTO    _00120_DS_
                      03918 ;;; gen.c:2316:resultRemat *{*
                      03919 ;;; gen.c:2316:resultRemat *{*
                      03920 ;; ***  genPlus  611
                      03921 ;;; genarith.c:612:genPlus *{*
                      03922 ;;      694 register type nRegs=1
                      03923 ;;      575
                      03924 ;;      line = 618 result AOP_REG=r0x104A, size=1, left AOP_REG=r0x104A, size=1, right AOP_LIT=0x01, siz
                            e=1
                      03925 ;;; genarith.c:142:genPlusIncr *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03926 ;; ***  genPlusIncr  144
                      03927 ;;      result AOP_REG, left AOP_REG, right AOP_LIT
                      03928 ;;      genPlusIncr  156
                      03929 ;; >>> genarith.c:168:genPlusIncr
                      03930 ;;      1109 rIdx = r0x104A 
                      03931         .line   168; "main.c"   ++parity;
02A2   ???? ????      03932         BANKSEL r0x1009
02A4   0A??           03933         INCF    r0x1009,F
                      03934 ;;; gen.c:2316:resultRemat *{*
                      03935 ;;; gen.c:2760:genLabel *{*
                      03936 ;; ***  genLabel  2763
                      03937 ;;; gen.c:2316:resultRemat *{*
                      03938 ;;; gen.c:5418:genGenericShift *{*
                      03939 ;; ***  genGenericShift  5421
                      03940 ;; ***  aopForSym 315
                      03941 ;;      327 sym->rname = _commandCode, size = 1
                      03942 ;;      575
                      03943 ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
                      03944 ;; >>> gen.c:5283:shiftRight_Left2ResultLit
02A5                  03945 _00120_DS_
                      03946         .line   169; "main.c"   commandCode >>= 1;
02A5   1003           03947         BCF     STATUS,0
                      03948 ;; >>> gen.c:5293:shiftRight_Left2ResultLit
                      03949 ;;      1009
                      03950 ;;      1028  _commandCode   offset=0
02A6   ???? ????      03951         BANKSEL _commandCode
02A8   0C??           03952         RRF     _commandCode,F
                      03953 ;; ***  addSign  861
                      03954 ;;; genarith.c:862:addSign *{*
                      03955 ;;; gen.c:2316:resultRemat *{*
                      03956 ;;; gen.c:2778:genGoto *{*
                      03957 ;; >>> gen.c:2780:genGoto
                      03958 ;; ***  popGetLabel  key=9, label offset 12
02A9   2???           03959         GOTO    _00121_DS_
                      03960 ;;; gen.c:2316:resultRemat *{*
                      03961 ;;; gen.c:2760:genLabel *{*
                      03962 ;; ***  genLabel  2763
                      03963 ;;; gen.c:2316:resultRemat *{*
                      03964 ;;; gen.c:3919:genAnd *{*
                      03965 ;; ***  genAnd  3920
                      03966 ;;      694 register type nRegs=1
                      03967 ;;      line = 3955 result AOP_CRY=0x00, size=0, left AOP_REG=r0x104A, size=1, right AOP_LIT=0x01, size=
                            1
                      03968 ;;; gen.c:3842:isLiteralBit *{*
                      03969 ;; ***  isLiteralBit  3843
                      03970 ;; >>> gen.c:4039:genAnd
02AA                  03971 _00123_DS_
                      03972         .line   172; "main.c"   if(parity & 0b00000001)
02AA   ???? ????      03973         BANKSEL r0x1009
02AC   1C??           03974         BTFSS   r0x1009,0
                      03975 ;; >>> gen.c:4040:genAnd
                      03976 ;; ***  popGetLabel  key=13, label offset 12
02AD   2???           03977         GOTO    _00125_DS_
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03978 ;;; gen.c:2316:resultRemat *{*
                      03979 ;;; gen.c:2316:resultRemat *{*
                      03980 ;;; gen.c:2316:resultRemat *{*
                      03981 ;;; gen.c:6669:genPointerSet *{*
                      03982 ;; ***  genPointerSet  6670
                      03983 ;;; gen.c:6488:genNearPointerSet *{*
                      03984 ;; ***  genNearPointerSet  6489
                      03985 ;;      613
                      03986 ;;      aopForRemat 392
                      03987 ;;      418: rname _PORTAbits, val 0, const = 0
                      03988 ;; ***  genNearPointerSet  6504
                      03989 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03990 ;;      _PORTAbits
                      03991 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x01, size=1
                      03992 ;;; gen.c:6232:genPackBits *{*
                      03993 ;; ***  genPackBits  6233
                      03994 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      03995 ;;      _PORTAbits
                      03996 ;; >>> gen.c:6258:genPackBits
                      03997         .line   173; "main.c"   ps2Data = 1;
02AE   ???? ????      03998         BANKSEL _PORTAbits
02B0   14??           03999         BSF     _PORTAbits,1
                      04000 ;;; gen.c:2316:resultRemat *{*
                      04001 ;;; gen.c:2778:genGoto *{*
                      04002 ;; >>> gen.c:2780:genGoto
                      04003 ;; ***  popGetLabel  key=14, label offset 12
02B1   2???           04004         GOTO    _00126_DS_
                      04005 ;;; gen.c:2316:resultRemat *{*
                      04006 ;;; gen.c:2760:genLabel *{*
                      04007 ;; ***  genLabel  2763
                      04008 ;;; gen.c:2316:resultRemat *{*
                      04009 ;;; gen.c:2316:resultRemat *{*
                      04010 ;;; gen.c:6669:genPointerSet *{*
                      04011 ;; ***  genPointerSet  6670
                      04012 ;;; gen.c:6488:genNearPointerSet *{*
                      04013 ;; ***  genNearPointerSet  6489
                      04014 ;;      613
                      04015 ;;      aopForRemat 392
                      04016 ;;      418: rname _PORTAbits, val 0, const = 0
                      04017 ;; ***  genNearPointerSet  6504
                      04018 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04019 ;;      _PORTAbits
                      04020 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      04021 ;;; gen.c:6232:genPackBits *{*
                      04022 ;; ***  genPackBits  6233
                      04023 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04024 ;;      _PORTAbits
                      04025 ;; >>> gen.c:6258:genPackBits
02B2                  04026 _00125_DS_
                      04027         .line   175; "main.c"   ps2Data = 0;
02B2   ???? ????      04028         BANKSEL _PORTAbits
02B4   10??           04029         BCF     _PORTAbits,1
                      04030 ;;; gen.c:2316:resultRemat *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04031 ;;; gen.c:2760:genLabel *{*
                      04032 ;; ***  genLabel  2763
                      04033 ;;; gen.c:2316:resultRemat *{*
                      04034 ;;; gen.c:2086:genCall *{*
                      04035 ;; ***  genCall  2088
                      04036 ;;; gen.c:1801:saveRegisters *{*
                      04037 ;; ***  saveRegisters  1803
                      04038 ;; >>> gen.c:2175:genCall
02B5                  04039 _00126_DS_
                      04040         .line   176; "main.c"   clockCycle();
02B5   2???           04041         CALL    _clockCycle
                      04042 ;;; gen.c:1845:unsaveRegisters *{*
                      04043 ;; ***  unsaveRegisters  1847
                      04044 ;;; gen.c:2316:resultRemat *{*
                      04045 ;;; gen.c:2316:resultRemat *{*
                      04046 ;;; gen.c:6669:genPointerSet *{*
                      04047 ;; ***  genPointerSet  6670
                      04048 ;;; gen.c:6488:genNearPointerSet *{*
                      04049 ;; ***  genNearPointerSet  6489
                      04050 ;;      613
                      04051 ;;      aopForRemat 392
                      04052 ;;      418: rname _TRISAbits, val 0, const = 0
                      04053 ;; ***  genNearPointerSet  6504
                      04054 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04055 ;;      _TRISAbits
                      04056 ;;      line = 6506 result AOP_PCODE=_TRISAbits, size=2, left -=-, size=0, right AOP_LIT=0x01, size=1
                      04057 ;;; gen.c:6232:genPackBits *{*
                      04058 ;; ***  genPackBits  6233
                      04059 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04060 ;;      _TRISAbits
                      04061 ;; >>> gen.c:6258:genPackBits
                      04062         .line   178; "main.c"   INPUT_ps2Data();
02B6   ???? ????      04063         BANKSEL _TRISAbits
02B8   14??           04064         BSF     _TRISAbits,1
                      04065 ;;; gen.c:2316:resultRemat *{*
                      04066 ;;; gen.c:2760:genLabel *{*
                      04067 ;; ***  genLabel  2763
                      04068 ;;; gen.c:2316:resultRemat *{*
                      04069 ;;; gen.c:2316:resultRemat *{*
                      04070 ;;; gen.c:6145:genPointerGet *{*
                      04071 ;; ***  genPointerGet  6146
                      04072 ;;; gen.c:5927:genNearPointerGet *{*
                      04073 ;; ***  genNearPointerGet  5928
                      04074 ;;      613
                      04075 ;;      aopForRemat 392
                      04076 ;;      418: rname _PORTAbits, val 0, const = 0
                      04077 ;; ***  genNearPointerGet  5944
                      04078 ;;      694 register type nRegs=1
                      04079 ;;; gen.c:5743:genUnpackBits *{*
                      04080 ;; ***  genUnpackBits  5744
                      04081 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04082 ;;      _PORTAbits
                      04083 ;; >>> gen.c:5766:genUnpackBits
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B9                  04084 _00127_DS_
                      04085         .line   179; "main.c"   while(ps2Data);
02B9   ???? ????      04086         BANKSEL _PORTAbits
02BB   18??           04087         BTFSC   _PORTAbits,1
                      04088 ;; >>> gen.c:5767:genUnpackBits
                      04089 ;; ***  popGetLabel  key=15, label offset 12
02BC   2???           04090         GOTO    _00127_DS_
                      04091 ;;; gen.c:2316:resultRemat *{*
                      04092 ;;; gen.c:2316:resultRemat *{*
                      04093 ;;; gen.c:2760:genLabel *{*
                      04094 ;; ***  genLabel  2763
                      04095 ;;; gen.c:2316:resultRemat *{*
                      04096 ;;; gen.c:2316:resultRemat *{*
                      04097 ;;; gen.c:6145:genPointerGet *{*
                      04098 ;; ***  genPointerGet  6146
                      04099 ;;; gen.c:5927:genNearPointerGet *{*
                      04100 ;; ***  genNearPointerGet  5928
                      04101 ;;      613
                      04102 ;;      aopForRemat 392
                      04103 ;;      418: rname _PORTAbits, val 0, const = 0
                      04104 ;; ***  genNearPointerGet  5944
                      04105 ;;      694 register type nRegs=1
                      04106 ;;; gen.c:5743:genUnpackBits *{*
                      04107 ;; ***  genUnpackBits  5744
                      04108 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04109 ;;      _PORTAbits
                      04110 ;; >>> gen.c:5766:genUnpackBits
02BD                  04111 _00130_DS_
                      04112         .line   180; "main.c"   while(ps2Clock);
02BD   ???? ????      04113         BANKSEL _PORTAbits
02BF   18??           04114         BTFSC   _PORTAbits,0
                      04115 ;; >>> gen.c:5767:genUnpackBits
                      04116 ;; ***  popGetLabel  key=18, label offset 12
02C0   2???           04117         GOTO    _00130_DS_
                      04118 ;;; gen.c:2316:resultRemat *{*
                      04119 ;;; gen.c:2316:resultRemat *{*
                      04120 ;;; gen.c:2760:genLabel *{*
                      04121 ;; ***  genLabel  2763
                      04122 ;;; gen.c:2316:resultRemat *{*
                      04123 ;;; gen.c:2316:resultRemat *{*
                      04124 ;;; gen.c:6145:genPointerGet *{*
                      04125 ;; ***  genPointerGet  6146
                      04126 ;;; gen.c:5927:genNearPointerGet *{*
                      04127 ;; ***  genNearPointerGet  5928
                      04128 ;;      613
                      04129 ;;      aopForRemat 392
                      04130 ;;      418: rname _PORTAbits, val 0, const = 0
                      04131 ;; ***  genNearPointerGet  5944
                      04132 ;;      694 register type nRegs=1
                      04133 ;;; gen.c:5743:genUnpackBits *{*
                      04134 ;; ***  genUnpackBits  5744
                      04135 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04136 ;;      _PORTAbits
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04137 ;; >>> gen.c:5766:genUnpackBits
02C1                  04138 _00134_DS_
                      04139         .line   181; "main.c"   while(!ps2Data || !ps2Clock);
02C1   ???? ????      04140         BANKSEL _PORTAbits
02C3   1C??           04141         BTFSS   _PORTAbits,1
                      04142 ;; >>> gen.c:5767:genUnpackBits
                      04143 ;; ***  popGetLabel  key=22, label offset 12
02C4   2???           04144         GOTO    _00134_DS_
                      04145 ;;; gen.c:2316:resultRemat *{*
                      04146 ;;; gen.c:2316:resultRemat *{*
                      04147 ;;; gen.c:2316:resultRemat *{*
                      04148 ;;; gen.c:6145:genPointerGet *{*
                      04149 ;; ***  genPointerGet  6146
                      04150 ;;; gen.c:5927:genNearPointerGet *{*
                      04151 ;; ***  genNearPointerGet  5928
                      04152 ;;      613
                      04153 ;;      aopForRemat 392
                      04154 ;;      418: rname _PORTAbits, val 0, const = 0
                      04155 ;; ***  genNearPointerGet  5944
                      04156 ;;      694 register type nRegs=1
                      04157 ;;; gen.c:5743:genUnpackBits *{*
                      04158 ;; ***  genUnpackBits  5744
                      04159 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04160 ;;      _PORTAbits
                      04161 ;; >>> gen.c:5766:genUnpackBits
02C5   1C??           04162         BTFSS   _PORTAbits,0
                      04163 ;; >>> gen.c:5767:genUnpackBits
                      04164 ;; ***  popGetLabel  key=22, label offset 12
02C6   2???           04165         GOTO    _00134_DS_
                      04166 ;;; gen.c:2316:resultRemat *{*
                      04167 ;;; gen.c:2316:resultRemat *{*
                      04168 ;;; gen.c:2316:resultRemat *{*
                      04169 ;;; gen.c:6669:genPointerSet *{*
                      04170 ;; ***  genPointerSet  6670
                      04171 ;;; gen.c:6488:genNearPointerSet *{*
                      04172 ;; ***  genNearPointerSet  6489
                      04173 ;;      613
                      04174 ;;      aopForRemat 392
                      04175 ;;      418: rname _PORTAbits, val 0, const = 0
                      04176 ;; ***  genNearPointerSet  6504
                      04177 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04178 ;;      _PORTAbits
                      04179 ;;      line = 6506 result AOP_PCODE=_PORTAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      04180 ;;; gen.c:6232:genPackBits *{*
                      04181 ;; ***  genPackBits  6233
                      04182 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04183 ;;      _PORTAbits
                      04184 ;; >>> gen.c:6258:genPackBits
                      04185         .line   182; "main.c"   LOW_ps2Clock();
02C7   10??           04186         BCF     _PORTAbits,0
                      04187 ;;; gen.c:2316:resultRemat *{*
                      04188 ;;; gen.c:2316:resultRemat *{*
                      04189 ;;; gen.c:6669:genPointerSet *{*
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04190 ;; ***  genPointerSet  6670
                      04191 ;;; gen.c:6488:genNearPointerSet *{*
                      04192 ;; ***  genNearPointerSet  6489
                      04193 ;;      613
                      04194 ;;      aopForRemat 392
                      04195 ;;      418: rname _TRISAbits, val 0, const = 0
                      04196 ;; ***  genNearPointerSet  6504
                      04197 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04198 ;;      _TRISAbits
                      04199 ;;      line = 6506 result AOP_PCODE=_TRISAbits, size=2, left -=-, size=0, right AOP_LIT=0x00, size=1
                      04200 ;;; gen.c:6232:genPackBits *{*
                      04201 ;; ***  genPackBits  6233
                      04202 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04203 ;;      _TRISAbits
                      04204 ;; >>> gen.c:6258:genPackBits
02C8   ???? ????      04205         BANKSEL _TRISAbits
02CA   10??           04206         BCF     _TRISAbits,0
                      04207 ;;; gen.c:2316:resultRemat *{*
                      04208 ;;; gen.c:2683:genRet *{*
                      04209 ;; ***  genRet  2685
                      04210 ;;; gen.c:2316:resultRemat *{*
                      04211 ;;; gen.c:2760:genLabel *{*
                      04212 ;; ***  genLabel  2763
                      04213 ;;; gen.c:2316:resultRemat *{*
                      04214 ;;; gen.c:2528:genEndFunction *{*
                      04215 ;; ***  genEndFunction  2530
                      04216         .line   184; "main.c"   return;
02CB   0008           04217         RETURN  
                      04218 ; exit point of _sendCommandCode
                      04219 ;;; gen.c:7409:genpic14Code *{*
                      04220 
                      04221 ;***
                      04222 ;  pBlock Stats: dbName = C
                      04223 ;***
                      04224 ;entry:  _clockCycle    ;Function start
                      04225 ; 2 exit points
                      04226 ;has an exit
                      04227 ;; Starting pCode block
                      04228 ;;; gen.c:2316:resultRemat *{*
                      04229 ;;; gen.c:2760:genLabel *{*
                      04230 ;; ***  genLabel  2763
                      04231 ;;; gen.c:2316:resultRemat *{*
                      04232 ;;; gen.c:2340:genFunction *{*
                      04233 ;; ***  genFunction  2342 curr label offset=0previous max_key=0 
02CC                  04234 _clockCycle     ;Function start
                      04235 ; 2 exit points
                      04236 ;;; gen.c:2316:resultRemat *{*
                      04237 ;;; gen.c:2760:genLabel *{*
                      04238 ;; ***  genLabel  2763
                      04239 ;;; gen.c:2316:resultRemat *{*
                      04240 ;;; gen.c:2316:resultRemat *{*
                      04241 ;;; gen.c:6145:genPointerGet *{*
                      04242 ;; ***  genPointerGet  6146
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04243 ;;; gen.c:5927:genNearPointerGet *{*
                      04244 ;; ***  genNearPointerGet  5928
                      04245 ;;      613
                      04246 ;;      aopForRemat 392
                      04247 ;;      418: rname _PORTAbits, val 0, const = 0
                      04248 ;; ***  genNearPointerGet  5944
                      04249 ;;      694 register type nRegs=1
                      04250 ;;; gen.c:5743:genUnpackBits *{*
                      04251 ;; ***  genUnpackBits  5744
                      04252 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04253 ;;      _PORTAbits
                      04254 ;; >>> gen.c:5766:genUnpackBits
02CC                  04255 _00105_DS_
                      04256         .line   140; "main.c"   while(!ps2Clock);       // Attende fronte di salita
02CC   ???? ????      04257         BANKSEL _PORTAbits
02CE   1C??           04258         BTFSS   _PORTAbits,0
                      04259 ;; >>> gen.c:5767:genUnpackBits
                      04260 ;; ***  popGetLabel  key=1, label offset 4
02CF   2???           04261         GOTO    _00105_DS_
                      04262 ;;; gen.c:2316:resultRemat *{*
                      04263 ;;; gen.c:2316:resultRemat *{*
                      04264 ;;; gen.c:2760:genLabel *{*
                      04265 ;; ***  genLabel  2763
                      04266 ;;; gen.c:2316:resultRemat *{*
                      04267 ;;; gen.c:2316:resultRemat *{*
                      04268 ;;; gen.c:6145:genPointerGet *{*
                      04269 ;; ***  genPointerGet  6146
                      04270 ;;; gen.c:5927:genNearPointerGet *{*
                      04271 ;; ***  genNearPointerGet  5928
                      04272 ;;      613
                      04273 ;;      aopForRemat 392
                      04274 ;;      418: rname _PORTAbits, val 0, const = 0
                      04275 ;; ***  genNearPointerGet  5944
                      04276 ;;      694 register type nRegs=1
                      04277 ;;; gen.c:5743:genUnpackBits *{*
                      04278 ;; ***  genUnpackBits  5744
                      04279 ;;      833: aopGet AOP_PCODE type PO_IMMEDIATE
                      04280 ;;      _PORTAbits
                      04281 ;; >>> gen.c:5766:genUnpackBits
02D0                  04282 _00108_DS_
                      04283         .line   141; "main.c"   while(ps2Clock);        // Attende fronte di discesa
02D0   ???? ????      04284         BANKSEL _PORTAbits
02D2   18??           04285         BTFSC   _PORTAbits,0
                      04286 ;; >>> gen.c:5767:genUnpackBits
                      04287 ;; ***  popGetLabel  key=4, label offset 4
02D3   2???           04288         GOTO    _00108_DS_
                      04289 ;;; gen.c:2316:resultRemat *{*
                      04290 ;;; gen.c:2316:resultRemat *{*
                      04291 ;;; gen.c:2683:genRet *{*
                      04292 ;; ***  genRet  2685
                      04293 ;;; gen.c:2316:resultRemat *{*
                      04294 ;;; gen.c:2760:genLabel *{*
                      04295 ;; ***  genLabel  2763
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04296 ;;; gen.c:2316:resultRemat *{*
                      04297 ;;; gen.c:2528:genEndFunction *{*
                      04298 ;; ***  genEndFunction  2530
                      04299         .line   143; "main.c"   return;
02D4   0008           04300         RETURN  
                      04301 ; exit point of _clockCycle
                      04302 ;;; gen.c:7409:genpic14Code *{*
                      04303 
                      04304 
                      04305 ;       code size estimation:
                      04306 ;         459+  151 =   610 instructions ( 1522 byte)
                      04307 
                      04308         end
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE

ADDEN                             00000003
ADEN                              00000003
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CIS                               00000003
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000001F
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
DATA_CP_OFF                       00003FFF
DATA_CP_ON                        00003EFF
DC                                00000001
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDATA                            0000009A
EEIE                              00000007
EEIF                              00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
NOT_BO                            00000000
NOT_BOD                           00000000
NOT_BOR                           00000000
NOT_PD                            00000003
NOT_POR                           00000001
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 85


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RBPU                          00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
OERR                              00000001
OPTION_REG                        00000081
OSCF                              00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PORTA                             00000005
PORTB                             00000006
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSAVE                             00000070
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSAVE                             00000071
STATUS                            00000003
STK00                             0000007F
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 86


SYMBOL TABLE
  LABEL                             VALUE 

STK01                             0000007E
STK02                             0000007D
STK03                             0000007C
STK04                             0000007B
STK05                             0000007A
STK06                             00000079
STK07                             00000078
STK08                             00000077
STK09                             00000076
STK10                             00000075
STK11                             00000074
STK12                             00000073
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 87


SYMBOL TABLE
  LABEL                             VALUE 

TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRMT                              00000001
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             0000009F
VREN                              00000007
VROE                              00000006
VRR                               00000005
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
WSAVE                             00000072
Z                                 00000002
_00001_DS_                        0000024F
_00105_DS_                        000002CC
_00108_DS_                        000002D0
_00113_DS_                        00000282
_00117_DS_                        0000029A
_00118_DS_                        0000029D
_00120_DS_                        000002A5
_00121_DS_                        0000028C
_00123_DS_                        000002AA
_00125_DS_                        000002B2
_00126_DS_                        000002B5
_00127_DS_                        000002B9
_00130_DS_                        000002BD
_00134_DS_                        000002C1
_00139_DS_                        0000021E
_00144_DS_                        00000226
_00146_DS_                        00000239
_00147_DS_                        0000023B
_00153_DS_                        00000259
_00156_DS_                        00000218
_00157_DS_                        00000263
_00203_DS_                        000001FB
_00206_DS_                        00000209
_00211_DS_                        000001DF
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 88


SYMBOL TABLE
  LABEL                             VALUE 

_00216_DS_                        00000015
_00218_DS_                        0000001D
_00219_DS_                        0000001F
_00222_DS_                        00000049
_00223_DS_                        00000053
_00224_DS_                        0000005D
_00227_DS_                        00000068
_00230_DS_                        00000073
_00234_DS_                        0000009D
_00237_DS_                        000000D2
_00240_DS_                        0000010E
_00242_DS_                        00000118
_00243_DS_                        00000122
_00244_DS_                        0000012C
_00247_DS_                        0000014B
_00249_DS_                        00000165
_00251_DS_                        000001A1
_00254_DS_                        00000180
_00262_DS_                        0000007E
_00263_DS_                        000001B5
_00265_DS_                        000001D7
_00268_DS_                        000001C7
_00275_DS_                        000000C9
_00276_DS_                        000000CD
_00277_DS_                        00000105
_00278_DS_                        00000109
_00279_DS_                        00000142
_00280_DS_                        00000146
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CLOCK_SPEED                      00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_50                            00002BFF
_CP_75                            000017FF
_CP_ALL                           000003FF
_CP_OFF                           00003FFF
_DEVID1                           00002006
_EEADR                            00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EEDATA                           00000000
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 89


SYMBOL TABLE
  LABEL                             VALUE 

_ER_OSC_CLKOUT                    00003FFF
_ER_OSC_NOCLKOUT                  00003FFE
_EXTCLK_OSC                       00003FEF
_FOSC_ECIO                        00003FEF
_FOSC_ERCLK                       00003FFF
_FOSC_ERIO                        00003FFE
_FOSC_HS                          00003FEE
_FOSC_INTOSCCLK                   00003FFD
_FOSC_INTOSCIO                    00003FFC
_FOSC_LP                          00003FEC
_FOSC_XT                          00003FED
_FSR                              00000000
_HS_OSC                           00003FEE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_INDF                             00000000
_INTCON                           00000000
_INTCONbits                       00000000
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FEC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_OPTION_REG                       00000000
_OPTION_REGbits                   00000000
_PCL                              00000000
_PCLATH                           00000000
_PCON                             00000000
_PCONbits                         00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PR2                              00000000
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RCREG                            00000000
_RCSTA                            00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_STATUS                           00000000
_STATUSbits                       00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 90


SYMBOL TABLE
  LABEL                             VALUE 

_T2CONbits                        00000000
_TMR0                             00000000
_TMR1                             00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TXREG                            00000000
_TXSTA                            00000000
_TXSTAbits                        00000000
_VRCON                            00000000
_VRCONbits                        00000000
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FED
__16F628                          00000001
__gptrget1                        00000000
__sdcc_gsinit_startup             00000000
_alt                              00000000
_altGr                            00000000
_clockCycle                       000002CC
_commandCode                      00000000
_ctrl                             00000000
_ctrlAscii                        00000000
_delay_ms                         00000000
_delay_us                         00000000
_extendedKey                      00000000
_flashPanel                       000001DC
_keyUp                            00000000
_main                             00000000
_normalAscii                      00000000
_ps2Default                       00002100
_readScanCode                     00000212
_scanCode                         00000000
_sendCommandCode                  0000026F
_setPanel                         000001F4
_set_clock_speed                  00000000
_set_restart_wdt                  00000000
_shift                            00000000
_shiftAscii                       00000000
_shiftLock                        00000000
r0x1009                           00000000
r0x100A                           00000001
r0x100B                           00000002
r0x100C                           00000003
r0x100D                           00000004
r0x100E                           00000005
r0x100F                           00000006
gpasm-1.2.0 #980 (May 16 2014)       main.asm   5-24-2014  19:48:09         PAGE 91


SYMBOL TABLE
  LABEL                             VALUE 

r0x1010                           00000007
r0x1011                           00000008

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    19 reported,     0 suppressed

