Two questions are of concern regarding the execution time of BUSH:

   1) How long does it take to back up my files?
   2) How much longer does it take if I use the read-after-write CRC 
   checking? 
   
The times given below were obtained on the following hardware:

Computer: SB180FX - 6.144 MHz HD64180
          BDOS at 0c006h, giving an I/O buffer of 332 sectors (41.5K bytes).

Source Drive: ST225/Xebec 1410A, 4K allocation blocks

Destination Drive: Mitsubishi 4853 DSDD 80-track 5-1/4" floppy, SB180-2 format 
                   (782K bytes), 2 ms step rate, 2K allocation blocks

Times for the extremes:		Without read-after-	With read-after-
				write CRC checking	write CRC checking

  1 file  of 782K		 5 min 15 sec		14 min 45 sec
  
195 files of 4K each		21 min 43 sec		34 min 40 sec
        (780K total)

For something a little closer to normal ('normal', or course, being defined 
as whatever I happen to have on MY disk at the time--your mileage will vary):

91 files totaling 776K		10 min 19 sec		18 min 56 sec
(average 8.5K each)

(All times were measured by hand, from the 'Floppy disk empty, continuing...' 
message until the bell sounded when the floppy filled, and are rounded to the 
nearest .5 sec).

So, not surprisingly, large files transfer faster than small ones (less 
running back and forth between the directory tracks and the data tracks).  
However, adding CRC checking to these files makes the backup take 2.8 times 
as long, where doing the same to backups of very small files only adds 59% to 
the run time.  On the 'average' file sizes, the increase is a factor of 1.83.  
The reason for this variation is not immediately obvious, although it may 
have to do with the time to calculate the CRC on small files relative to disk 
rotational latency and sector skewing, and therefore be very dependent on the 
particular hardware and disk format in use.  I would like to hear comparison 
times on other systems/hardware, especially on the differences between 
non-verifying and verifying backups.
