Nature of the animal: a demonstration of a word processing environment 
using VMENU, with much help from ARUNZ.

Quick test: (presuming you have all the program files somewhere in the path 
of your system:) Place this ALIAS.CMD file (or its code into your existing 
one) on A15: and the WORDPROC.VMN file in any "working directory."  Place 
the ZFILER.CMD file in that directory, also.
    Hit 'ESC' 'W' to enter the word processing environment.

A more detailed explanation:

    Most of the documentation offered here appeared in an earlier version.  
I have removed the "cut out along dotted lines" code in favor of offering 
the relevant files whole.  See ALIAS.CMD, WORDPROC.VMN, and ZFILER.CMD 
elsewhere in this library.  You can simply add your own existing code to 
these files if you are already using them in your system.  If adding code 
to an ALIAS.CMD file, be sure not to defeat the purpose of the DEFAULT 
alias, which must be the last command in the file (see my ALIAS.CMD).  In 
other words, if you add your own code to this ALIAS.CMD (or vice versa), be 
sure to add it ABOVE the DEFAULT command.  Version 3.3 or higher of ZCPR is 
presumed by this document.
    Dreas Nielsen's recently released WORDWORK (another VMENU 
implementation) could be raided for some fancy backup work involving the 
shell variable concept.  This would be especially useful for those who have 
a great need for a consistent backup function, namely, RAM disk users and 
to some extent hard disk users.

                        An explanation of WORDDEMO

    For a variety of reasons, I have been moved recently to work on a 
demonstration of a possible environment for word processing within the "Z 
system" [ZCPR3 and optionally a BDOS replacement].  While in my own system 
I have relegated most of the necessary "fancy commands" to macros within 
the ZFILER environment, this has certain drawbacks when trying to 
demonstrate the ideas to others since one has to make an extra effort to 
see the macro command "help" menus.
    Thatcher Deane said something recently that reminded me of VMENU.  I 
used to do everything from within a VMENU environment, but gradually 
changed as the capabilities of ZFILER evolved.  The (V)MENU shells are 
wonderful for controlled situations, but limit you to only those commands 
that are defined for you within the shell.  ZFILER has long spoiled me for 
the degree of control you get from being able to do anything you want 
(there is always the Z pseudo command line), as well as having the extra 
features of the macros and the built-in ZFILER commands for file 
management.
    But by using (V)MENU you can show the possible commands on the screen 
from which the user is operating.  With VMENU you can even see many of the 
files in the directory and can have your commands refer to whatever file 
the cursor is pointing.  So, with a certain need to have a demonstration of 
word processing functions, I resurrected VMENU in my system and set to work 
[incidentally, VMENU has been "replaced" in the Z pantheon by at least 
ZMANG (ZCPR MANaGer); as of this writing (31 May 1988), ZMANG fails to 
recognize any of the four "system files" allowed in the ZCPR environment, 
one of which is used in the code presented here; when that is fixed (the 
author has been notified), its additional features of the ability to delete 
and rename files, and its making the Z command line available (as with 
ZFILER), will all recommend it as a complete replacement for VMENU].
    The biggest problems with executing the ideas I had in mind (most of 
which have been derived from my personal needs and experience) had to do 
with the oft-complained of difficulty with (V)MENU and ZFILER commands: if 
you include prompting within the command line (this includes IF INPUT 
statements), you will get all the prompts as you invoke the line, whether 
they are valid or not!  Jay Sage has had to answer this criticism often, 
and the answer is to avoid the situation, usually by using ARUNZ (about 
which more later).

    While I would like to completely redo the demonstration library Echelon 
put out a few years ago and use only public domain software in place of the 
many commercial programs Echelon presumed, time does not allow that at 
present, and I have chosen to concentrate only on the word processing part 
of the demonstration and am including such commercial software as I have 
and use.  I have tested all the commands and all are "warranted" to work on 
my system under the conditions prevailing at the time of testing (that's 
kind of a joke).  You must be sure that all preliminary conditions are met 
before trying out the commands.  Some of these conditions will appear to be 
very complex to the less Z-initiated among you, but I assure you that in 
creating these commands for my system I had only to modify existing 
elements in my system, and that therefore if you have to add any files to 
run all this stuff it's probably good for you to do so!

    For the commands you will see on your screen to work at all, you will 
need to be sure the following conditions are met:

Files needed and where (all are COM files unless otherwise specified):

  SETFILE     A15:
  VDE         A15: [change this to your favorite editor, but not until you
                    are sure of all the places to make the changes]
  Z3KEY.RCP
  Z3KEY       A15: 
  LDR    
  CLEANUP     A15: [these are the program files from Oasis' PUNCTUATION & 
  PHRASE            STYLE]
  PASSIVE.TXT  A0: [data files for PHRASE or any other program that uses 
                    overlays or the like should be "public"; if you don't 
                    know what this means, put them on A0: for the time 
                    being]
  SPELL,REVIEW,MARKFIX, etc.  A15:  [the program files for THE WORD PLUS 
                    can be on A15:, but the various data files (*.CMP and 
                    the like) can be made "public" wherever that is 
                    convenient for you]
  *.CMP     A0:    [the various dictionaries for THE WORD PLUS]
  BRADFORD  A15:   [font files should be made "public"]
  BRADZEX   A15:   [a ZEX script for automating printing with BRADFORD]
  PRINT120  A15:   [I call this PRINTWS since it is a program for printing 
                    WordStar formatted files on dot matrix printers]
  TYPELZ    A15:   [for "typing" crunched files to the screen]
  VTYPE     A15:   [actually a ZRDOS-only utility, but turns out to work 
                    on Carson Wilson's Z80DOS, which we put into the Kaypro 
                    Z33 implementations released on this board through 
                    KCUG, Seattle]
  wsNOTE    A15:   [Eric Meyer's footnote utility for WordStar; there is a 
                    demonstration copy on Adam's RiBBS (206) 882-3684
  CONFIG    A15:   [changes the parameters of wsNOTE]
  ZF        A15:   [this is what I call ZFILER on my system]

    Most important: you must have the file ALIAS.CMD up in A15: and it must 
be part of the ECP that Z33 presumes.  That means you must have CMDRUN.COM 
[which is actually ARUNZ] there, too.  The concept of the ECP [see Jay 
Sage's Z33 User Guide] also includes LX.COM and COMMAND.LBR, provision for 
which are offered in the ALIAS.CMD file included here.
    Using ARUNZ and ALIAS.CMD turned out to be the key to solving the 
various problems with prompting.  There is also apparently a conflict with 
some limitations built into Z33, where shell commands cannot successfully 
invoke flow control processing [IF, ELSE, FI, etc.].  Anyway, using ARUNZ 
solved everything, so try this approach when adapting this stuff to your 
own needs.

    These commands were created with frequent reference to existing Z 
documentation, such as it is.  The most important document was Jay Sage's 
article in THE COMPUTER JOURNAL [#31] on how to use ARUNZ.  The VMENU help 
file was also useful, as were various other Z notes and docs.  Probably the 
greatest deficiency in existing documentation is that concerning IF 
processing (flow control).  Read everything you can find, including the 
preface to the source code for Z33IF11.Z80 and the FCP configuration 
header.  Hope Sage does an article on flow control soon.

Please direct any questions publicly to Adam's RiBBS [the "unofficial" 
ZNode in Seattle] at (206) 882-3684.

Michael Broschat  31 May 1988
