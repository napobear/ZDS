                            FOREVER Z

Z-System column #1 appearing in Morrow Owners Review,†ç
Febrary/March 1987

(c) 1987 Rick Charnes, all rights reserved

     I'd like to dedicate this first column to the large numbers†ç
of Morrow owners who have ordered the special bootable Z-System†ç
disk.  The response has been very gratifying, and I hope here to†ç
offer tips, hints, and general "Z" miscellanea to all you†ç
intrepid explorers embarking on your cosmic adventure through the†ç
Z-System skies.  I can't guarantee that you'll be the same person†ç
when you return, but if I can just help with the navigation a†ç
bit...

     I'd like to cover two topics for this first column, as they†ç
will likely be the most useful and enjoyable programs you have:†ç
aliases and shells.

     Now first, shells.

     There are three of these shell utilities on the Morrow disk†ç
- VFILER, VMENU, and MENU.  All users of Z use one or more of†ç
these daily.  They are indispensable and quite extraordinary.

     What is a shell?  In a way, you could say it's a secondary†ç
operating system.  When you run a program that's a shell, you can†ç
then run other programs from it.  These other programs, rather†ç
than returning to your operating system prompt upon exit return†ç
instead to your shell utility.

     Shells exhibit one of the most intriguing aspects of Z-†ç
System, the way all its disparate parts are related to each other†ç
in a thousand subtle, and generally to the user unnoticed, ways. †ç
Z is unique among operating systems of which I'm aware in having†ç
such a large number of utilities that exist in this dynamic and†ç
two-way relationship to it.

     You'll often hear the word "utility" bandied about in "Z"†ç
literature, and here it has a quite specific meaning.  You see,†ç
these programs are sort of lonely by themselves.  In order for†ç
them to run at all, they first have to be given the "imprint" of†ç
the operating system.  Dozens of tiny little messages are†ç
constantly being sent back and forth between the utilities and†ç
the operating system.  General information is shared about your†ç
"system environment," as well as information specific to each†ç
program/operating system interaction.  It's somewhat like†ç
schoolchildren passing notes to each other in class while no one†ç
else sees it going on - that's the kind of information that†ç
really makes the world go round, and Z-System run.

     The most useful shell for everyday use, and one which you†ç
will begin using from the first day you boot up, is VFILER.  If†ç
you can imagine NSWEEP, itself an extraordinary program, taken to†ç
the 100th power, you will begin to have some idea of what it is. †ç
Perhaps the thing you might want to do with that magical moment†ç
when you've got Z-System installed for the very first time is to†ç
just type V-F-I-L-E-R, carriage return, and stand back.

     The first thing you'll notice is that your files are†ç
displayed in five columns, unlike NSWEEP which gives you one. †ç
This way you can generally see the contents of an entire disk in†ç
one screen.  You'll notice many of the familiar regular and†ç
"mass" operations of NSWEEP - copy, rename, delete, etc.  But you†ç
have much more.  You have the ability to "move" files from one†ç
disk/directory to another.  Files are copied to the new area,†ç
then the old ones deleted.  The feature, however, that makes†ç
VFILER and the other shells shine are their menu functions, as I†ç
mentioned in my article last issue.  Any kind of operation can be†ç
one from these menus, and in fact for a challenge I sometimes see†ç
if I can run my entire computer session from VFILER.  It can be†ç
done, and the process is most educational.  You can write these†ç
menus yourself or start off with the ready-made ones available†ç
from Z-Nodes in the file DEMO.LBR.

     I have to warn you, though: if you start enjoying yourself,†ç
you'll find yourself spending half your time "putting the†ç
finishing touches on" your menus instead of doing what you set†ç
out to do...

     With VFILER you can write 36 different command lines that†ç
can be run either by pressing any of the 10 number keys alone, or†ç
by first pressing your escape key then any of the letters. †ç
Remember the concept of a "pointer file."  This means that your†ç
command line will act upon whichever file VFILER's friendly†ç
"pointer" (see it there?) is pointing to.  You reference this†ç
file in your command line with "%f" for the entire file, "%n" for†ç
the filename, and "%t" for the filetype.

     Here's a sample command line I use for opening up and†ç
inspecting the contents of an .LBR file.  Remember, you're†ç
generally allowed 200 characters in your command line, which is†ç
about two and a half screen-widths.  Think of what you can do†ç
with that!  For the purposes of this article, of course, I can†ç
only show it on 2 separate lines, but when you type it in you†ç
enter it all on a single line.  There's a Z-System tradition to†ç
display long lines in print form by separating them with ">>" and†ç
that's what I've done here.  I invoke this "macro" (command line)†ç
with "N", since it uses NULU.  Individual commands are always†ç
separated with a semicolon:

N if %t=lbr;echo ^[G4 OPENING UP %F AS A LIBRARY...^[G0      >>
sak /p4;nulu -o %n -f;else;echo file is not a library;fi

     To analyze: The initial "N" indicates the character that†ç
will invoke it from VFILER.  You actually will be typing <ESC>,†ç
which is the lead-in character, then "N".  Then VFILER checks the†ç
filetype with the "IF" command to make sure it is indeed a†ç
library.  If so, it goes to the next command, which "echoes" the†ç
sequence "<ESC>G4" to my terminal.  If you read my column last†ç
issue you know how much I like reverse video, which this enables. †ç
The text message tells me that it's opening the file up,†ç
appropriate substituting the library name for "%F" in the echoed†ç
message.  Then "<ESC>G0", which appears here and on your screen†ç
as "^[G0", turns off the reverse video.

     Because it looks so nice in reverse I like this attractive†ç
message to remain on the screen for a few seconds, so the 'SAK†ç
/P4' tells the program SAK to pause operations for four seconds. †ç
Then NULU awakens and opens up the file, substituting its name†ç
for '%N'.  If the file is not a library (sometimes you'll hit "N"†ç
by mistake, I assure you!), the 'ELSE' command takes over and†ç
we're echoed a message to that effect.  The 'FI' command is the†ç
equivalent of 'ENDIF' and ends the 'IF' interaction.

     VFILER is an extraordinary program and I'm quite sure you'll†ç
find it to be one of the most treasured friends in your arsenal†ç
of Z tools.

     The other two shell utilities are MENU and VMENU.  The†ç
difference among this trio is interesting.  VFILER shows you a†ç
screen's worth of files, or by hitting the "#" key the menu, but†ç
not both at the same time.  MENU is on the other extreme.  You†ç
never see your files, but you have much more room for descriptive†ç
material of your menu.  Such beautiful displays are possible!  In†ç
my word processing menu for MENU.COM I am able to edit the†ç
pointer file with Newword, edit it with Wordstar, correct it with†ç
Correct-It, print it with my print spooler, soften it with†ç
HRDSFT, filter it with FILTW.COM, or count the number of words in†ç
it --- each with a single keystroke.

     VMENU is right in between the two and is lovely in a†ç
different way - the top half of your screen fills with files and†ç
the bottom half with your menus.  Yes, that's menus -- plural;†ç
255 menus are possible in both VMENU and MENU!  You move from ç
menu to menu, and list of files to the next, with a single†ç
keystroke.   Ah, what infinite variety of forms in this Z world!

     You'll find uses for all three of these utilities, and will†ç
enjoy learning when you want to take advantage of the special†ç
features of each.

     The next feature I'd like to quickly cover is the alias.  An†ç
alias is essentially a submit file wrapped up into a single .COM†ç
file package.   You'll probably spend hours dreaming up favorite†ç
combinations of commands you want to stuff into one, so I'll only†ç
tell you one of my simplest and most favorite.  I've always†ç
disliked CP/M's reverse "statement formation logic," as in

               PIP NEWFILE=OLDFILE

So I've taken Z-System's resident copying command, CP, and made†ç
myself a nice MS-DOS style copy program called appropriately†ç
enough, COPY.COM.  To wit:

                    CP $2=$1

Now, when I want to copy LOVELTR.TXT to drive B0:LETTERS>†ç
(remember, we can give names to our directories in Z-System) I†ç
can type

               COPY LOVELTR.TXT LETTERS:

Gee -- makes me feel like I have a IBM PC...

     Again, your only thing to watch for is that 200 character†ç
buffer, so you'll enjoy learning how to put the most in there†ç
without hitting that magic upper limit.

          I hope you all are having a excellent time with Z-†ç
System.  Don't forget to log on to the Z-Node nearest you for the†ç
latest in the large number of excellent public domain utilities†ç
available.  This grand adventure is just beginning.

     Next time I'll cover, among other things, an amazing program†ç
called HSH that will actually let you recall and edit previously†ç
issued command lines as well as edit the one which you're†ç
currently writing.

     Z you next time...
