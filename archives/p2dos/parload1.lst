   1:			;;
   2:			;; ZDS - parallel link binary image loader
   3:			;;
   4:			
   5:			; link to monitor and bios symbols
   6:			rsym bios.sym
   7:			
   8:			;
   9:			include parload.inc
**** parload.inc ****
   1:			;
   2:			; common part for parload.asm and parload1.asm ...
   3:			;
   4:			
   5:	A000          	RELADR	EQU	$A000			; WHERE TO RUN
   6:	0300          	BEGIN	EQU	TPA + 512		; PLACE FOR THE RELOCATED
   7:								; PART (AT LOAD TIME)
   8:			;
   9:			;
  10:	FFFF          	TRUE	EQU	-1
  11:	0000          	FALSE	EQU	0
  12:			;
**** parload1.asm ****
  10:			;
  11:			
  12:	FFFF          	ZDSDIRECTIO	EQU	TRUE		; enable monitor calls in cpmio.asm
  13:			
  14:			
  15:	A000          		ORG	RELADR
  16:			
  17:	A000  C396A2  		JP	LDER
  18:			
  19:				; include routines to print ascii values
  20:			include ../ASM/bit2040.asm
**** ../ASM/bit2040.asm ****
   1:			;;
   2:			;; Routines for binary to decimal conversion
   3:			;;
   4:			;; (C) Piergiorgio Betti <pbetti@lpconsul.net> - 2006
   5:			;;
   6:			;; The active part is taken from:
   7:			;; David Barrow - Assembler routines for the Z80
   8:			;; CENTURY COMMUNICATIONS LTD - ISBN 0 7126 0506 1
   9:			;;
  10:			
  11:			
  12:			;;
  13:			;; BIN2A8 - Convert an 8 bit value to ASCII
  14:			;;
  15:			;; INPUT	C = Value to be converted
  16:			;; OUTPUT	DE = Converted string address
  17:			;
  18:	A003  E5      	BIN2A8: PUSH	HL
  19:	A004  F5      		PUSH	AF
  20:	A005  0600    		LD	B,0
  21:	A007  ED4333A0		LD	(IVAL16),BC
  22:	A00B  2133A0  		LD	HL,IVAL16
  23:	A00E  1135A0  		LD	DE,OVAL16
  24:	A011  3E01    		LD	A,1			; one byte conversion
  25:	A013  CD3DA0  		CALL	LNGIBD
  26:	A016  1135A0  		LD	DE,OVAL16
  27:	A019  F1      		POP	AF
  28:	A01A  E1      		POP	HL
  29:	A01B  C9      		RET
  30:				;
  31:			;;
  32:			;; BN2A16 - Convert a 16 bit value to ASCII
  33:			;;
  34:			;; INPUT	BC = Value to be converted
  35:			;; OUTPUT	DE = Converted string address
  36:			;
  37:	A01C  E5      	BN2A16: PUSH	HL
  38:	A01D  F5      		PUSH	AF
  39:	A01E  ED4333A0		LD	(IVAL16),BC
  40:	A022  2133A0  		LD	HL,IVAL16
  41:	A025  1135A0  		LD	DE,OVAL16
  42:	A028  3E02    		LD	A,2			; two byte conversion
  43:	A02A  CD3DA0  		CALL	LNGIBD
  44:	A02D  1135A0  		LD	DE,OVAL16
  45:	A030  F1      		POP	AF
  46:	A031  E1      		POP	HL
  47:	A032  C9      		RET
  48:				;
  49:			;; Generic storage
  50:			
  51:	A033 .. A034 00	IVAL16:	DEFS	2
  52:	A035 .. A03A 00	OVAL16:	DEFS	6
  53:			
  54:			;;
  55:			;;
  56:			;; LNGIBD - Convert long integer of given precision to ASCII
  57:			;;
  58:			;; INPUT	HL addresses the first byte of the binary value
  59:			;;		which must be stored with the low order byte in
  60:			;;		lowest memory.
  61:			;;		DE addresses the first byte of the destination
  62:			;;		area which must be larger enough to accept the
  63:			;;		decimal result (2.42 * binary lenght + 1).
  64:			;;		A = binary byte lenght (1 to 255)
  65:			
  66:			;;
  67:	000A          	CVBASE	EQU	10		; CONVERSION BASE
  68:	A03B          	VPTR	EQU	HILO		; STORAGE AREA EQU
  69:			
  70:			
  71:	A03B .. A03C 00	HILO:	DEFS	2		; STORAGE AREA
  72:			
  73:	A03D  4F      	LNGIBD:	LD	C,A
  74:	A03E  0600    		LD	B,0
  75:	A040  2B      		DEC	HL
  76:	A041  223BA0  		LD	(VPTR),HL
  77:	A044  3EFF    		LD	A,-1
  78:	A046  12      		LD	(DE),A
  79:	A047  09      		ADD	HL,BC
  80:				;
  81:	A048  7E      	NXTMSB:	LD	A,(HL)
  82:	A049  B7      		OR	A
  83:	A04A  C259A0  		JP	NZ,MSBFND
  84:	A04D  2B      		DEC	HL
  85:	A04E  0D      		DEC	C
  86:	A04F  C248A0  		JP	NZ,NXTMSB
  87:				;
  88:	A052  EB      		EX	DE,HL
  89:	A053  3630    		LD	(HL),'0'
  90:	A055  23      		INC	HL
  91:	A056  3600    		LD	(HL),0
  92:	A058  C9      		RET
  93:				;
  94:	A059  47      	MSBFND:	LD	B,A
  95:	A05A  3E80    		LD	A,$80
  96:				;
  97:	A05C  B8      	NXTMSK:	CP	B
  98:	A05D  DA67A0  		JP	C,MSKFND
  99:	A060  CA67A0  		JP	Z,MSKFND
 100:	A063  0F      		RRCA
 101:	A064  C35CA0  		JP	NXTMSK
 102:				;
 103:	A067  47      	MSKFND:	LD	B,A
 104:	A068  C5      		PUSH	BC
 105:	A069  2A3BA0  		LD	HL,(VPTR)
 106:	A06C  0600    		LD	B,0
 107:	A06E  09      		ADD	HL,BC
 108:	A06F  A6      		AND	(HL)
 109:	A070  C6FF    		ADD	A,$FF
 110:	A072  6B      		LD	L,E
 111:	A073  62      		LD	H,D
 112:				;
 113:	A074  7E      	NXTOPV:	LD	A,(HL)
 114:	A075  3C      		INC	A
 115:	A076  CA88A0  		JP	Z,OPVDON
 116:	A079  3D      		DEC	A
 117:	A07A  8F      		ADC	A,A
 118:				;
 119:	A07B  FE0A    		CP	CVBASE
 120:	A07D  DA82A0  		JP	C,NOCOUL
 121:	A080  D60A    		SUB	CVBASE
 122:	A082  3F      	NOCOUL:	CCF
 123:				;
 124:	A083  77      		LD	(HL),A
 125:	A084  23      		INC	HL
 126:	A085  C374A0  		JP	NXTOPV
 127:				;
 128:	A088  D290A0  	OPVDON:	JP	NC,EXTDON
 129:	A08B  3601    		LD	(HL),1
 130:	A08D  23      		INC	HL
 131:	A08E  36FF    		LD	(HL),-1
 132:				;
 133:	A090  C1      	EXTDON:	POP	BC
 134:	A091  78      		LD	A,B
 135:	A092  0F      		RRCA
 136:	A093  D267A0  		JP	NC,MSKFND
 137:	A096  0D      		DEC	C
 138:	A097  C267A0  		JP	NZ,MSKFND
 139:				;
 140:				; REVERSE DIGIT ORDER. ADD ASCII DIGITS HI-NIBBLES
 141:	A09A  3600    		LD	(HL),0
 142:				;
 143:	A09C  2B      	NXTCNV:	DEC	HL
 144:	A09D  7D      		LD	A,L
 145:	A09E  93      		SUB	E
 146:	A09F  7C      		LD	A,H
 147:	A0A0  9A      		SBC	A,D
 148:	A0A1  D8      		RET	C
 149:				;
 150:	A0A2  1A      		LD	A,(DE)
 151:	A0A3  F630    		OR	$30
 152:	A0A5  47      		LD	B,A
 153:	A0A6  7E      		LD	A,(HL)
 154:	A0A7  F630    		OR	$30
 155:	A0A9  70      		LD	(HL),B
 156:	A0AA  12      		LD	(DE),A
 157:				;
 158:	A0AB  13      		INC	DE
 159:	A0AC  C39CA0  		JP	NXTCNV
 160:			
 161:			;-----------------------------------------------
**** parload1.asm ****
  21:			include ../ASM/cpmio.asm
**** ../ASM/cpmio.asm ****
   1:			
   2:			; 	.Z80
   3:			; 	ASEG
   4:			
   5:			;----------------------------------------------------------------
   6:			;	     This is a module in the ASMLIB library.
   7:			;
   8:			; 		        CP/M I/O Drivers
   9:			;
  10:			; This is the I/O driver module of ASMLIB and has ALL the I/O routines
  11:			; for the system (EXCEPT from line input). The routines are.
  12:			;
  13:			; COE	Send accumulator to console.
  14:			; CIE   Get console into accumulator. No echo.
  15:			; CST   Get console status, 00 = no character there.
  16:			; LOE   Send accumulator to list device.
  17:			; LST   Get list device status.
  18:			; IONUM Get the number of the I/O driver, for later identification.
  19:			;
  20:			;			Written     	R.C.H.     22/10/83
  21:			;			Last Update	R.C.H.	   23/02/84
  22:			;
  23:			;----------------------------------------------------------------
  24:			; 	NAME	'CPMIO'
  25:			; ;
  26:			; 	PUBLI	C	COE,CIE,CST,LOE,LST,IONUM
  27:			; ;
  28:			; 	MACLI	B	Z80
  29:			;
  30:			
  31:	FFFF          	IF	ZDSDIRECTIO
  32:			
  33:	A0AF          	COE:
  34:	A0AF  C5      		PUSH	BC
  35:	A0B0  4F      		LD	C,A
  36:	A0B1  CD9FFD  		CALL	BBCONOUT
  37:	A0B4  C1      		POP	BC
  38:	A0B5  C9      		RET
  39:			
  40:	A0B6          	CIE:
  41:	A0B6  E5      		PUSH	HL
  42:	A0B7  C5      		PUSH	BC
  43:	A0B8  D5      		PUSH	DE
  44:	A0B9  CD94FD  		CALL	BBCONIN
  45:	A0BC  D1      		POP	DE
  46:	A0BD  C1      		POP	BC
  47:	A0BE  E1      		POP	HL
  48:	A0BF  C9      		RET
  49:			
  50:	A0C0          	CST:
  51:	A0C0  CDAAFD  		CALL	BBCONST
  52:	A0C3  E67F    		AND	$7F
  53:	A0C5  C9      		RET
  54:			
  55:	A0C6          	LOE:
  56:	A0C6  C9      		RET
  57:			
  58:	A0C7          	LST:
  59:	A0C7  C9      		RET
  60:			
  61:	A0C8          	BELL:
  62:	A0C8  C9      		RET
  63:			; 	JP	IOCBEL
  64:			
  65:			ELSE
 161:			ENDIF
**** parload1.asm ****
  22:			include ../ASM/cbuff.asm
**** ../ASM/cbuff.asm ****
   1:			
   2:			; 	.Z80
   3:			; 	ASEG
   4:			
   5:			;----------------------------------------------------------------
   6:			; 	   This is a module in the ASMLIB library.
   7:			;
   8:			; This module reads a line of input from the console and puts it into
   9:			; a standard CP/M console buffer pointed to by DE on entry. This is
  10:			; a little nicer that CP/M as it allows buffers to be pre-initialized
  11:			; so that it is printed when the buffer is input so that defaults can
  12:			; be loaded before entry of data.
  13:			;
  14:			;			Written		R.C.H.          22/10/83
  15:			;			Last Update	R.C.H.          22/10/83
  16:			;----------------------------------------------------------------
  17:			;
  18:			; 	NAME	'cbuff'
  19:			; 	PUBLI	C	CBUFF
  20:			; 	EXTRN	BELL,CIE,COE	; get and put a byte to screen
  21:			;
  22:			; 	MACLI	B	Z80
  23:			;
  24:	A0C9          	CBUFF:
  25:	A0C9  F5      		PUSH	AF
  26:	A0CA  1A      		LD	A,(DE)		; get buffer size in bytes
  27:	A0CB  B7      		OR	A
  28:	A0CC  CA50A1  		JP	Z,CBUFFEND
  29:	A0CF  E5      		PUSH	HL
  30:	A0D0  C5      		PUSH	BC
  31:	A0D1  D5      		PUSH	DE
  32:	A0D2  EB      		EX	DE,HL		; put string address into HL
  33:	A0D3  4F      		LD	C,A		; Now C = buffer maximum size
  34:	A0D4          	INIT:
  35:	A0D4  0600    		LD	B,00		; character read = 0
  36:	A0D6  23      		INC	HL		; hl -> size of character read now
  37:			; Here we detect if there is some data in the buffer to be pre printed
  38:			; and if there is the we print it.
  39:	A0D7  7E      		LD	A,(HL)		; get number of chars. in the buffer
  40:	A0D8  23      		INC	HL		; point to string space now.
  41:	A0D9  B7      		OR	A
  42:	A0DA  280A    		JR	Z,RDLOOP
  43:			; Print the initialized character string, save the size for later
  44:	A0DC  47      		LD	B,A
  45:	A0DD  C5      		PUSH	BC		; save
  46:	A0DE          	INIT2:
  47:	A0DE  7E      		LD	A,(HL)		; get the character
  48:	A0DF  23      		INC	HL		; point to next string space byte
  49:	A0E0  CD18A1  		CALL	DSPCHR		; print it, maybe control character
  50:	A0E3  10F9    		DJNZ	INIT2		; print all characters
  51:	A0E5  C1      		POP	BC		; restore # of characters
  52:			;
  53:			; On entry here HL-> string space, next free byte, B = number of characters
  54:			; in the string. C = number of bytes in the buffer.
  55:			
  56:			
  57:	A0E6          	RDLOOP:
  58:	A0E6  CDB6A0  		CALL	CIE		; get a character
  59:	A0E9  FE0D    		CP	0DH		; end if carriage return
  60:	A0EB  285C    		JR	Z,EXITRD	; exit
  61:	A0ED  FE0A    		CP	0AH
  62:	A0EF  2858    		JR	Z,EXITRD
  63:	A0F1  FE08    		CP	08		; backspace ??
  64:	A0F3  2005    		JR	NZ,RDLP1	; if not then continue
  65:	A0F5  CD29A1  		CALL	BACKSP		; else backspace
  66:	A0F8  18EC    		JR	RDLOOP		; keep on backspacing
  67:	A0FA          	RDLP1:
  68:	A0FA  FE18    		CP	018H		; delete line ?
  69:	A0FC  2007    		JR	NZ,RDLP2
  70:	A0FE          	DEL1:
  71:	A0FE  CD29A1  		CALL	BACKSP		; delete a character
  72:	A101  20FB    		JR	NZ,DEL1		; keep on till all character deaded
  73:	A103  18E1    		JR	RDLOOP		; start again ebonettes
  74:			;
  75:			; If here we check if the buffer is full. If so we ring the bell
  76:	A105          	RDLP2:
  77:	A105  5F      		LD	E,A		; save the character
  78:	A106  78      		LD	A,B		; load byte count
  79:	A107  B9      		CP	C		; is it equal to the maximum ?
  80:	A108  3805    		JR	C,STRCH		; store the character if not full
  81:	A10A  CDC8A0  		CALL	BELL		; else ring the bell
  82:	A10D  18D7    		JR	RDLOOP		; get more characters
  83:			;
  84:			; Buffer not full so save the character
  85:	A10F          	STRCH:
  86:	A10F  7B      		LD	A,E		; get character
  87:	A110  77      		LD	(HL),A		; save it
  88:	A111  23      		INC	HL		; point to next buffer byte
  89:	A112  04      		INC	B		; increment byte count
  90:	A113  CD18A1  		CALL	DSPCHR		; display the (maybe control) character
  91:	A116  18CE    		JR	RDLOOP		; do again, more characters
  92:			;
  93:			; Display a control character by preceeding it with a  '^'
  94:			;
  95:	A118          	DSPCHR:
  96:	A118  FE20    		CP	020H		; was it a space ?
  97:	A11A  D2AFA0  		JP	NC,COE		; if not then print & return
  98:	A11D  5F      		LD	E,A		; else save character
  99:	A11E  3E5E    		LD	A,'^'		; indicate a control character
 100:	A120  CDAFA0  		CALL	COE
 101:	A123  7B      		LD	A,E		; restore character
 102:	A124  C640    		ADD	A,040H		; make printable
 103:	A126  C3AFA0  		JP	COE
 104:			;
 105:			; Send a backspace and detect if at the start of the line.
 106:			;
 107:	A129          	BACKSP:
 108:	A129  78      		LD	A,B		; get character count
 109:	A12A  B7      		OR	A
 110:	A12B  C8      		RET	Z		; return if line empty
 111:	A12C  2B      		DEC	HL		; decrement byte pointer
 112:	A12D  7E      		LD	A,(HL)		; get the character
 113:	A12E  FE20    		CP	020H		; is it a control character ?
 114:	A130  3003    		JR	NC,BSP1		; if not then delete 1 char only
 115:	A132  CD3AA1  		CALL	BSP		; send a backspace
 116:	A135          	BSP1:
 117:	A135  CD3AA1  		CALL	BSP		; backspace 1
 118:	A138  05      		DEC	B		; one less string byte
 119:	A139  C9      		RET
 120:			;
 121:			; Send the backspace
 122:	A13A          	BSP:
 123:	A13A  3E08    		LD	A,08
 124:	A13C  CDAFA0  		CALL	COE
 125:	A13F  3E20    		LD	A,' '		; erase the character
 126:	A141  CDAFA0  		CALL	COE
 127:	A144  3E08    		LD	A,08
 128:	A146  C3AFA0  		JP	COE		; send and return
 129:	A149          	EXITRD:
 130:			; Set the number of bytes read into the buffer byte at DE + 1.
 131:			;
 132:	A149  D1      		POP	DE		; restore all registers (buffer addr)
 133:	A14A  78      		LD	A,B		; get # of characters
 134:	A14B  13      		INC	DE
 135:	A14C  12      		LD	(DE),A		; save in characters read byte
 136:	A14D  1B      		DEC	DE		; restore de
 137:			;
 138:	A14E  C1      		POP	BC
 139:	A14F  E1      		POP	HL
 140:	A150          	CBUFFEND:
 141:	A150  F1      		POP	AF
 142:	A151  C9      		RET
 143:			
 144:			; 	END
 145:			
**** parload1.asm ****
  23:			
  24:			; CONHEX:
  25:			; 	LD	HL,$0000		; was 00F6DE 21 00 00
  26:			; GNXTC:	CALL	DOGETCHR
  27:			; GENTR:	LD	C,A
  28:			; 	CALL	CHKHEX
  29:			; 	JR	C,HNHEX			; if not hex digit
  30:			; 	ADD	HL,HL
  31:			; 	ADD	HL,HL
  32:			; 	ADD	HL,HL
  33:			; 	ADD	HL,HL
  34:			; 	OR	L
  35:			; 	LD	L,A
  36:			; 	JR	GNXTC
  37:			; HNHEX:	EX	(SP),HL
  38:			; 	PUSH	HL
  39:			; 	LD	A,C
  40:			; 	CALL	CHKCTR
  41:			; 	JR	NC,HEHEX
  42:			; 	DJNZ	UCREJ
  43:			; 	RET
  44:			
  45:				; get user input
  46:	A152          	GCHR:
  47:	A152  CD94FD  		CALL	BBCONIN			; take from console
  48:	A155  E67F    		AND	$7F			;
  49:	A157  FE60    		CP	$60			;
  50:	A159  FA63A1  		JP	M,GCDSP			; verify alpha
  51:	A15C  FE7B    		CP	$7B			;
  52:	A15E  F263A1  		JP	P,GCDSP			;
  53:	A161  CBAF    		RES	5,A			; convert to uppercase
  54:	A163  C5      	GCDSP:	PUSH	BC			;
  55:	A164  4F      		LD	C,A			;
  56:	A165  CD9FFD  		CALL	BBCONOUT		;
  57:	A168  79      		LD	A,C			;
  58:	A169  C1      		POP	BC			;
  59:	A16A  C9      		RET				;
  60:			
  61:				;
  62:				; Show a zero terminated string
  63:	A16B  0E0D    	LFEED:	LD	C,CR			;
  64:	A16D  CD9FFD  		CALL	BBCONOUT		; send CR
  65:	A170  0E0A    		LD	C,LF			;
  66:	A172  CD9FFD  		CALL	BBCONOUT		; send LF
  67:	A175  C9      		RET
  68:	A176  7E      	ZSDSP:	LD	A,(HL)			; pick char pointed by HL
  69:	A177  B7      		OR	A			; is the terminating NUL ?
  70:	A178  C8      		RET	Z			; yes
  71:	A179  E5      		PUSH	HL			; no
  72:	A17A  4F      		LD	C,A			;
  73:	A17B  CD9FFD  		CALL	BBCONOUT		; display it
  74:	A17E  E1      		POP	HL			;
  75:	A17F  23      		INC	HL			;
  76:	A180  C376A1  		JP	ZSDSP			;
  77:			
  78:	A183  CD6BA1  	EXIT:	CALL	LFEED
  79:	A186  C30000  		JP	$0000			; jump to BOOT
  80:			
  81:				;
  82:				; INTERNAL STORAGE
  83:				;
  84:	A189 .. A189 00	UOPER:	DEFS	1
  85:	A18A          	UFILN:					; FILEBNAME BUFFER
  86:	A18A  FE      		DEFB	254			; MAX LEN
  87:	A18B  00      		DEFB	0			; STR LEN
  88:	A18C .. A289 00	UFILNS:	DEFS	254			; string space
  89:	A28A .. A291 00	CMDBUF:	DEFS	8			; REMOTE COMMAND STRUCTURE
  90:	A292  40465440	FTRHDR:	DEFB	"@FT@"
  91:				;
  92:				; where the real things starts...
  93:				;
  94:	A296          	LDER:
  95:	A296  21C4A3  		LD	HL,SOMSG
  96:	A299  CD76A1  		CALL	ZSDSP
  97:			
  98:	A29C  2188A4  	LDER01:	LD	HL,UDMSG
  99:	A29F  CD76A1  		CALL	ZSDSP
 100:	A2A2  CD52A1  		CALL	GCHR			;
 101:	A2A5  FE03    		CP	$03			; CTRL+C ?
 102:	A2A7  CA83A1  		JP	Z,EXIT			; exit
 103:	A2AA  FE53    		CP	'S'
 104:	A2AC  200B    		JR	NZ,LDER00
 105:	A2AE  3289A1  		LD	(UOPER),A
 106:	A2B1  21A6A4  		LD	HL,SSEND
 107:	A2B4  CD76A1  		CALL	ZSDSP
 108:	A2B7  180F    		JR	LDER05
 109:	A2B9  FE52    	LDER00:	CP	'R'
 110:	A2BB  20DF    		JR	NZ,LDER01
 111:	A2BD  3289A1  		LD	(UOPER),A
 112:	A2C0  21AAA4  		LD	HL,SRECE
 113:	A2C3  CD76A1  		CALL	ZSDSP
 114:	A2C6  1800    		JR	LDER05
 115:	A2C8          	LDER05:	;
 116:	A2C8  CD6BA1  		CALL	LFEED
 117:	A2CB  21B1A4  		LD	HL,SFILN
 118:	A2CE  CD76A1  		CALL	ZSDSP
 119:	A2D1  118AA1  		LD	DE,UFILN		; input buffer
 120:	A2D4  CDC9A0  		CALL	CBUFF
 121:	A2D7  3A8BA1  		LD	A,(UFILN+1)		; str lenght in buffer
 122:	A2DA  B7      		OR	A
 123:	A2DB  28BF    		JR	Z,LDER01
 124:				;
 125:				;
 126:				; prepare command for remote
 127:	A2DD  2192A2  		LD	HL,FTRHDR
 128:	A2E0  118AA2  		LD	DE,CMDBUF
 129:	A2E3  010400  		LD	BC,4
 130:	A2E6  EDB0    		LDIR				; HEADER
 131:				;
 132:	A2E8  3A89A1  		LD	A,(UOPER)
 133:	A2EB  FE53    		CP	'S'
 134:	A2ED  2007    		JR	NZ,LDER10
 135:	A2EF  0E01    		LD	C, VDWRSEC		; send command
 136:	A2F1  FD7100  		LD	(IY + 0), C
 137:	A2F4  1805    		JR	LDER15
 138:	A2F6  0E00    	LDER10:	LD	C, VDRDSEC		; read command
 139:	A2F8  FD7100  		LD	(IY + 0), C
 140:	A2FB  AF      	LDER15:	XOR	A			; drive
 141:	A2FC  FD7701  		LD	(IY + 1), A
 142:	A2FF  010000  		LD	BC,0			; sector
 143:	A302  FD7102  		LD	(IY + 2), C
 144:	A305  FD7003  		LD	(IY + 3), B
 145:				;LD	BC, (FTRKBUF)		; track
 146:	A308  FD7104  		LD	(IY + 4), C
 147:	A30B  FD7005  		LD	(IY + 5), B
 148:				;
 149:	A30E  218AA2  		LD	HL,CMDBUF		; command offset
 150:	A311  010A00  		LD	BC,VDBUFSZ		; block size
 151:	A314  CD63FC  		CALL	BBPSNDBLK		; send command block
 152:	A317  79      		LD	A,C
 153:	A318  B7      		OR	A			; what happens ?
 154:	A319  C275A3  		JP	NZ,BADTRX		; tx nok
 155:				;
 156:	A31C  218BA1  		LD	HL,UFILN+1
 157:	A31F  01FF00  		LD	BC,255
 158:	A322  CD63FC  		CALL	BBPSNDBLK		; send filename block
 159:	A325  79      		LD	A,C
 160:	A326  B7      		OR	A			; what happens ?
 161:	A327  C275A3  		JP	NZ,BADTRX		; tx nok
 162:				;
 163:	A32A  3A89A1  		LD	A,(UOPER)
 164:	A32D  FE53    		CP	'S'
 165:	A32F  2000    		JR	NZ,LDER20		; send data
 166:			
 167:	A331          	LDER20:
 168:	A331  212AA4  		LD	HL,RDYMSG
 169:	A334  CD76A1  		CALL	ZSDSP
 170:	A337  CD94FD  		CALL	BBCONIN
 171:	A33A  2160A4  		LD	HL,RNING
 172:	A33D  CD76A1  		CALL	ZSDSP
 173:	A340  CD69FC  		CALL	BBUPLCHR		; in hi byte of upload offset
 174:	A343  62      		LD	H,D
 175:	A344  CD69FC  		CALL	BBUPLCHR		; in lo byte of upload offset
 176:	A347  6A      		LD	L,D
 177:	A348  CD69FC  		CALL	BBUPLCHR		; in hi byte of data size
 178:	A34B  42      		LD	B,D
 179:	A34C  CD69FC  		CALL	BBUPLCHR		; in lo byte of data size
 180:	A34F  4A      		LD	C,D
 181:	A350  E5      		PUSH	HL
 182:	A351  D1      		POP	DE
 183:	A352  E5      		PUSH	HL
 184:	A353  C5      		PUSH	BC
 185:	A354  2174A4  		LD	HL,LDMSG
 186:	A357  CD76A1  		CALL	ZSDSP
 187:	A35A  69      		LD	L,C
 188:	A35B  60      		LD	H,B
 189:	A35C  CD81A3  		CALL	H2AEN1
 190:	A35F  217DA4  		LD	HL,LDMS1
 191:	A362  CD76A1  		CALL	ZSDSP
 192:	A365  6B      		LD	L,E
 193:	A366  62      		LD	H,D
 194:	A367  CD81A3  		CALL	H2AEN1
 195:	A36A  CDB8A3  		CALL	OUTCRLF
 196:	A36D  C1      		POP	BC
 197:	A36E  E1      		POP	HL
 198:	A36F  E5      		PUSH	HL
 199:	A370  CD6FFC  		CALL	BBPRCVBLK		; upload data block
 200:	A373  E1      		POP	HL
 201:	A374  E9      		JP	(HL)
 202:			
 203:	A375          	BADTRX:
 204:	A375  21BDA4  		LD	HL,IOEMSG
 205:	A378  CD76A1  		CALL	ZSDSP
 206:	A37B  C383A1  		JP	EXIT
 207:			
 208:			;;
 209:			;; HL2ASC - convert & display HL 2 ascii
 210:	A37E          	HL2ASC:
 211:	A37E  CDB8A3  		CALL	OUTCRLF           ; was 00FA46 CD B0 FA
 212:	A381  7C      	H2AEN1:	LD	A,H
 213:	A382  CD86A3  		CALL	H2AJ1
 214:	A385  7D      		LD	A,L
 215:	A386  F5      	H2AJ1:	PUSH	AF
 216:	A387  0F      		RRCA
 217:	A388  0F      		RRCA
 218:	A389  0F      		RRCA
 219:	A38A  0F      		RRCA
 220:	A38B  CD8FA3  		CALL	H2AJ2
 221:	A38E  F1      		POP	AF
 222:	A38F  CD9FA3  	H2AJ2:	CALL	NIB2ASC
 223:	A392  CD9FFD  		CALL	BBCONOUT
 224:	A395  C9      		RET
 225:			
 226:	A396  CD86A3  	H2AJ3:	CALL	H2AJ1           ; entry point to display HEX and a "-"
 227:	A399          	MPROMPT:
 228:	A399  0E2D    		LD	C,$2D
 229:	A39B  CD9FFD  		CALL	BBCONOUT
 230:	A39E  C9      		RET
 231:			
 232:			;;
 233:			;; NIB2ASC convert lower nibble in reg A to ascii in reg C
 234:			;
 235:	A39F          	NIB2ASC:
 236:	A39F  E60F    		AND	$0F             ; was 00FDE0 E6 0F
 237:	A3A1  C690    		ADD	A,$90
 238:	A3A3  27      		DAA
 239:	A3A4  CE40    		ADC	A,$40
 240:	A3A6  27      		DAA
 241:	A3A7  4F      		LD	C,A
 242:	A3A8  C9      		RET
 243:			
 244:			;;
 245:			;;
 246:			;; OUTSTR print a string using BBCONOUT
 247:	A3A9          	OUTSTR:
 248:	A3A9  C5      		PUSH	BC
 249:	A3AA  4E      	OSLP0:	LD	C,(HL)
 250:	A3AB  41      		LD	B,C
 251:	A3AC  CBB9    		RES	7,C
 252:	A3AE  CD9FFD  		CALL	BBCONOUT
 253:	A3B1  23      		INC	HL
 254:	A3B2  78      		LD	A,B
 255:	A3B3  07      		RLCA
 256:	A3B4  30F4    		JR	NC,OSLP0
 257:	A3B6  C1      		POP	BC
 258:	A3B7  C9      		RET
 259:			
 260:			
 261:			;;
 262:			;; OUTCRLF - CR/LF through OUTSTR
 263:			;
 264:			
 265:	A3B8          	OUTCRLF:
 266:	A3B8  E5      		PUSH	HL			; was 00FAB0 E5
 267:	A3B9  21C1A3  	OCRLF1:	LD	HL,CRLFTAB
 268:	A3BC  CD76A1  		CALL	ZSDSP
 269:	A3BF  E1      		POP	HL
 270:	A3C0  C9      		RET
 271:			
 272:				;
 273:				; MESSAGES
 274:				;
 275:	A3C1          	CRLFTAB:
 276:	A3C1  0D0A00  		DEFB	CR,LF,0
 277:	A3C4  0C5A3830	SOMSG:	DEFB	$0C,"Z80DARKSTAR PARALLEL LINK BINARY LOADER",CR,LF
	      4441524B
	      53544152
	      20504152
	      414C4C45
	      4C204C49
	      4E4B2042
	      494E4152
	      59204C4F
	      41444552
	      0D0A
 278:	A3EE  76657220		DEFB	"ver 1.0 (c) 2006, Piergiorgio Betti <pbetti@lpconsul.net>",CR,LF,0
	      312E3020
	      28632920
	      32303036
	      2C205069
	      65726769
	      6F726769
	      6F204265
	      74746920
	      3C706265
	      74746940
	      6C70636F
	      6E73756C
	      2E6E6574
	      3E0D0A00
 279:	A42A  0D0A0A  	RDYMSG:	DEFB	CR,LF,LF
 280:	A42D  50524553		DEFB	"PRESS ANY KEY WHEN REMOTE IS READY FOR DOWNLOAD...",0
	      5320414E
	      59204B45
	      59205748
	      454E2052
	      454D4F54
	      45204953
	      20524541
	      44592046
	      4F522044
	      4F574E4C
	      4F41442E
	      2E2E00
 281:	A460  0D0A0A4C	RNING:	DEFB	CR,LF,LF,"LOADER RUNNING",CR,LF,0
	      4F414445
	      52205255
	      4E4E494E
	      470D0A00
 282:	A474  4C4F4144	LDMSG:	DEFB	"LOADING ",0
	      494E4720
	      00
 283:	A47D  20425954	LDMS1:	DEFB	" BYTES AT ",0
	      45532041
	      542000
 284:	A488  53656C65	UDMSG:	DEFB	"Select [S]end or [R]eceive : ",0
	      6374205B
	      535D656E
	      64206F72
	      205B525D
	      65636569
	      7665203A
	      2000
 285:	A4A6  656E6400	SSEND:	DEFB	"end",0
 286:	A4AA  65636569	SRECE:	DEFB	"eceive",0
	      766500
 287:	A4B1  46696C65	SFILN:	DEFB	"Filename : ",0
	      6E616D65
	      203A2000
 288:	A4BD  4C494E4B	IOEMSG:	DEFB	"LINK I/O ERROR...",CR,LF,0
	      20492F4F
	      20455252
	      4F522E2E
	      2E0D0A00
 289:			
 290:	A4D1          	MYTOP	EQU	$
 291:			
 292:			wsym parload1.sym
 293:			
 294:	A4D1          		END



Statistics:

     5	passes
     0	jr promotions
   587	symbols
     0	bytes



Symbol Table:

aftrio          dca3+    dfmt256            0+    ppdstp             6+    
all00           dff7+    dfmt512         ffff+    ppstrob            0+    
all01           e02e+    diff16          dd01+    ppuack             7+    
all02           e0e5+    dirbf           df77+    ppuini             1+    
all03           e11c+    dly1            fd89+    ppuokg             3+    
alloc           dbfb+    dly2            fd87+    ppurdy             5+    
altprnprt          3+    dmaadr          dd75+    prntbusybit        0+    
appbuf            2e+    dpbase          d837+    prvtop            4f+    
backsp          a129     dpbnds          d882+    r0brdl             0+    
badtrx          a375     dpbvrt          d857+    r0rxtx             0+    
base               0+    dreadh          db00+    r1brdm             1+    
bbappp             e+    dselbf            4e+    r1ier              1+    
bbbase          f000+    dspchr          a118     r2fcr              2+    
bbcalret        fd5a+    dwrith          db30+    r2iir              2+    
bbcbank            c+    eep29c             4+    r3lcr              3+    
bbcomn          fc00+    eep29ee            1+    r4mcr              4+    
bbconin         fd94+    eep29xe            2+    r5lsr              5+    
bbconout        fd9f+    eepage0           c0+    r6msr              6+    
bbconst         fdaa+    eeproglock        10+    r7spr              7+    
bbcpboot        fcc9+    eepsta          f000+    ram0buf           3b+    
bbcptime        fcc3+    eepunsupp          8+    ram1buf           3c+    
bbcrtcini       fc03+    eerineprom        80+    ram2buf           3d+    
bbcrtfill       fc09+    enddat          e1d3+    ram3buf           3e+    
bbcstck            d+    erflag          dd5f+    ramtbl          e000+    
bbcurset        fc21+    esc               1b+    rcp             e200+    
bbdebug         ffff+    exit            a183     rcps              10+    
bbdiv16         fce1+    exitrd          a149     rdflo           db13+    
bbdmaset        fcb7+    expath          edf4+    rdloop          a0e6     
bbdriveid       fcf9+    expaths            5+    rdlp1           a0fa     
bbdsksel        fcbd+    extdon          a090     rdlp2           a105     
bbeidck         fd23+    extfcb          edd0+    rdvrt           db22+    
bbepmngr        fd1d+    extrabias       1200+    rdymsg          a42a     
bbexec          fd29+    extstk          efd0+    readcfg8255       92+    
bbfdrvsel       fcdb+    false          =   0+    readhst         dafd+    
bbfhome         fc81+    fcp             ea00+    regastatus        16+    
bbflopio        fc93+    fcps               4+    regcommand         f+    
bbfread         fc87+    fdcbase           d0+    regcontrol        16+    
bbfwrite        fc8d+    fdccmdstatr       d0+    regcyllsb          c+    
bbhdboot        fd11+    fdcdatareg        d7+    regcylmsb          d+    
bbhdgeo         fd0b+    fdcdrvrcnt        d6+    regdata            8+    
bbhdinit        fcf3+    fdcreadc          88+    regerr             9+    
bbhdrd          fd05+    fdcrestc           7+    regseccnt          a+    
bbhdwr          fcff+    fdcsectreg        d2+    regsector          b+    
bbimgp             4+    fdcseekc          17+    regshd             e+    
bbinictc        fc57+    fdctrakreg        d1+    regstatus          f+    
bbjtobnk        fc00+    fdcwritc          a8+    reladr         =a000+    
bbldpart        fd17+    fdrvbuf           45+    resroom          400+    
bbmul16         fce7+    ff                 c+    rhstfi          dc66+    
bboffcal        fced+    fifblok            b+    rldrom          fe79+    
bbpag              f+    fifoend           25+    rning           a460     
bbprcvblk       fc6f+    fifokb            1a+    rst7sp1           38+    
bbprnchr        fc99+    fifosto            f+    rst7sp2           39+    
bbpsndblk       fc63+    fifou0             f+    rst7sp3           3a+    
bbrdtime        fca5+    fifsize            8+    rtbsiz           3c0+    
bbrdvdsk        fc75+    fin             fdc4+    rtcbuf          da5b+    
bbresctc        fc5d+    fixblock           0+    rwmove          dcef+    
bbsecset        fcb1+    fout            fde1+    rwoper          dc02+    
bbsidset        fcd5+    frdpbuf           41+    rwoshf          dc09+    
bbstack         feb4+    fsecbuf           43+    sconin          fc2d+    
bbstbase        fe90+    fsekbuf           3f+    sconout         fc27+    
bbsttim         fc9f+    fstat           fdb5+    sconst          fc33+    
bbtrkset        fcab+    ftrhdr          a292     sectran         dade+    
bbu0ini         fc39+    ftrkbuf           46+    seg1            e200+    
bbu1ini         fc51+    gcdsp           a163     seg10           ec00+    
bbu1rx          fc45+    gchr            a152     seg11           ef00+    
bbu1st          fc4b+    gocpm           d9f1+    seg12           efd0+    
bbu1tx          fc3f+    h2aen1          a381     seg2            ea00+    
bbuplchr        fc69+    h2aj1           a386     seg3            ea00+    
bbvcpmbt        fccf+    h2aj2           a38f     seg4            ed00+    
bbvoid          fd6a+    h2aj3           a396+    seg5            ed80+    
bbwrvdsk        fc7b+    haseds          ffff+    seg6            edd0+    
bdos            ca06+    hilo            a03b     seg7            edf4+    
bdosb           ca00+    hl2asc          a37e+    seg8            edff+    
bdwtyp          dd62+    hmempag            b+    seg9            ee00+    
begdat          dd5e+    home            da65+    sekdsk          dd65+    
begin          = 300+    homflo          da73+    sekhst          dd74+    
bell            a0c8     hstact          dd5e+    seksec          dd68+    
bfailmsg        d902+    hstbsz           200+    sektrk          dd66+    
bias            8e00+    hstbuf          dd77+    selact          da98+    
bin2a8          a003+    hstdsk          dd6f+    seldsk          da7d+    
biohby            d8+    hstfil          dc6e+    selflp          dac0+    
bioreas          a00+    hstfrd          dca0+    selhdd          dac6+    
bios            d800+    hstful          dc48+    selndb          dabb+    
biosiz           55e+    hstlgs          dd6d+    selvrt          dac7+    
biostds          600+    hstloa          dc37+    setdma          dad9+    
bldoffs         3000+    hstrdd          dc3a+    setsec          dad4+    
blifastblok       60+    hstrsf          dcc5+    settrk          dacf+    
blifastline       6a+    hstsec          dd72+    sfiln           a4b1     
blislowblok       40+    hstsyn          dc45+    shsize            20+    
blislowline       4a+    hsttmp          dd6e+    shstk           ed00+    
bn2a16          a01c+    hsttrk          dd70+    shstks             4+    
bootfail        d9e9+    hstwrt          dd60+    signon          d8a8+    
botdsk          d836+    idea0line          1+    sintvec         fff0+    
botok           d93f+    idea1line          2+    sk2hst          dcb2+    
bseldsk         dd16+    idea2line          4+    somsg           a3c4     
bsetdma         dd11+    idecs0line         8+    srece           a4aa     
bsetsec         dd0c+    idecs1line        10+    ssend           a4a6     
bsettrk         dd07+    ideporta          e0+    stmpp2          ffff+    
bsp             a13a     ideportb          e1+    stmpzs             0+    
bsp1            a135     ideportc          e2+    strch           a10f     
btpasiz            6+    ideportctrl       e3+    synpnd          dcf2+    
cbboot          d914+    iderdline         40+    sysbase         f000+    
cbread          db7b+    iderstline        80+    syscmlo         feb4+    
cbrev              f+    idewrline         20+    syscom          fc00+    
cbuff           a0c9     idisk1            24+    syshertz          13+    
cbuffend        a150     idisk2            24+    sytimr          fe19+    
ccp             c200+    idisk3             1+    tblblk            30+    
cdisk              4+    idisk4             1+    tdesclen          14+    
chk00           e065+    imtpag            ff+    tiaddrlen          4+    
chk01           e0a5+    imtsiz           400+    time            da54+    
chk02           e153+    init            a0d4+    timrcon           28+    
chk03           e193+    init2           a0de     tmpbyte           4b+    
chksid          db61+    intrdi          fe0f+    tnamelen           8+    
chkuna          dbb6+    intren          fdfe+    tpa              100+    
cie             a0b6     intron             0+    tpagelen           2+    
cldcmnd         da28+    iobval            95+    trans           d877+    
clkday          da5e+    iobyte             3+    trnpag             d+    
clkdow          da60+    ioemsg          a4bd     true           =ffff+    
clkhr           da5d+    ioflag          dd61+    tsizelen           4+    
clkio              6+    iop                0+    u0defspeed         6+    
clkmm           da5c+    iops               0+    u0isr           fe25+    
clkmon          da5f+    iuser1            24+    u1defspeed         c+    
clkrst             7+    iuser2             f+    u1isr           fe59+    
clksclk            5+    iuser3            24+    u1nul           fe70+    
clkse           da5b+    iuser4             f+    uart0             c0+    
clkyea          da61+    ival16          a033     uart0base         c0+    
cloisr          da62+    kbdbyte           4d+    uart0br           2c+    
cmdbuf          a28a     keybstrbbit        7+    uart1             c8+    
cmdid             ec+    lder            a296     uart115k2          1+    
cmdinit           91+    lder00          a2b9     uart1200          60+    
cmdread           20+    lder01          a29c     uart19k2           6+    
cmdrecal          10+    lder05          a2c8     uart1base         c8+    
cmdset          da4f+    lder10          a2f6     uart1br           2b+    
cmdspindown       e0+    lder15          a2fb     uart2400          30+    
cmdspinup         e1+    lder20          a331     uart38k4           3+    
cmdwrite          30+    ldms1           a47d     uart4800          18+    
cnfbyte           27+    ldmsg           a474     uart57k6           2+    
coe             a0af     lf                 a+    uart9600           c+    
colbuf            4f+    lfeed           a16b     uastav          fe84+    
coldbeg         da3e+    lngibd          a03d     uastkb          fe86+    
coldend         da45+    loe             a0c6+    udmsg           a488     
constr          dd4f+    lsect           d9c1+    ufiln           a18a     
cont            d9d1+    lst             a0c7+    ufilns          a18c+    
copsys            2d+    maxblk            14+    uisre           fe4e+    
cpmsiz          1bde+    mconin          dd1b+    uisri           fe32+    
cr                 d+    mconout         dd2c+    unacnt          dd64+    
crdureg         fc27+    mconst          dd3b+    unadsk          dd69+    
crlftab         a3c1     menaprt           21+    unasec          dd6c+    
crt6545adst       8c+    miobyte           4c+    unatrk          dd6a+    
crt6545data       8d+    mmgetp          fd78+    uoper           a189     
crtbase           80+    mmpmap          fd6b+    usenodeblock       0+    
crtbeepport       8f+    mmtpapag          ef+    vconin          fc15+    
crtblinkbit        0+    mmuport           20+    vconout         fc0f+    
crthilitbit        3+    mmutstaddr      d000+    vconst          fc1b+    
crtkeybcnt        87+    mmutstpage         d+    vdbufsz            a+    
crtkeybdat        85+    mnodev          dd4a+    vdrdsec            0+    
crtmodebit         4+    monmaj            33+    vdskbuf           30+    
crtprntcnt        83+    monmin            32+    vdwrsec            1+    
crtprntdat        81+    mprompt         a399+    vers              16+    
crtram0cnt        82+    msbfnd          a059     voidisr         fe22+    
crtram0dat        80+    mscnt             f6+    vptr           =a03b+    
crtram1cnt        86+    msize             3c+    wboot           d986+    
crtram1dat        84+    mskfnd          a067     wboote          d803+    
crtram2cnt        8a+    mytop          =a4d1+    whstfi          dc5f+    
crtram2dat        88+    mzmac              1+    wrall              0+    
crtram3port       8e+    nextop          d9d4+    wrdir              1+    
crtrevrsbit        1+    nib2asc         a39f     wrfl2           db53+    
crtservcnt        8b+    nocoul          a082     wrflo           db43+    
crtservdat        89+    noovf           dbf4+    wrflt           db47+    
crtunderbit        2+    noprow          dd63+    write           db8e+    
crtwidthbit        1+    nxtcnv          a09c     writecfg8255      80+    
cslp0           dd50+    nxtmsb          a048     writehst        db2d+    
cst             a0c0+    nxtmsk          a05c     wrttmp          dd73+    
ctc0tc            2a+    nxtopv          a074     wrual              2+    
ctc0tchi          20+    ocrlf1          a3b9+    wrvrt           db56+    
ctc1tc            29+    opvdon          a088     z3cl            ef00+    
ctc1tc100hz        5+    oslp0           a3aa     z3cls             d0+    
ctc1tc10hz        30+    outcrlf         a3b8     z3env           ec00+    
ctc1tc25hz        13+    outstr          a3a9+    z3envs             2+    
ctc1tc2hz         f4+    oval16          a035     z3msg           ed80+    
ctc1tc50hz         a+    path            da46+    z3ndir          ee00+    
ctcbase           e8+    phydpt          d8a6+    z3ndirs           1c+    
ctcchan0          e8+    phylen             a+    z3rev             21+    
ctcchan1          e9+    phyoff             f+    z3whl           edff+    
ctcchan2          ea+    phyprm          d89b+    zbufbas         e200+    
ctcchan3          eb+    physpt          d8a5+    zdsdirectio    =ffff+    
curpbuf           48+    phystr          dae1+    zdsstpr         e838+    
cursoroff         20+    pio2bit2           2+    zdsstsz          1c8+    
cursoron           a+    pio2bit3           3+    zero128         da35+    
cursshp           4a+    pio2bit4           4+    zerom           da37+    
cvbase         =   a+    ppakstb            1+    zflopkg          200+    
cwflg           da3d+    ppcntrp            2+    ziopkg             0+    
datsiz           475+    ppdatap            3+    zrespkg          800+    
del1            a0fe     ppdini             0+    zsdsp           a176     
delay           fd85+    ppdokg             2+    zstdovr          400+    
dfmt128            0+    ppdrdy             4+    
