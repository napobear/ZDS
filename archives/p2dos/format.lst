   1:			;;----------------------------------------------------------------------------
   2:			;; FORMAT.COM - Z80DarkStar Floppy format utility
   3:			;;
   4:			;; (c) 2006 Piergiorgio Betti <pbetti@lpconsul.net>
   5:			;;
   6:			;; 2006/03/15 - Release 3.2
   7:			;; Now handle 128/256 bytes per sector (17/10 sectors/track)
   8:			;;
   9:			;; originally disassembly of the Micro Z80 of Nuova Elettronica produced
  10:			;; with:
  11:			;z80dasm: Portable Z80 disassembler
  12:			;Copyright (C) Marcel de Kogel 1996,1997
  13:			;Patched 2006 for uppercase by Piergiorgio Betti <pbetti@lpconsul.net>
  14:			;;----------------------------------------------------------------------------
  15:			
  16:			; link to DarkStar Monitor symbols...
  17:			; rsym darkstar.sym
  18:			include darkstar.equ
**** darkstar.equ ****
   1:			;****** Equ's file autogenerated by genequs ver: 1.0
   2:			;****** Input files:
   3:			;****** SysCommon.lst
   4:	FDC4          	FIN            	EQU	0FDC4H
   5:	FD89          	DLY1           	EQU	0FD89H
   6:	FD87          	DLY2           	EQU	0FD87H
   7:	FDE1          	FOUT           	EQU	0FDE1H
   8:	FE70          	U1NUL          	EQU	0FE70H
   9:	FE25          	U0ISR          	EQU	0FE25H
  10:	FE59          	U1ISR          	EQU	0FE59H
  11:	FD85          	DELAY          	EQU	0FD85H
  12:	FE4E          	UISRE          	EQU	0FE4EH
  13:	FDB5          	FSTAT          	EQU	0FDB5H
  14:	FE32          	UISRI          	EQU	0FE32H
  15:	FC4B          	BBU1ST         	EQU	0FC4BH
  16:	FC45          	BBU1RX         	EQU	0FC45H
  17:	FC3F          	BBU1TX         	EQU	0FC3FH
  18:	FD29          	BBEXEC         	EQU	0FD29H
  19:	FD05          	BBHDRD         	EQU	0FD05H
  20:	FD6A          	BBVOID         	EQU	0FD6AH
  21:	FE86          	UASTKB         	EQU	0FE86H
  22:	FD6B          	MMPMAP         	EQU	0FD6BH
  23:	FE0F          	INTRDI         	EQU	0FE0FH
  24:	FC2D          	SCONIN         	EQU	0FC2DH
  25:	FC15          	VCONIN         	EQU	0FC15H
  26:	FCE1          	BBDIV16        	EQU	0FCE1H
  27:	FCFF          	BBHDWR         	EQU	0FCFFH
  28:	FD78          	MMGETP         	EQU	0FD78H
  29:	FDFE          	INTREN         	EQU	0FDFEH
  30:	FE79          	RLDROM         	EQU	0FE79H
  31:	FCE7          	BBMUL16        	EQU	0FCE7H
  32:	FC00          	SYSCOM         	EQU	0FC00H
  33:	FE84          	UASTAV         	EQU	0FE84H
  34:	FE19          	SYTIMR         	EQU	0FE19H
  35:	FC33          	SCONST         	EQU	0FC33H
  36:	FC1B          	VCONST         	EQU	0FC1BH
  37:	FC39          	BBU0INI        	EQU	0FC39H
  38:	FC51          	BBU1INI        	EQU	0FC51H
  39:	FC87          	BBFREAD        	EQU	0FC87H
  40:	FD23          	BBEIDCK        	EQU	0FD23H
  41:	FD0B          	BBHDGEO        	EQU	0FD0BH
  42:	FEB4          	BBSTACK        	EQU	0FEB4H
  43:	FC81          	BBFHOME        	EQU	0FC81H
  44:	FD94          	BBCONIN        	EQU	0FD94H
  45:	FC27          	CRDUREG        	EQU	0FC27H
  46:	FFF0          	SINTVEC        	EQU	0FFF0H
  47:	FEB4          	SYSCMLO        	EQU	0FEB4H
  48:	FE22          	VOIDISR        	EQU	0FE22H
  49:	FC9F          	BBSTTIM        	EQU	0FC9FH
  50:	FDAA          	BBCONST        	EQU	0FDAAH
  51:	FC27          	SCONOUT        	EQU	0FC27H
  52:	FC0F          	VCONOUT        	EQU	0FC0FH
  53:	FCED          	BBOFFCAL       	EQU	0FCEDH
  54:	FC57          	BBINICTC       	EQU	0FC57H
  55:	FE90          	BBSTBASE       	EQU	0FE90H
  56:	FC5D          	BBRESCTC       	EQU	0FC5DH
  57:	FCA5          	BBRDTIME       	EQU	0FCA5H
  58:	FCC3          	BBCPTIME       	EQU	0FCC3H
  59:	FD5A          	BBCALRET       	EQU	0FD5AH
  60:	FCB7          	BBDMASET       	EQU	0FCB7H
  61:	FC00          	BBJTOBNK       	EQU	0FC00H
  62:	FCBD          	BBDSKSEL       	EQU	0FCBDH
  63:	FCF3          	BBHDINIT       	EQU	0FCF3H
  64:	FCB1          	BBSECSET       	EQU	0FCB1H
  65:	FD11          	BBHDBOOT       	EQU	0FD11H
  66:	FC69          	BBUPLCHR       	EQU	0FC69H
  67:	FC99          	BBPRNCHR       	EQU	0FC99H
  68:	FCCF          	BBVCPMBT       	EQU	0FCCFH
  69:	FC93          	BBFLOPIO       	EQU	0FC93H
  70:	FD1D          	BBEPMNGR       	EQU	0FD1DH
  71:	FCD5          	BBSIDSET       	EQU	0FCD5H
  72:	FD17          	BBLDPART       	EQU	0FD17H
  73:	FC75          	BBRDVDSK       	EQU	0FC75H
  74:	FC8D          	BBFWRITE       	EQU	0FC8DH
  75:	FCC9          	BBCPBOOT       	EQU	0FCC9H
  76:	FC21          	BBCURSET       	EQU	0FC21H
  77:	FCAB          	BBTRKSET       	EQU	0FCABH
  78:	FC7B          	BBWRVDSK       	EQU	0FC7BH
  79:	FD9F          	BBCONOUT       	EQU	0FD9FH
  80:	FCF9          	BBDRIVEID      	EQU	0FCF9H
  81:	FC63          	BBPSNDBLK      	EQU	0FC63H
  82:	FC03          	BBCRTCINI      	EQU	0FC03H
  83:	FC6F          	BBPRCVBLK      	EQU	0FC6FH
  84:	FC09          	BBCRTFILL      	EQU	0FC09H
  85:	FCDB          	BBFDRVSEL      	EQU	0FCDBH
  86:			;****** EOF ***
  87:			
**** format.asm ****
  19:			include Common.inc.asm
**** Common.inc.asm ****
   1:			;
   2:			;=======================================================================
   3:			;
   4:			; Modular Z80 DarkStar (NE Z80) SysBios
   5:			;
   6:			;=======================================================================
   7:			;
   8:			; Original code:
   9:			; Z80 Nuova Elettronica Monitor 390 su eprom 2532 (4k)
  10:			;
  11:			; Disassembled and reconstructed by
  12:			; Piergiorgio Betti <pbetti@lpconsul.net> on 2005 01 26
  13:			;
  14:			; Latest non modular BIOS is DARKSTAR-MONITOR-0.9.0.asm
  15:			; dated 20140531
  16:			; - Following addition of MultiF-Board doing complete rewrite of the
  17:			;   monitor/BIOS has been started.
  18:			;   Major goals:
  19:			;   o Modularization: Now monitor can grow up to 256kb instead of 4kb
  20:			;     :-)
  21:			;   o Specialized images fitted in memory page (4kb) or multiples
  22:			;   o Full support for new hardware
  23:			;   o I/O rewrite for MODE 2 interrupts
  24:			;   Minor goals:
  25:			;   o Full code clean-up & reoarganization
  26:			; ---------------------------------------------------------------------
  27:			; Revisions:
  28:			; 20140905 - Modified hexadecimal constants to 0xxH format to widely
  29:			;            accepeted by different assemblers
  30:			; ---------------------------------------------------------------------
  31:			
  32:			
  33:			; ---------------------------------------------------------------------
  34:			; SYSBIOS
  35:			;
  36:			; This is the BIOS non-resident portion of the new (banked)
  37:			; BIOS/Monitor for the NE Z80 (aka DarkStar)
  38:			;
  39:			; ---------------------------------------------------------------------
  40:			;
  41:			; Full BIOS memory scheme:
  42:			;
  43:			;	+-----------------+
  44:			;	+    SysCommon    +   <-- Resident portion. Common to all images
  45:			;	+   FC00 - FFFF   +
  46:			;	+-----------------+
  47:			;	+-----------------+   +-----------------+   +-----------------+
  48:			;	+     SysBios     +   +   BootMonitor   +   +     [Other]     +
  49:			;	+   F000 - FBFF   +   +   F000 - FBFF   +   +   F000 - FBFF   +
  50:			;	+-----------------+   +-----------------+   +-----------------+
  51:			;
  52:			;	         ^                     ^                     ^
  53:			;	         |                     |                     |
  54:			;	         ---------------------------------------------
  55:			;	                      Variable section
  56:			;
  57:			; The above are always assembled at ORG F000 and linked and allocated
  58:			; in the EEPROM in this way:
  59:			;
  60:			;	+-----------------+
  61:			;	+    SysCommon    +
  62:			;	+   FC00 - FFFF   +
  63:			;	+     SysBios     +     <-- EEPROM page 1 ($C1000)
  64:			;	+   F000 - FBFF   +
  65:			;	+-----------------+
  66:			;	+-----------------+
  67:			;	+    SysCommon    +
  68:			;	+   FC00 - FFFF   +
  69:			;	+   BootMonitor   +     <-- EEPROM page 0 ($C0000)
  70:			;	+   F000 - FBFF   +
  71:			;	+-----------------+
  72:			;
  73:			; ---------------------------------------------------------------------
  74:			;
  75:			; Define which assembler we are using
  76:			;
  77:			
  78:			; PASMO	EQU	1
  79:	0001          	MZMAC	EQU	1
  80:			; ZMAC	EQU	1			; ZMAC Z80 assembler, not Linux/Unix version
  81:			
  82:			; ... only one at a time can be active (1) ...
  83:			
  84:			;
  85:			; Monitor version numbers (major.minor)
  86:			;
  87:	0033          	MONMAJ		EQU	'3'
  88:	0032          	MONMIN		EQU	'2'
  89:			
  90:			;
  91:			; Buffers addresses labels
  92:			;
  93:			
  94:			; -- Global --
  95:	0003          	IOBYTE		EQU	0003H		; byte: Intel IOBYTE (CP/M 2.2 only)
  96:	0004          	CDISK		EQU	0004H		; byte: Last logged drive (CP/M 2.2 only)
  97:	0006          	BTPASIZ		EQU	0006H		; word: size of tpa + 1
  98:			;
  99:			; -- Private --
 100:	000B          	HMEMPAG		EQU	000BH		; byte: highest ram page
 101:	000C          	BBCBANK		EQU	000CH		; byte: current bank
 102:	000D          	BBCSTCK		EQU	000DH		; word: current stack
 103:					;
 104:	004F          	PRVTOP		EQU	004FH		; top of private area storage
 105:	004F          	COLBUF		EQU	PRVTOP		; byte:
 106:	004E          	DSELBF		EQU	COLBUF-1	; byte: floppy drive select status
 107:								; - bits: 0 = drive 0
 108:								; - bits: 1 = drive 1
 109:								; - bits: 2 = drive 2
 110:								; - bits: 3 = drive 3
 111:								; - bits: 4 = unused
 112:								; - bits: 5 = head select
 113:								; - bits: 6 = motor on (disabled by jumper)
 114:								; - bits: 7 = unused
 115:	004D          	KBDBYTE		EQU	DSELBF-1	; byte: store keyboard input
 116:	004C          	MIOBYTE		EQU	KBDBYTE-1	; byte:
 117:								; - bits: 0: 0 = floppy write		1 = floppy read
 118:								;         1: 0 = no ctrl on keypress	1 = ctrl on keypress
 119:								;         2: 0 = scroll			1 = no scroll
 120:								;         3: 0 = accept lowercase	1 = convert to uppercase
 121:								;         4: 0 = destr. bkspace		1 = non destr. bkspace
 122:								;         5: 0 = console out		1 = serial out
 123:								;         6: 0 = disp. all chars	1 = obscure non punct.
 124:								;         7: 0 = ctrl chr set 1		1 = ctrl chr set 2
 125:	004B          	TMPBYTE		EQU	MIOBYTE-1	; byte: transients flags
 126:								; - bits: 0: 0 = high in cursor addressing
 127:								;         1: 0 = ESC catched by ANSI driver
 128:								;         2: 0 = CSI catched by ANSI driver
 129:								;         3: 0 = Two byte code ESC seq. from serial
 130:								;         4: 0 = Plain serial i/o (disable ANSI driver)
 131:								;         5: 0 = store interrupt status (on/off)
 132:								;         6: 0 = floppy home on err	1 = no home on err
 133:								;         7: 0 = unlock LBA free addressing (unpartitioned)
 134:	004A          	CURSSHP		EQU	TMPBYTE-1	; cursor shape
 135:	0048          	CURPBUF		EQU	CURSSHP-2	; word: cursor position
 136:	0046          	FTRKBUF		EQU	CURPBUF-2	; word: track # for i/o (0 - 65535)
 137:	0045          	FDRVBUF		EQU	FTRKBUF-1	; byte: drive number for i/0 (0 - 15)
 138:	0043          	FSECBUF		EQU	FDRVBUF-2	; word: sector # for i/o (1 .. 65535)
 139:	0041          	FRDPBUF		EQU	FSECBUF-2	; word: dma address for i/o
 140:	003F          	FSEKBUF		EQU	FRDPBUF-2	; word: current track number for drive A/B
 141:	003E          	RAM3BUF		EQU	FSEKBUF-1	; byte:
 142:	003D          	RAM2BUF		EQU	RAM3BUF-1	; byte:
 143:	003C          	RAM1BUF		EQU	RAM2BUF-1	; byte:
 144:	003B          	RAM0BUF		EQU	RAM1BUF-1	; byte:
 145:	003A          	RST7SP3		EQU	003AH		; keep clear area of RST38 (RST7)
 146:	0039          	RST7SP2		EQU	0039H
 147:	0038          	RST7SP1		EQU	0038H
 148:	0030          	VDSKBUF		EQU	RST7SP1-8	; table: 8 bytes command structure buffer
 149:	002E          	APPBUF		EQU	VDSKBUF-2	; word: generic buffer
 150:	002D          	COPSYS		EQU	APPBUF-1	; Op system type for partition selection
 151:	002C          	UART0BR		EQU	COPSYS-1	; UART 0 baudrate
 152:	002B          	UART1BR		EQU	UART0BR-1	; UART 1 baudrate
 153:	002A          	CTC0TC		EQU	UART1BR-1	; CTC channel 0 time constant
 154:	0029          	CTC1TC		EQU	CTC0TC-1	; CTC channel 1 time constant
 155:	0028          	TIMRCON		EQU	CTC1TC-1	; timer buf
 156:	0027          	CNFBYTE		EQU	TIMRCON-1	; config byte
 157:								; - bits: 0: 0 = UART1 intr disabled	1 = RST8 redir UART1
 158:								;         1: 0 = unused/reserved
 159:								;         2: 0 = unused/reserved
 160:								;         3: 0 = unused/reserved
 161:								;         4: 0 = unused/reserved
 162:								;         5: 0 = unused/reserved
 163:								;         6: 0 = unused/reserved
 164:								;         7: 0 = unused/reserved
 165:	000F          	FIFOSTO		EQU	000FH		; fifo queues storage start
 166:	0008          	FIFSIZE		EQU	8		; fifo queue lenght
 167:	000B          	FIFBLOK		EQU	11		; fifo queue size
 168:	000F          	FIFOU0		EQU	FIFOSTO		; uart 0 queue (alternate console)
 169:	001A          	FIFOKB		EQU	FIFOU0+FIFBLOK	; keyboard queue
 170:	0025          	FIFOEND		EQU	FIFOKB+FIFBLOK	; fifo blocks end
 171:			;
 172:	3000          	BLDOFFS		EQU	3000H		; place for disk bootloader
 173:			
 174:			;
 175:			; Some commodity equs
 176:			;
 177:	000D          	CR		EQU	0DH		; ascii CR & LF
 178:	000A          	LF		EQU	0AH
 179:	000C          	FF		EQU	0CH		; FORM FEED (clear screen)
 180:	001B          	ESC		EQU	1BH		; ESCape
 181:	FFFF          	TRUE		EQU	-1
 182:	0000          	FALSE		EQU	0
 183:	0100          	TPA		EQU	0100H		; TPA base address (for CP/M)
 184:			
 185:			;
 186:			; Modules equs
 187:			;
 188:				; delay
 189:	00F6          	MSCNT		EQU	246
 190:				; mmu
 191:	000D          	MMUTSTPAGE	EQU	0DH		; logical page used for sizing
 192:	D000          	MMUTSTADDR	EQU	MMUTSTPAGE<<12	; logical page used for sizing
 193:			
 194:			; Conventionally all bios/monitor images start at $F000.
 195:			; Except for special cases all code is copied to ram @ $F000.
 196:			; In this case eeprom page 0 is directly mapped into logical space
 197:			; by hardware so we can initialize the system at cold boot.
 198:			;
 199:			; We assume to initialize MMU as follow:
 200:			;
 201:			; +--------+
 202:			; |  F000  |	-> $C0000  eeprom page 0
 203:			; +--------+
 204:			; +--------+
 205:			; |  EFFF  |
 206:			; +--------+
 207:			;     ...       -> $00000 to $0EFFF ram
 208:			; +--------+
 209:			; |  0000  |
 210:			; +--------+
 211:			;
 212:			
 213:			
 214:			; include	modules/hwequs.inc.asm
 215:			; Hardware equates
 216:			; ---------------------------------------------------------------------
 217:			
 218:			; ---------------------------------------------------------------------
 219:			; LX529 VIDEO BOARD:
 220:			; ---------------------------------------------------------------------
 221:	0080          	CRTBASE		EQU	80H
 222:				; RAM0 for ascii chars & semi6. Combined with RAM1 and RAM2 for graphics
 223:	0080          	CRTRAM0DAT	EQU	CRTBASE		; RAM0 access: PIO0 port A data register
 224:	0082          	CRTRAM0CNT	EQU	CRTBASE+2	; RAM0 access: PIO0 port A control register
 225:				; Printer port
 226:	0081          	CRTPRNTDAT	EQU	CRTBASE+1	; PRINTER (output): PIO0 port B data register
 227:	0083          	CRTPRNTCNT	EQU	CRTBASE+3	; PRINTER (output): PIO0 port B control register
 228:								; STROBE is generated by hardware
 229:				; RAM1 for graphics. (pixel index by RAM0+RAM1+RAM2)
 230:	0084          	CRTRAM1DAT	EQU	CRTBASE+4	; RAM1 access: PIO1 port A data register
 231:	0086          	CRTRAM1CNT	EQU	CRTBASE+6	; RAM1 access: PIO1 port A control register
 232:				; Keyboard port (negated). Bit 7 is for strobe
 233:	0085          	CRTKEYBDAT	EQU	CRTBASE+5	; KEYBOARD (input): PIO1 port B data register
 234:	0087          	CRTKEYBCNT	EQU	CRTBASE+7	; KEYBOARD (input): PIO1 port B control register
 235:	0007          	KEYBSTRBBIT	EQU	7		; Strobe bit
 236:				; RAM2 for graphics. (pixel index by RAM0+RAM1+RAM2)
 237:	0088          	CRTRAM2DAT	EQU	CRTBASE+8	; RAM2 access: PIO2 port A data register
 238:	008A          	CRTRAM2CNT	EQU	CRTBASE+10	; RAM2 access: PIO2 port A control register
 239:				; Service/User port
 240:	0089          	CRTSERVDAT	EQU	CRTBASE+9	; Service (i/o): PIO2 port B data register
 241:	008B          	CRTSERVCNT	EQU	CRTBASE+11	; Service (i/o): PIO2 port B control register
 242:	0000          	PRNTBUSYBIT	EQU	0		; Printer BUSY bit		(in)	1
 243:	0001          	CRTWIDTHBIT	EQU	1		; Set 40/80 chars per line	(out)	0
 244:	0002          	PIO2BIT2	EQU	2		; user 1 (input)		(in)	1
 245:	0003          	PIO2BIT3	EQU	3		; user 2 (input)		(in)	1
 246:	0004          	PIO2BIT4	EQU	4		; user 3 (input)		(in)	1
 247:	0005          	CLKSCLK		EQU	5		; DS1320 clock line		(out)	0
 248:	0006          	CLKIO		EQU	6		; DS1320 I/O line		(i/o)	1
 249:	0007          	CLKRST		EQU	7		; DS1320 RST line		(out)	0
 250:				; normal set for PIO2 (msb) 01011101 (lsb) that is hex $5D
 251:								; Other bits available to user
 252:				; RAM3 control chars/graphics attributes
 253:	008E          	CRTRAM3PORT	EQU	CRTBASE+14	; RAM3 port
 254:	0000          	CRTBLINKBIT	EQU	0		; Blink
 255:	0001          	CRTREVRSBIT	EQU	1		; Reverse
 256:	0002          	CRTUNDERBIT	EQU	2		; Underline
 257:	0003          	CRTHILITBIT	EQU	3		; Highlight
 258:	0004          	CRTMODEBIT	EQU	4		; ASCII/GRAPHIC mode
 259:				; Beeper port
 260:	008F          	CRTBEEPPORT	EQU	CRTBASE+15	; Beeper port
 261:				; 6545 CRT controller ports
 262:	008C          	CRT6545ADST	EQU	CRTBASE+12	; Address & Status register
 263:	008D          	CRT6545DATA	EQU	CRTBASE+13	; Data register
 264:				; Cursor modes
 265:	0040          	BLISLOWBLOK	EQU	40H		; Blink, slow, block
 266:	004A          	BLISLOWLINE	EQU	4AH		; Blink, slow, line
 267:	0060          	BLIFASTBLOK	EQU	60H		; Blink, fast, block
 268:	006A          	BLIFASTLINE	EQU	6AH		; Blink, fast, line
 269:	0020          	CURSOROFF	EQU	20H		; Off
 270:	0000          	FIXBLOCK	EQU	00H		; Fixed, block
 271:	000A          	CURSORON	EQU	0AH		; On
 272:			
 273:			; ---------------------------------------------------------------------
 274:			; LX390 FDC CONTROLLER:
 275:			; ---------------------------------------------------------------------
 276:	00D0          	FDCBASE		EQU	0D0H
 277:	00D0          	FDCCMDSTATR	EQU	FDCBASE		; Command and status register
 278:	00D1          	FDCTRAKREG	EQU	FDCBASE+1	; Track register
 279:	00D2          	FDCSECTREG	EQU	FDCBASE+2	; Sector register
 280:	00D7          	FDCDATAREG	EQU	FDCBASE+7	; Data register *** Verificare che sia $d7
 281:	00D6          	FDCDRVRCNT	EQU	FDCBASE+6	; Driver select/control register
 282:			;
 283:	0007          	FDCRESTC	EQU	007H		; 1771 restore (seek to trak 0) cmd
 284:	0017          	FDCSEEKC	EQU	017H		; seek cmd
 285:	0088          	FDCREADC	EQU	088H		; read cmd
 286:	00A8          	FDCWRITC	EQU	0A8H		; write cmd
 287:			;
 288:			; ---------------------------------------------------------------------
 289:			; LX389: PARALLEL INTERFACE
 290:			; ---------------------------------------------------------------------
 291:			; alternate printer port
 292:	0003          	ALTPRNPRT	EQU	03H
 293:			;
 294:			; parallel port PC link
 295:	0003          	PPDATAP		EQU	03H		; Data port
 296:	0002          	PPCNTRP		EQU	02H		; Control port
 297:	0000          	PPSTROB		EQU	0		; Strobe bit
 298:	0001          	PPAKSTB		EQU	1		; Acknowledge/Stop bit
 299:			;
 300:	0000          	PPDINI		EQU	00H		; 00000000 Dnl Init byte
 301:	0004          	PPDRDY		EQU	04H		; 00000100 Dnl Ready
 302:	0006          	PPDSTP		EQU	06H		; 00000110 Dnl Stop
 303:	0002          	PPDOKG		EQU	02H		; 00000010 Dnl Ok Go
 304:	0001          	PPUINI		EQU	01H		; 00000001 Upl Init byte
 305:	0005          	PPURDY		EQU	05H		; 00000101 Upl Ready
 306:	0007          	PPUACK		EQU	07H		; 00000111 Upl Acknowledge
 307:	0003          	PPUOKG		EQU	03H		; 00000011 Upl Ok Go
 308:			;
 309:			; virtual disks (PC-linked over parallel port)
 310:	0000          	VDRDSEC		EQU	0		; read sector command
 311:	0001          	VDWRSEC		EQU	1		; write sector command
 312:	000A          	VDBUFSZ		EQU	10		; 9 bytes block
 313:			; ---------------------------------------------------------------------
 314:			; MULTF-BOARD: MMU, IDE, SERIAL, CTC
 315:			; ---------------------------------------------------------------------
 316:			; -- I/O --
 317:	0020          	MMUPORT		EQU	20H
 318:	0021          	MENAPRT		EQU	21H
 319:			; -- Map --
 320:	00C0          	EEPAGE0		EQU	0C0H		; page 0 of eeprom
 321:	F000          	EEPSTA		EQU	0F000H		; eeprom location after MMU reset
 322:	00EF          	MMTPAPAG	EQU	(EEPSTA>>8)-1	; TPA top page (256 bytes pages)
 323:	00FF          	IMTPAG		EQU	0FFH		; eeprom page with image table
 324:	0400          	IMTSIZ		EQU	1024		; size
 325:	E000          	RAMTBL		EQU	0E000H		; ram table location
 326:	0030          	TBLBLK		EQU	48		; block size
 327:	0014          	MAXBLK		EQU	20		; max images
 328:	03C0          	RTBSIZ		EQU	TBLBLK * MAXBLK	; real table size
 329:								; A table block is:
 330:	0008          	TNAMELEN	EQU	8		;	name		: 8 bytes
 331:	0002          	TPAGELEN	EQU	2		;	page offset	: 2 bytes
 332:	0004          	TIADDRLEN	EQU	4		;	image address	: 4 bytes
 333:	0004          	TSIZELEN	EQU	4		;	image size	: 4 bytes
 334:	0014          	TDESCLEN	EQU	20		;	description	: 20 bytes
 335:			; -- IDE --
 336:	00E0          	IDEPORTA	EQU	0E0H		;lower 8 bits of IDE interface
 337:	00E1          	IDEPORTB	EQU	0E1H		;upper 8 bits of IDE interface
 338:	00E2          	IDEPORTC	EQU	0E2H		;control lines for IDE interface
 339:	00E3          	IDEPORTCTRL	EQU	0E3H		;8255 configuration port
 340:			
 341:	0092          	READCFG8255	EQU	10010010b	;Set 8255 IDEportC to output, IDEportA/B input
 342:	0080          	WRITECFG8255	EQU	10000000b	;Set all three 8255 ports to output mode
 343:			;IDE control lines for use with IDEportC.
 344:	0001          	IDEA0LINE	EQU	01H		;direct from 8255 to IDE interface
 345:	0002          	IDEA1LINE	EQU	02H		;direct from 8255 to IDE interface
 346:	0004          	IDEA2LINE	EQU	04H		;direct from 8255 to IDE interface
 347:	0008          	IDECS0LINE	EQU	08H		;inverter between 8255 and IDE interface
 348:	0010          	IDECS1LINE	EQU	10H		;inverter between 8255 and IDE interface
 349:	0020          	IDEWRLINE	EQU	20H		;inverter between 8255 and IDE interface
 350:	0040          	IDERDLINE	EQU	40H		;inverter between 8255 and IDE interface
 351:	0080          	IDERSTLINE	EQU	80H		;inverter between 8255 and IDE interface
 352:			;Symbolic constants for the IDE Drive registers
 353:	0008          	REGDATA		EQU	IDECS0LINE
 354:	0009          	REGERR		EQU	IDECS0LINE + IDEA0LINE
 355:	000A          	REGSECCNT	EQU	IDECS0LINE + IDEA1LINE
 356:	000B          	REGSECTOR	EQU	IDECS0LINE + IDEA1LINE + IDEA0LINE
 357:	000C          	REGCYLLSB	EQU	IDECS0LINE + IDEA2LINE
 358:	000D          	REGCYLMSB	EQU	IDECS0LINE + IDEA2LINE + IDEA0LINE
 359:	000E          	REGSHD		EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE		;(0EH)
 360:	000F          	REGCOMMAND	EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE + IDEA0LINE	;(0FH)
 361:	000F          	REGSTATUS	EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE + IDEA0LINE
 362:	0016          	REGCONTROL	EQU	IDECS1LINE + IDEA2LINE + IDEA1LINE
 363:	0016          	REGASTATUS	EQU	IDECS1LINE + IDEA2LINE + IDEA1LINE
 364:			;IDE Command Constants.
 365:	0010          	CMDRECAL	EQU	010H
 366:	0020          	CMDREAD		EQU	020H
 367:	0030          	CMDWRITE	EQU	030H
 368:	0091          	CMDINIT		EQU	091H
 369:	00EC          	CMDID		EQU	0ECH
 370:	00E0          	CMDSPINDOWN	EQU	0E0H
 371:	00E1          	CMDSPINUP	EQU	0E1H
 372:			; -- 16C550 UARTS --
 373:	00C0          	UART0BASE	EQU	0C0H		; Port base address for 0
 374:	00C8          	UART1BASE	EQU	0C8H		; Port base address for 1
 375:	00C0          	UART0		EQU	UART0BASE	; Select UART 0
 376:	00C8          	UART1		EQU	UART1BASE	; Select UART 1
 377:	0000          	R0RXTX		EQU	0		; (r/w) RXD/TXD Transmit/Receive Buffer
 378:	0000          	R0BRDL		EQU	0		; (r/w) DLL  if bit 7 of LCR is set: Baud Rate Divisor LSB
 379:	0001          	R1IER		EQU	1		; (r/w) IER - Interrupt Enable Register
 380:	0001          	R1BRDM		EQU	1		; (r/w) DLM if bit 7 of LCR is set: Baud Rate Divisor MSB
 381:	0002          	R2IIR		EQU	2		; (r)   IIR - Interrupt Identification Register
 382:	0002          	R2FCR		EQU	2		; (w)   FCR - FIFO Control Register
 383:	0003          	R3LCR		EQU	3		; (r/w) LCR - Line Control Register
 384:	0004          	R4MCR		EQU	4		; (r/w) MCR - Modem Control Register
 385:	0005          	R5LSR		EQU	5		; (r)   LSR - Line Status Register
 386:	0006          	R6MSR		EQU	6		; (r)   MSR - Modem Status Register
 387:	0007          	R7SPR		EQU	7		; (r/w) SPR - Scratch Pad Register
 388:				; speeds:
 389:	0060          	UART1200	EQU	96		; = 1,843,200 / ( 16 x 1200 )
 390:	0030          	UART2400	EQU	48		; = 1,843,200 / ( 16 x 2400 )
 391:	0018          	UART4800	EQU	24		; = 1,843,200 / ( 16 x 4800 )
 392:	000C          	UART9600	EQU	12		; = 1,843,200 / ( 16 x 9600 )
 393:	0006          	UART19K2	EQU	06		; = 1,843,200 / ( 16 x 19,200 )
 394:	0003          	UART38K4	EQU	03		; = 1,843,200 / ( 16 x 38,400 )
 395:	0002          	UART57K6	EQU	02		; = 1,843,200 / ( 16 x 57,600 )
 396:	0001          	UART115K2	EQU	01		; = 1,843,200 / ( 16 x 115,200 )
 397:			
 398:	0006          	U0DEFSPEED	EQU	UART19K2	; UART 0 default speed
 399:	000C          	U1DEFSPEED	EQU	UART9600	; UART 1 default speed
 400:			; -- Z80CTC --
 401:	00E8          	CTCBASE		EQU	0E8H
 402:	00E8          	CTCCHAN0	EQU	CTCBASE+0	; Channel 1 - Free
 403:	00E9          	CTCCHAN1	EQU	CTCBASE+1	; Channel 2 - System Timer
 404:	00EA          	CTCCHAN2	EQU	CTCBASE+2	; Channel 3 - UART 1 Interrupt
 405:	00EB          	CTCCHAN3	EQU	CTCBASE+3	; Channel 4 - UART 0 Interrupt
 406:	0020          	CTC0TCHI	EQU	32		; hi speed chan. 0 tc: 4Mhz / 256 / 32 = 488.28 Hz
 407:	0005          	CTC1TC100HZ	EQU	5		; lo speed chan. 1 tc: 488.28 Hz / 5 = ~ 97.6 Hz
 408:	000A          	CTC1TC50HZ	EQU	10		; lo speed chan. 1 tc: 488.28 Hz / 10 = ~ 48.8 Hz
 409:	0013          	CTC1TC25HZ	EQU	19		; lo speed chan. 1 tc: 488.28 Hz / 19 = ~ 25 Hz
 410:	0030          	CTC1TC10HZ	EQU	48		; lo speed chan. 1 tc: 488.28 Hz / 48 = ~ 10 Hz
 411:	00F4          	CTC1TC2HZ	EQU	244		; lo speed chan. 1 tc: 488.28 Hz / 244 = ~ 2 Hz
 412:	0013          	SYSHERTZ	EQU	CTC1TC25HZ	; System timer hertz
 413:			; -- EEPROM --
 414:	0001          	EEP29EE		EQU	01H		; type 29EE020
 415:	0002          	EEP29XE		EQU	02H		; type 29LE020 or 29VE020
 416:	0004          	EEP29C		EQU	04H		; type 29C020
 417:	0008          	EEPUNSUPP	EQU	08H		; unsupported
 418:	0010          	EEPROGLOCK	EQU	10H		; programming locked
 419:				;
 420:	0080          	EERINEPROM	EQU	80H		; tried to program eeprom running inside it
 421:			
 422:			;
 423:			; MMU organization
 424:			;
 425:			; MMU manage 16 4kb pages in Z80 address space (logical)
 426:			; It can assign any of 256 4k pages (physical) from its
 427:			; 1Mb address space.
 428:			;
 429:			; To load phisycal page XXh to logical page (in CPU address space) Y,
 430:			; you should consider that MMU is at a fixed address 20h and that
 431:			; logical 4K page Y is derived in the MMU by the usage of A12,A13,A14
 432:			; and A15 address lines during an I/O instruction.
 433:			;
 434:			; So to address phys. ram page 00h at the top of logical space page Fh
 435:			; you need to have Fh * on top address lines * because this address
 436:			; is the index to MMU page.
 437:			;
 438:			; So:
 439:			;
 440:			; 	LD	A,00h		<--- phis. page number	00xxxh (4k page)
 441:			; 	LD	B,F0h		<--- log. page number 	 Fxxxh (cpu page)
 442:			; 	LD	C,20h		<--- MMU I/O address
 443:			; 	OUT	(C),A
 444:			; 	RET
 445:			;
 446:			; The OUT instruction place:
 447:			; A on data lines D0-D7
 448:			; Fh (from B register) on A12-A15
 449:			; on port 20h (C register)
 450:			;
 451:			;
 452:			; Memory is organized as follow:
 453:			;
 454:			;	Slot 1	-> RAM	  -> 512k from 00000h to 7ffffh (mandatory)
 455:			;	Slot 2	-> RAM	  -> 128k from 80000h to 9ffffh (option 1)
 456:			;	Slot 2	-> RAM    -> 256k from 80000h to bffffh (option 2)
 457:			;	Slot 3	-> EEPROM -> 256k from c0000h to fffffh (mandatory)
 458:			;
 459:			
 460:			
 461:			;-------------------------------------
 462:			; Production / Testing
 463:			
 464:	FFFF          	BBDEBUG	EQU	TRUE
 465:			
 466:			
 467:			;-------------------------------------
 468:			; Segments, pages locations
 469:			
 470:	FFFF          	IF	BBDEBUG
 471:			
 472:	0004          	BBIMGP	EQU	04H		; Image location (DEBUG)
 473:	000E          	BBAPPP	EQU	0EH
 474:	000F          	BBPAG	EQU	0FH		; Base page location
 475:			
 476:			ELSE
 482:			ENDIF
 483:			
 484:	000D          	TRNPAG	EQU	0DH		; Page used for transient MMU ops
 485:	F000          	BBBASE	EQU	BBPAG << 12	; non resident base address
 486:	FC00          	BBCOMN	EQU	BBBASE + 0C00H	; resident portion address
 487:			
 488:	F000          	SYSBASE EQU	BBBASE		; use this to have 60K TPA
 489:			; SYSBASE EQU	BBCOMN		; use this to have 63K TPA
 490:			
 491:			;-------------------------------------
**** format.asm ****
  20:			
  21:	000D          	CR	EQU	$0D
  22:	000A          	LF	EQU	$0A
  23:	0007          	BEL	EQU	$07
  24:	005C          	FCB1	EQU	$005C			; DEFAULT FCB STRUCTURE
  25:	0100          	TPA	EQU	$0100
  26:				;
  27:	0100          		ORG	TPA
  28:			
  29:	0100  C3D802  	GOFMT:	JP	FORMAT			; 000100 the beginning
  30:				;
  31:	0103 .. 0182 00	SCRTCH:	DEFS	128			; local stack area
  32:	0183          	SPAREA	EQU	$
  33:				;
  34:				; include routines to print ascii values
  35:			include ../ASM/bit2040.asm
**** ../ASM/bit2040.asm ****
   1:			;;
   2:			;; Routines for binary to decimal conversion
   3:			;;
   4:			;; (C) Piergiorgio Betti <pbetti@lpconsul.net> - 2006
   5:			;;
   6:			;; The active part is taken from:
   7:			;; David Barrow - Assembler routines for the Z80
   8:			;; CENTURY COMMUNICATIONS LTD - ISBN 0 7126 0506 1
   9:			;;
  10:			
  11:			
  12:			;;
  13:			;; BIN2A8 - Convert an 8 bit value to ASCII
  14:			;;
  15:			;; INPUT	C = Value to be converted
  16:			;; OUTPUT	DE = Converted string address
  17:			;
  18:	0183  E5      	BIN2A8: PUSH	HL
  19:	0184  F5      		PUSH	AF
  20:	0185  0600    		LD	B,0
  21:	0187  ED43B301		LD	(IVAL16),BC
  22:	018B  21B301  		LD	HL,IVAL16
  23:	018E  11B501  		LD	DE,OVAL16
  24:	0191  3E01    		LD	A,1			; one byte conversion
  25:	0193  CDBD01  		CALL	LNGIBD
  26:	0196  11B501  		LD	DE,OVAL16
  27:	0199  F1      		POP	AF
  28:	019A  E1      		POP	HL
  29:	019B  C9      		RET
  30:				;
  31:			;;
  32:			;; BN2A16 - Convert a 16 bit value to ASCII
  33:			;;
  34:			;; INPUT	BC = Value to be converted
  35:			;; OUTPUT	DE = Converted string address
  36:			;
  37:	019C  E5      	BN2A16: PUSH	HL
  38:	019D  F5      		PUSH	AF
  39:	019E  ED43B301		LD	(IVAL16),BC
  40:	01A2  21B301  		LD	HL,IVAL16
  41:	01A5  11B501  		LD	DE,OVAL16
  42:	01A8  3E02    		LD	A,2			; two byte conversion
  43:	01AA  CDBD01  		CALL	LNGIBD
  44:	01AD  11B501  		LD	DE,OVAL16
  45:	01B0  F1      		POP	AF
  46:	01B1  E1      		POP	HL
  47:	01B2  C9      		RET
  48:				;
  49:			;; Generic storage
  50:			
  51:	01B3 .. 01B4 00	IVAL16:	DEFS	2
  52:	01B5 .. 01BA 00	OVAL16:	DEFS	6
  53:			
  54:			;;
  55:			;;
  56:			;; LNGIBD - Convert long integer of given precision to ASCII
  57:			;;
  58:			;; INPUT	HL addresses the first byte of the binary value
  59:			;;		which must be stored with the low order byte in
  60:			;;		lowest memory.
  61:			;;		DE addresses the first byte of the destination
  62:			;;		area which must be larger enough to accept the
  63:			;;		decimal result (2.42 * binary lenght + 1).
  64:			;;		A = binary byte lenght (1 to 255)
  65:			
  66:			;;
  67:	000A          	CVBASE	EQU	10		; CONVERSION BASE
  68:	01BB          	VPTR	EQU	HILO		; STORAGE AREA EQU
  69:			
  70:			
  71:	01BB .. 01BC 00	HILO:	DEFS	2		; STORAGE AREA
  72:			
  73:	01BD  4F      	LNGIBD:	LD	C,A
  74:	01BE  0600    		LD	B,0
  75:	01C0  2B      		DEC	HL
  76:	01C1  22BB01  		LD	(VPTR),HL
  77:	01C4  3EFF    		LD	A,-1
  78:	01C6  12      		LD	(DE),A
  79:	01C7  09      		ADD	HL,BC
  80:				;
  81:	01C8  7E      	NXTMSB:	LD	A,(HL)
  82:	01C9  B7      		OR	A
  83:	01CA  C2D901  		JP	NZ,MSBFND
  84:	01CD  2B      		DEC	HL
  85:	01CE  0D      		DEC	C
  86:	01CF  C2C801  		JP	NZ,NXTMSB
  87:				;
  88:	01D2  EB      		EX	DE,HL
  89:	01D3  3630    		LD	(HL),'0'
  90:	01D5  23      		INC	HL
  91:	01D6  3600    		LD	(HL),0
  92:	01D8  C9      		RET
  93:				;
  94:	01D9  47      	MSBFND:	LD	B,A
  95:	01DA  3E80    		LD	A,$80
  96:				;
  97:	01DC  B8      	NXTMSK:	CP	B
  98:	01DD  DAE701  		JP	C,MSKFND
  99:	01E0  CAE701  		JP	Z,MSKFND
 100:	01E3  0F      		RRCA
 101:	01E4  C3DC01  		JP	NXTMSK
 102:				;
 103:	01E7  47      	MSKFND:	LD	B,A
 104:	01E8  C5      		PUSH	BC
 105:	01E9  2ABB01  		LD	HL,(VPTR)
 106:	01EC  0600    		LD	B,0
 107:	01EE  09      		ADD	HL,BC
 108:	01EF  A6      		AND	(HL)
 109:	01F0  C6FF    		ADD	A,$FF
 110:	01F2  6B      		LD	L,E
 111:	01F3  62      		LD	H,D
 112:				;
 113:	01F4  7E      	NXTOPV:	LD	A,(HL)
 114:	01F5  3C      		INC	A
 115:	01F6  CA0802  		JP	Z,OPVDON
 116:	01F9  3D      		DEC	A
 117:	01FA  8F      		ADC	A,A
 118:				;
 119:	01FB  FE0A    		CP	CVBASE
 120:	01FD  DA0202  		JP	C,NOCOUL
 121:	0200  D60A    		SUB	CVBASE
 122:	0202  3F      	NOCOUL:	CCF
 123:				;
 124:	0203  77      		LD	(HL),A
 125:	0204  23      		INC	HL
 126:	0205  C3F401  		JP	NXTOPV
 127:				;
 128:	0208  D21002  	OPVDON:	JP	NC,EXTDON
 129:	020B  3601    		LD	(HL),1
 130:	020D  23      		INC	HL
 131:	020E  36FF    		LD	(HL),-1
 132:				;
 133:	0210  C1      	EXTDON:	POP	BC
 134:	0211  78      		LD	A,B
 135:	0212  0F      		RRCA
 136:	0213  D2E701  		JP	NC,MSKFND
 137:	0216  0D      		DEC	C
 138:	0217  C2E701  		JP	NZ,MSKFND
 139:				;
 140:				; REVERSE DIGIT ORDER. ADD ASCII DIGITS HI-NIBBLES
 141:	021A  3600    		LD	(HL),0
 142:				;
 143:	021C  2B      	NXTCNV:	DEC	HL
 144:	021D  7D      		LD	A,L
 145:	021E  93      		SUB	E
 146:	021F  7C      		LD	A,H
 147:	0220  9A      		SBC	A,D
 148:	0221  D8      		RET	C
 149:				;
 150:	0222  1A      		LD	A,(DE)
 151:	0223  F630    		OR	$30
 152:	0225  47      		LD	B,A
 153:	0226  7E      		LD	A,(HL)
 154:	0227  F630    		OR	$30
 155:	0229  70      		LD	(HL),B
 156:	022A  12      		LD	(DE),A
 157:				;
 158:	022B  13      		INC	DE
 159:	022C  C31C02  		JP	NXTCNV
 160:			
 161:			;-----------------------------------------------
**** format.asm ****
  36:				;;
  37:				; Here is the data to compose the track
  38:	022F  FFFFFFFF	FTRBEG:	DEFB	$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
	      FFFFFFFF
	      FFFF
  39:	0239  FFFFFFFF		DEFB	$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
	      FFFFFFFF
	      FFFF
  40:	0243  FFFFFFFF		DEFB	$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
	      FFFFFFFF
	      FFFF
  41:	024D  FFFFFFFF		DEFB	$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
	      FFFFFFFF
	      FFFF
  42:				;
  43:	0257  00000000	FTRBG2:	DEFB	$00,$00,$00,$00,$00,$00
	      0000
  44:	025D  FE      		DEFB	$FE					; addr mark
  45:	025E  00      	FITRKN:	DEFB	$00					; track #
  46:	025F  00      		DEFB	$00					;
  47:	0260  00      	FISECN:	DEFB	$00					; sector #
  48:	0261  00      	FISECL:	DEFB	$00					; sectro len.
  49:	0262  F7      		DEFB	$F7					; CRC mark
  50:	0263  FFFFFFFF		DEFB	$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
	      FFFFFFFF
	      FFFF
  51:	026D  FF      		DEFB	$FF
  52:	026E  00000000		DEFB	$00,$00,$00,$00,$00,$00
	      0000
  53:	0274  FB      		DEFB	$FB					; DATA addr mark (30 bytes)
  54:				;
  55:				;	sector data here...
  56:				;
  57:	0275  F7      	FIPOSE:	DEFB	$F7					; DATA CRC mark
  58:	0276  FFFFFFFF		DEFB	$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
	      FFFFFFFF
	      FFFF
  59:	0280  FFFFFFFF		DEFB	$FF,$FF,$FF,$FF				; 173 byte block (originally + 128 $e5)
  60:	0284  FFFFFFFF		DEFB	$FF,$FF,$FF,$FF,$FF,$FF
	      FFFF
  61:				;
  62:				; Disks format vector
  63:	028A          	DFTAB:	;DEFB	40,1,18,0		; 40 TRK SS	; 40 tracks formats
  64:				;DEFB	40,2,18,0		; 40 TRK DS	; removed...
  65:				;DEFB	80,1,18,0		; 80 TRK SS	; ... 80 tracks SS too
  66:	028A  50022100		DEFB	80,2,33,0		; 80 TRK DS 128 bytes 17 sec.
  67:	028E  50021501		DEFB	80,2,21,1		; 80 TRK DS 256 bytes 10 sec.
  68:	0292  50020C02		DEFB	80,2,12,2		; 80 TRK DS 512 bytes 6 sec.
  69:				;
  70:				;
  71:	0296          	CODBEG	EQU	$			; begin code...
  72:				;
  73:				; Show a zero terminated string
  74:	0296          	ZSDSPCL:				; 0239
  75:	0296  0E0D    		LD	C,CR			;
  76:	0298  CD9FFD  		CALL	BBCONOUT			; send CR
  77:	029B  0E0A    		LD	C,LF			;
  78:	029D  CD9FFD  		CALL	BBCONOUT			; send LF
  79:	02A0  7E      	ZSDSP:	LD	A,(HL)			; pick char pointed by HL
  80:	02A1  B7      		OR	A			; is the terminating NUL ?
  81:	02A2  C8      		RET	Z			; yes
  82:	02A3  E5      		PUSH	HL			; no
  83:	02A4  4F      		LD	C,A			;
  84:	02A5  CD9FFD  		CALL	BBCONOUT			; display it
  85:	02A8  E1      		POP	HL			;
  86:	02A9  23      		INC	HL			;
  87:	02AA  C3A002  		JP	ZSDSP			;
  88:				;
  89:				; this copy a decimal converted string in area
  90:				; pointed by HL
  91:	02AD  E5      	PLDECS:	PUSH	HL			; load HL on IY
  92:	02AE  FDE1    		POP	IY			;
  93:	02B0  21B501  		LD	HL,OVAL16		; result of conversion
  94:	02B3  7E      	PLDNXT:	LD	A,(HL)			; pick char pointed by HL
  95:	02B4  B7      		OR	A			; is the terminating NUL ?
  96:	02B5  C8      		RET	Z			; yes
  97:	02B6  FD7700  		LD	(IY+0),A		; digit copy
  98:	02B9  23      		INC	HL			; next locations
  99:	02BA  FD23    		INC	IY			;
 100:	02BC  C3B302  		JP	PLDNXT			;
 101:				; get user input
 102:	02BF          	GCHR:
 103:	02BF  CD94FD  		CALL	BBCONIN			; take from console
 104:	02C2  E67F    		AND	$7F			;
 105:	02C4  FE60    		CP	$60			;
 106:	02C6  FAD002  		JP	M,GCDSP			; verify alpha
 107:	02C9  FE7B    		CP	$7B			;
 108:	02CB  F2D002  		JP	P,GCDSP			;
 109:	02CE  CBAF    		RES	5,A			; convert to uppercase
 110:	02D0  C5      	GCDSP:	PUSH	BC			;
 111:	02D1  4F      		LD	C,A			;
 112:	02D2  CD9FFD  		CALL	BBCONOUT			;
 113:	02D5  79      		LD	A,C			;
 114:	02D6  C1      		POP	BC			;
 115:	02D7  C9      		RET				;
 116:			
 117:	02D8          	FORMAT:
 118:	02D8  318301  		LD	SP,SPAREA		; init stack
 119:	02DB  3E28    		LD	A,40			; 40 tracks by default
 120:	02DD  321607  		LD	(TNUMBF),A		;
 121:	02E0  3E01    		LD	A,1			; 1 side
 122:	02E2  321707  		LD	(TSIDES),A		;
 123:	02E5  216505  		LD	HL,MCHOI		; ask format
 124:	02E8  CDA002  		CALL	ZSDSP			;
 125:	02EB  CDBF02  	USEL:	CALL	GCHR			;
 126:	02EE  FE03    		CP	$03			; CTRL+C ?
 127:	02F0  CAD804  		JP	Z,EXIT			; exit
 128:	02F3  FE0D    		CP	CR			; return ?
 129:	02F5  CAD504  		JP	Z,EXNOS			; exit
 130:	02F8  D630    		SUB	'0'			; convert to binary
 131:	02FA  3D      		DEC	A			; adjust base
 132:	02FB  FE03    		CP	$03			; is in range 0-2
 133:	02FD  F2CF04  		JP	P,WRNGD			; no
 134:	0300  321D07  		LD	(TFRMT),A		; store user selection
 135:	0303  5F      		LD	E,A			; copy drive num on DE
 136:	0304  1600    		LD	D,0			;
 137:	0306  DD218A02		LD	IX,DFTAB		; load format parameter base
 138:	030A  DD19    		ADD	IX,DE			; for check
 139:	030C  DD19    		ADD	IX,DE			;
 140:	030E  DD19    		ADD	IX,DE			;
 141:	0310  DD19    		ADD	IX,DE			;
 142:	0312  DD4E00  		LD	C,(IX+0)		;
 143:	0315  CD8301  		CALL	BIN2A8			; convert tracks to decimal
 144:	0318  21A306  		LD	HL,MUSNT		;
 145:	031B  CDAD02  		CALL	PLDECS			;
 146:	031E  DD4E01  		LD	C,(IX+1)		;
 147:	0321  CD8301  		CALL	BIN2A8			; convert sides to decimal
 148:	0324  21AE06  		LD	HL,MUSSD		;
 149:	0327  CDAD02  		CALL	PLDECS			;
 150:	032A  DD7E03  		LD	A,(IX+3)		; sector len.
 151:	032D  FE00    		CP	0			; 128 ? ...
 152:	032F  2008    		JR	NZ,SL256		; no
 153:	0331  218000  		LD	HL,128			; yes
 154:	0334  221A07  		LD	(TSLEN),HL		; store
 155:	0337  1816    		JR	USHW
 156:	0339  FE01    	SL256:	CP	1			; 256 ? ...
 157:	033B  2008    		JR	NZ,SL512		; no
 158:	033D  210001  		LD	HL,256			; yes
 159:	0340  221A07  		LD	(TSLEN),HL		; store
 160:	0343  180A    		JR	USHW
 161:	0345  FE02    	SL512:	CP	2			; 512 ? ...
 162:	0347  2006    		JR	NZ,USHW			; no (... error!)
 163:	0349  210002  		LD	HL,512			; yes
 164:	034C  221A07  		LD	(TSLEN),HL		; store
 165:	034F  E5      	USHW:	PUSH	HL			; sec. len. in BC
 166:	0350  C1      		POP	BC			;
 167:	0351  CD9C01  		CALL	BN2A16			; convert to decimal
 168:	0354  21B706  		LD	HL,MUSSL		;
 169:	0357  CDAD02  		CALL	PLDECS			;
 170:	035A  219406  		LD	HL,MUSFM		;
 171:	035D  CDA002  		CALL	ZSDSP			; show to the user
 172:				;
 173:	0360  21C806  		LD	HL,MDCHO		; ask for drive id
 174:	0363  CDA002  		CALL	ZSDSP			;
 175:	0366  CDBF02  		CALL	GCHR			;
 176:	0369  FE03    		CP	$03			; CTRL+C ?
 177:	036B  CAD804  		JP	Z,EXIT			; exit
 178:	036E  FE0D    		CP	CR			; return ?
 179:	0370  CAD504  		JP	Z,EXNOS			; exit
 180:	0373  FE41    		CP	'A'			; is A or B ?
 181:	0375  FACF04  		JP	M,WRNGD			;
 182:	0378  FE43    		CP	'C'			;
 183:	037A  F2CF04  		JP	P,WRNGD			; no
 184:	037D  D641    		SUB	'A'			; makes number
 185:	037F  321E07  		LD	(TDRIV),A		; store user selection
 186:	0382  324500  		LD	(FDRVBUF),A		; store drive num
 187:				;
 188:	0385  215205  		LD	HL,MCFM			; ask confirm
 189:	0388  CD9602  		CALL	ZSDSPCL			;
 190:	038B  CDBF02  		CALL	GCHR			;
 191:	038E  FE59    		CP	'Y'			; is 'Y' ?
 192:	0390  C2C904  		JP	NZ,WCMND		; no
 193:	0393  0E65    		LD	C,'e'			; complete answer with (Y)es
 194:	0395  CD9FFD  		CALL	BBCONOUT			;
 195:	0398  0E73    		LD	C,'s'			; complete answer with (Y)es
 196:	039A  CD9FFD  		CALL	BBCONOUT			;
 197:	039D  0E0D    		LD	C,CR			;
 198:	039F  CD9FFD  		CALL	BBCONOUT			;
 199:	03A2  0E0A    		LD	C,LF			;
 200:	03A4  CD9FFD  		CALL	BBCONOUT			;
 201:				;
 202:	03A7  CD1E05  	AGAIN:	CALL	WAITKY			; wait for disk in drive
 203:				; Defines format parameters
 204:	03AA  3A1D07  		LD	A,(TFRMT)		; retrieve format
 205:	03AD  5F      		LD	E,A			; store drive num on DE
 206:	03AE  1600    		LD	D,0			; for later use
 207:	03B0  DD218A02		LD	IX,DFTAB		; format parameter base
 208:	03B4  DD19    		ADD	IX,DE			; type offset
 209:	03B6  DD19    		ADD	IX,DE			;
 210:	03B8  DD19    		ADD	IX,DE			;
 211:	03BA  DD19    		ADD	IX,DE			;
 212:	03BC  DD7E00  		LD	A,(IX+0)		; TRACKS
 213:	03BF  321607  		LD	(TNUMBF),A		; store # of tracks
 214:	03C2  DD5601  		LD	D,(IX+1)		; SIDES - loads in DE (sides+sectors)
 215:	03C5  DD5E02  		LD	E,(IX+2)		;
 216:	03C8  DD7E03  		LD	A,(IX+3)		; set sector len. byte
 217:	03CB  326102  		LD	(FISECL),A		;
 218:	03CE  AF      		XOR	A			;
 219:	03CF  325E02  		LD	(FITRKN),A		; start track
 220:	03D2  321C07  		LD	(TCOUNT),A
 221:	03D5  321907  		LD	(CSIDE),A		; start side
 222:	03D8  4F      		LD	C,A			; for BBSIDSET
 223:	03D9  3C      		INC	A			;
 224:	03DA  326002  		LD	(FISECN),A		;
 225:				;
 226:	03DD  F3      		DI				; no interrupts disturbing us
 227:	03DE  CDD5FC  		CALL	BBSIDSET
 228:	03E1  CDDBFC  		CALL	BBFDRVSEL
 229:	03E4  3E03    		LD	A,$03			; 1771 RESTORE
 230:	03E6  CD2805  		CALL	JFDCMD			;
 231:	03E9  CD3705  		CALL	JFSTAT			;
 232:				;
 233:	03EC  212F02  	TRSTA:	LD	HL,FTRBEG		; start sequence
 234:	03EF  0ED7    		LD	C,FDCDATAREG		; set C to 1771 data port
 235:	03F1  0628    		LD	B,40			; 40 bytes to send
 236:	03F3  3EF4    		LD	A,$F4			; 1771 WRITE TRACK
 237:	03F5  CD2805  		CALL	JFDCMD			;
 238:	03F8  DBD0    	WFDC:	IN	A,(FDCCMDSTATR)		; check ready
 239:	03FA  CB4F    		BIT	1,A			;
 240:	03FC  28FA    		JR	Z,WFDC			;
 241:	03FE  EDA3    		OUTI				; loop send byte
 242:	0400  20F6    		JR	NZ,WFDC			;
 243:	0402  215702  	WSECD:	LD	HL,FTRBG2		; ID FIELD sector image
 244:	0405  061E    		LD	B,30			; 30 bytes to send
 245:	0407  DBD0    	WFDC1:	IN	A,(FDCCMDSTATR)		;
 246:	0409  CB4F    		BIT	1,A			;
 247:	040B  28FA    		JR	Z,WFDC1			;
 248:	040D  EDA3    		OUTI				;
 249:	040F  20F6    		JR	NZ,WFDC1		; ID FIELD written
 250:	0411  2A1A07  		LD	HL,(TSLEN)
 251:	0414  DBD0    	WFDC2:	IN	A,(FDCCMDSTATR)		;
 252:	0416  CB4F    		BIT	1,A			;
 253:	0418  28FA    		JR	Z,WFDC2			;
 254:	041A  3EE5    		LD	A,$E5			; null sector data
 255:	041C  D3D7    		OUT	(FDCDATAREG),A		; out
 256:	041E  2B      		DEC	HL			; dec counters
 257:	041F  7C      		LD	A,H			; zero ?
 258:	0420  B5      		OR	L			;
 259:	0421  20F1    		JR	NZ,WFDC2		; no, next $E5
 260:	0423  217502  		LD	HL,FIPOSE		; END DATA FIELD sector image
 261:	0426  060F    		LD	B,15			; 15 bytes to send
 262:	0428  DBD0    	WFDC3:	IN	A,(FDCCMDSTATR)		;
 263:	042A  CB4F    		BIT	1,A			;
 264:	042C  28FA    		JR	Z,WFDC3			;
 265:	042E  EDA3    		OUTI				;
 266:	0430  20F6    		JR	NZ,WFDC3		; END DATA FIELD written
 267:	0432  3A6002  		LD	A,(FISECN)		;
 268:	0435  3C      		INC	A			;
 269:	0436  326002  		LD	(FISECN),A		;
 270:	0439  BB      		CP	E			; if not all # sec image written
 271:	043A  C20204  		JP	NZ,WSECD		; next sector
 272:			; 	LD	B,0
 273:	043D  DBD0    	WTEAG:	IN	A,(FDCCMDSTATR)		; ready to write again ?
 274:	043F  CB47    		BIT	0,A			;
 275:	0441  CA4B04  		JP	Z,WTEND			; no
 276:	0444  3EFF    		LD	A,$FF			; pad with FF
 277:	0446  D3D7    		OUT	(FDCDATAREG),A		;
 278:			; 	INC	B
 279:	0448  C33D04  		JP	WTEAG			;
 280:	044B  CD3705  	WTEND:	CALL	JFSTAT			;
 281:	044E  E6E7    		AND	$E7			;
 282:	0450  C21305  		JP	NZ,UNRERR		; very bad: format failed
 283:				;
 284:			; 	CALL	OUTCRLF
 285:			; 	LD	A,B
 286:			; 	CALL	H2AJ2
 287:			; 	CALL	OUTCRLF
 288:	0453  D5      		PUSH	DE
 289:	0454  217B06  		LD	HL,MFMTT		; inform user about progress
 290:	0457  CDA002  		CALL	ZSDSP			;
 291:	045A  3A5E02  		LD	A,(FITRKN)		; track
 292:	045D  4F      		LD	C,A			;
 293:	045E  CD8301  		CALL	BIN2A8			;
 294:	0461  21B501  		LD	HL,OVAL16		;
 295:	0464  CDA002  		CALL	ZSDSP			;
 296:	0467  218C06  		LD	HL,MFMTS		;
 297:	046A  CDA002  		CALL	ZSDSP			;
 298:	046D  3A1907  		LD	A,(CSIDE)		; side
 299:	0470  4F      		LD	C,A			;
 300:	0471  CD8301  		CALL	BIN2A8			;
 301:	0474  21B501  		LD	HL,OVAL16		;
 302:	0477  CDA002  		CALL	ZSDSP			;
 303:	047A  0E0D    		LD	C,CR			;
 304:	047C  CD9FFD  		CALL	BBCONOUT			; at beginning of line
 305:	047F  D1      		POP	DE
 306:				;
 307:	0480  3A1907  		LD	A,(CSIDE)		; verify side
 308:	0483  3C      		INC	A			; inc. side
 309:	0484  BA      		CP	D			; exists ?
 310:	0485  2814    		JR	Z,ADVTRK		; no
 311:	0487  321907  		LD	(CSIDE),A		; set it
 312:	048A  4F      		LD	C,A			;
 313:	048B  CDD5FC  		CALL	BBSIDSET			; activate
 314:	048E  CDDBFC  		CALL	BBFDRVSEL			; transfer to hardware
 315:			;	LD	A,(FITRKN)		; adjust trk offset
 316:			; 	ADD	E			; sum n. of tracks on side 0
 317:			; 	LD	(FITRKN),A		; done
 318:			; 	JR	SIDOK			;
 319:	0491  3E01    		LD	A,$01			; resets sector counters
 320:	0493  326002  		LD	(FISECN),A		;
 321:	0496  0600    		LD	B,$00			;
 322:	0498  C3EC03  		JP	TRSTA			; restart write
 323:	049B  AF      	ADVTRK:	XOR	A			;
 324:	049C  321907  		LD	(CSIDE),A		; restore side 0
 325:	049F  4F      		LD	C,A			;
 326:	04A0  CDD5FC  		CALL	BBSIDSET			;
 327:	04A3  CDDBFC  		CALL	BBFDRVSEL			; transfer to hardware
 328:	04A6  3A1C07  		LD	A,(TCOUNT)		; get cylinder counter
 329:	04A9  3C      		INC	A			; next track
 330:	04AA  211607  		LD	HL,TNUMBF		;
 331:	04AD  BE      		CP	(HL)			; EOD ?
 332:	04AE  CAE904  		JP	Z,RSTART		; yes
 333:	04B1  321C07  		LD	(TCOUNT),A		; update track counters
 334:	04B4  325E02  		LD	(FITRKN),A		;
 335:	04B7  3E01    	SIDOK:	LD	A,$01			; resets sector counters
 336:	04B9  326002  		LD	(FISECN),A		;
 337:	04BC  0600    		LD	B,$00			;
 338:				; verify remove.........
 339:			; VL1:	DJNZ	VL1			; ?????? 000370 10 FE
 340:			; VL2:	DJNZ	VL2			; ?????? 000372 10 FE
 341:				;
 342:	04BE  3E53    		LD	A,$53			; 1771 STEP-IN
 343:	04C0  CD2805  		CALL	JFDCMD			;
 344:	04C3  CD3705  		CALL	JFSTAT			;
 345:	04C6  C3EC03  		JP	TRSTA			; restart write
 346:			
 347:	04C9  213E05  	WCMND:	LD	HL,MCMDA		; 00037F 21 2A 04
 348:	04CC  C3E604  		JP	DSPER
 349:			
 350:			; 	JP	RSTART			;
 351:			
 352:	04CF  218405  	WRNGD:	LD	HL,MCHO2		;
 353:	04D2  C3E604  	 	JP	DSPER			;
 354:			
 355:	04D5  213906  	EXNOS:	LD	HL,MNSEL		; no sel msg
 356:	04D8          	EXIT:
 357:			; 	CALL	OUTCRLF			;
 358:	04D8  0E0D    		LD	C,CR
 359:	04DA  CD9FFD  		CALL	BBCONOUT
 360:	04DD  0E0A    		LD	C,LF
 361:	04DF  CD9FFD  		CALL	BBCONOUT
 362:	04E2  FB      		EI				; ensure interrupts re-enabled
 363:	04E3  C30000  		JP	$0000			; jump to BOOT
 364:			
 365:				; restart from beginning
 366:	04E6  CDA002  	DSPER:	CALL	ZSDSP			;
 367:	04E9  3E00    	RSTART:	LD	A,$00			; reset drives
 368:	04EB  D3D6    		OUT	(FDCDRVRCNT),A		;
 369:	04ED  FB      		EI				; now can reenable interrupts
 370:	04EE  21DD06  		LD	HL,MANOT		; ask for another
 371:	04F1  CD9602  		CALL	ZSDSPCL			;
 372:	04F4  CDBF02  		CALL	GCHR			;
 373:	04F7  FE59    		CP	'Y'			; is 'Y' ?
 374:	04F9  C2D804  		JP	NZ,EXIT		; no
 375:	04FC  0E65    		LD	C,'e'			; complete answer with (Y)es
 376:	04FE  CD9FFD  		CALL	BBCONOUT			;
 377:	0501  0E73    		LD	C,'s'			; complete answer with (Y)es
 378:	0503  CD9FFD  		CALL	BBCONOUT			;
 379:	0506  0E0D    		LD	C,CR			;
 380:	0508  CD9FFD  		CALL	BBCONOUT			;
 381:	050B  0E0A    		LD	C,LF			;
 382:	050D  CD9FFD  		CALL	BBCONOUT			;
 383:	0510  C3A703  		JP	AGAIN			;
 384:				;
 385:	0513  215406  	UNRERR:	LD	HL,MCRSH
 386:	0516  CD9602  		CALL	ZSDSPCL
 387:	0519  213E05  		LD	HL,MCMDA
 388:			; 	JR	EXIT
 389:	051C  18CB    		JR	RSTART
 390:				;
 391:	051E  21F106  	WAITKY:	LD	HL,MINDS
 392:	0521  CDA002  		CALL	ZSDSP
 393:	0524  CD94FD  		CALL	BBCONIN
 394:	0527  C9      		RET
 395:				;
 396:			;;
 397:			;; SFDCCMD - send 1771 a command
 398:			;
 399:	0528          	JFDCMD:
 400:	0528  F5      		PUSH	AF			; was 00F49D F5
 401:	0529          	SNDCL:
 402:	0529  DBD0    		IN	A,(FDCCMDSTATR)
 403:	052B  CB47    		BIT	0,A			; check busy
 404:	052D  20FA    		JR	NZ,SNDCL
 405:	052F  F1      		POP	AF
 406:	0530  D3D0    		OUT	(FDCCMDSTATR),A
 407:	0532  E3      		EX	(SP),HL
 408:	0533  E3      		EX	(SP),HL
 409:	0534  E3      		EX	(SP),HL
 410:	0535  E3      		EX	(SP),HL
 411:	0536  C9      		RET
 412:			;;
 413:			;; GFDCSTAT - get 1771 status and copy on buffer
 414:			;
 415:	0537          	JFSTAT:
 416:	0537  DBD0    		IN	A,(FDCCMDSTATR)		; was 00F4AF DB D0
 417:	0539  CB47    		BIT	0,A
 418:	053B  20FA    		JR	NZ,JFSTAT
 419:	053D  C9      		RET
 420:				;
 421:	053E  0D0A466F	MCMDA:	DEFB	CR,LF,"Format aborted.",CR,LF,$00
	      726D6174
	      2061626F
	      72746564
	      2E0D0A00
 422:	0552  0D0A4172	MCFM:	DEFB	CR,LF,"Are you shure ? ",$00
	      6520796F
	      75207368
	      75726520
	      3F2000
 423:	0565  2A205A38	MCHOI:	DEFB	"* Z80DarkStar DISK FORMAT *",CR,LF
	      30446172
	      6B537461
	      72204449
	      534B2046
	      4F524D41
	      54202A0D
	      0A
 424:	0582  0D0A    		DEFB	CR,LF
 425:	0584  0D0A    	MCHO2:	DEFB	CR,LF
 426:	0586  53454C45		DEFB	"SELECT DISK FORMAT:",CR,LF
	      43542044
	      49534B20
	      464F524D
	      41543A0D
	      0A
 427:	059B  0D0A    		DEFB	CR,LF
 428:	059D  31202D20		DEFB	"1 - 80 TRACK, 128 bytes, 17 sectors/track, DS",CR,LF
	      38302054
	      5241434B
	      2C203132
	      38206279
	      7465732C
	      20313720
	      73656374
	      6F72732F
	      74726163
	      6B2C2044
	      530D0A
 429:	05CC  32202D20		DEFB	"2 - 80 TRACK, 256 bytes, 20 sectors/track, DS",CR,LF
	      38302054
	      5241434B
	      2C203235
	      36206279
	      7465732C
	      20323020
	      73656374
	      6F72732F
	      74726163
	      6B2C2044
	      530D0A
 430:	05FB  33202D20		DEFB	"3 - 80 TRACK, 512 bytes, 11 sectors/track, DS",CR,LF
	      38302054
	      5241434B
	      2C203531
	      32206279
	      7465732C
	      20313120
	      73656374
	      6F72732F
	      74726163
	      6B2C2044
	      530D0A
 431:	062A  0D0A    		DEFB	CR,LF
 432:	062C  53454C45		DEFB	"SELECT 1-3 :"
	      43542031
	      2D33203A
 433:	0638  00      		DEFB	$00
 434:	0639  4E4F2073	MNSEL:	DEFB	"NO selection, exiting...",CR,LF,$00
	      656C6563
	      74696F6E
	      2C206578
	      6974696E
	      672E2E2E
	      0D0A00
 435:	0654  07554E52	MCRSH:	DEFB	BEL,"UNRECOVERABLE ERROR DURING FORMAT !",CR,LF,$00
	      45434F56
	      45524142
	      4C452045
	      52524F52
	      20445552
	      494E4720
	      464F524D
	      41542021
	      0D0A00
 436:	067B  466F726D	MFMTT:	DEFB	"Formatted track ",$00
	      61747465
	      64207472
	      61636B20
	      00
 437:	068C  2C207369	MFMTS:	DEFB	", side ",$00
	      64652000
 438:	0694  0D0A5573	MUSFM:	DEFB	CR,LF,"Using format "
	      696E6720
	      666F726D
	      617420
 439:	06A3  3030    	MUSNT:	DEFB	"00"
 440:	06A5  20747261		DEFB	" tracks, "
	      636B732C
	      20
 441:	06AE  30      	MUSSD:	DEFB	"0"
 442:	06AF  20736964		DEFB	" sides, "
	      65732C20
 443:	06B7  303030  	MUSSL:	DEFB	"000"
 444:	06BA  20627974		DEFB	" bytes/sec.",CR,LF,$00
	      65732F73
	      65632E0D
	      0A00
 445:	06C8  53656C65	MDCHO:	DEFB	"Select drive (A/B): ",$00
	      63742064
	      72697665
	      2028412F
	      42293A20
	      00
 446:	06DD  0D0A466F	MANOT:	DEFB	CR,LF,"Format another ? ",$00
	      726D6174
	      20616E6F
	      74686572
	      203F2000
 447:	06F1  0D0A496E	MINDS:	DEFB	CR,LF,"Insert disk and press any key...",CR,LF,$00
	      73657274
	      20646973
	      6B20616E
	      64207072
	      65737320
	      616E7920
	      6B65792E
	      2E2E0D0A
	      00
 448:			
 449:	0716  28      	TNUMBF:	DEFB	$28			; # of tracks to format
 450:	0717  01      	TSIDES:	DEFB	$01			; and # of sides
 451:	0718 .. 0718 00	TNSECT:	DEFS	1			; # if sectors per track
 452:	0719 .. 0719 00	CSIDE:	DEFS	1			; current side register
 453:	071A .. 071B 00	TSLEN:	DEFS	2			; sector lenght
 454:	071C .. 071C 00	TCOUNT:	DEFS	1			; cylinder counter
 455:	071D .. 071D 00	TFRMT:	DEFS	1			; users' format selection
 456:	071E .. 071E 00	TDRIV:	DEFS	1			; users' drive selection
 457:			
 458:	071F          		END



Statistics:

     5	passes
     0	jr promotions
   386	symbols
     0	bytes



Symbol Table:

advtrk           49b     cursoron       =   a+    ppdatap        =   3+    
again            3a7     cursshp        =  4a+    ppdini         =   0+    
altprnprt      =   3+    cvbase         =   a+    ppdokg         =   2+    
appbuf         =  2e+    delay          =fd85+    ppdrdy         =   4+    
bbappp         =   e+    dftab            28a     ppdstp         =   6+    
bbbase         =f000+    dly1           =fd89+    ppstrob        =   0+    
bbcalret       =fd5a+    dly2           =fd87+    ppuack         =   7+    
bbcbank        =   c+    dselbf         =  4e+    ppuini         =   1+    
bbcomn         =fc00+    dsper            4e6     ppuokg         =   3+    
bbconin        =fd94+    eep29c         =   4+    ppurdy         =   5+    
bbconout       =fd9f+    eep29ee        =   1+    prntbusybit    =   0+    
bbconst        =fdaa+    eep29xe        =   2+    prvtop         =  4f+    
bbcpboot       =fcc9+    eepage0        =  c0+    r0brdl         =   0+    
bbcptime       =fcc3+    eeproglock     =  10+    r0rxtx         =   0+    
bbcrtcini      =fc03+    eepsta         =f000+    r1brdm         =   1+    
bbcrtfill      =fc09+    eepunsupp      =   8+    r1ier          =   1+    
bbcstck        =   d+    eerineprom     =  80+    r2fcr          =   2+    
bbcurset       =fc21+    esc            =  1b+    r2iir          =   2+    
bbdebug        =ffff+    exit             4d8     r3lcr          =   3+    
bbdiv16        =fce1+    exnos            4d5     r4mcr          =   4+    
bbdmaset       =fcb7+    extdon           210     r5lsr          =   5+    
bbdriveid      =fcf9+    false          =   0+    r6msr          =   6+    
bbdsksel       =fcbd+    fcb1           =  5c+    r7spr          =   7+    
bbeidck        =fd23+    fdcbase        =  d0+    ram0buf        =  3b+    
bbepmngr       =fd1d+    fdccmdstatr    =  d0+    ram1buf        =  3c+    
bbexec         =fd29+    fdcdatareg     =  d7+    ram2buf        =  3d+    
bbfdrvsel      =fcdb+    fdcdrvrcnt     =  d6+    ram3buf        =  3e+    
bbfhome        =fc81+    fdcreadc       =  88+    ramtbl         =e000+    
bbflopio       =fc93+    fdcrestc       =   7+    readcfg8255    =  92+    
bbfread        =fc87+    fdcsectreg     =  d2+    regastatus     =  16+    
bbfwrite       =fc8d+    fdcseekc       =  17+    regcommand     =   f+    
bbhdboot       =fd11+    fdctrakreg     =  d1+    regcontrol     =  16+    
bbhdgeo        =fd0b+    fdcwritc       =  a8+    regcyllsb      =   c+    
bbhdinit       =fcf3+    fdrvbuf        =  45+    regcylmsb      =   d+    
bbhdrd         =fd05+    ff             =   c+    regdata        =   8+    
bbhdwr         =fcff+    fifblok        =   b+    regerr         =   9+    
bbimgp         =   4+    fifoend        =  25+    regseccnt      =   a+    
bbinictc       =fc57+    fifokb         =  1a+    regsector      =   b+    
bbjtobnk       =fc00+    fifosto        =   f+    regshd         =   e+    
bbldpart       =fd17+    fifou0         =   f+    regstatus      =   f+    
bbmul16        =fce7+    fifsize        =   8+    rldrom         =fe79+    
bboffcal       =fced+    fin            =fdc4+    rst7sp1        =  38+    
bbpag          =   f+    fipose           275     rst7sp2        =  39+    
bbprcvblk      =fc6f+    fisecl           261     rst7sp3        =  3a+    
bbprnchr       =fc99+    fisecn           260     rstart           4e9     
bbpsndblk      =fc63+    fitrkn           25e     rtbsiz         = 3c0+    
bbrdtime       =fca5+    fixblock       =   0+    sconin         =fc2d+    
bbrdvdsk       =fc75+    format           2d8     sconout        =fc27+    
bbresctc       =fc5d+    fout           =fde1+    sconst         =fc33+    
bbsecset       =fcb1+    frdpbuf        =  41+    scrtch           103+    
bbsidset       =fcd5+    fsecbuf        =  43+    sidok            4b7+    
bbstack        =feb4+    fsekbuf        =  3f+    sintvec        =fff0+    
bbstbase       =fe90+    fstat          =fdb5+    sl256            339     
bbsttim        =fc9f+    ftrbeg           22f     sl512            345     
bbtrkset       =fcab+    ftrbg2           257     sndcl            529     
bbu0ini        =fc39+    ftrkbuf        =  46+    sparea         = 183+    
bbu1ini        =fc51+    gcdsp            2d0     sysbase        =f000+    
bbu1rx         =fc45+    gchr             2bf     syscmlo        =feb4+    
bbu1st         =fc4b+    gofmt            100+    syscom         =fc00+    
bbu1tx         =fc3f+    hilo             1bb     syshertz       =  13+    
bbuplchr       =fc69+    hmempag        =   b+    sytimr         =fe19+    
bbvcpmbt       =fccf+    idea0line      =   1+    tblblk         =  30+    
bbvoid         =fd6a+    idea1line      =   2+    tcount           71c     
bbwrvdsk       =fc7b+    idea2line      =   4+    tdesclen       =  14+    
bel            =   7+    idecs0line     =   8+    tdriv            71e     
bin2a8           183     idecs1line     =  10+    tfrmt            71d     
bldoffs        =3000+    ideporta       =  e0+    tiaddrlen      =   4+    
blifastblok    =  60+    ideportb       =  e1+    timrcon        =  28+    
blifastline    =  6a+    ideportc       =  e2+    tmpbyte        =  4b+    
blislowblok    =  40+    ideportctrl    =  e3+    tnamelen       =   8+    
blislowline    =  4a+    iderdline      =  40+    tnsect           718+    
bn2a16           19c     iderstline     =  80+    tnumbf           716     
btpasiz        =   6+    idewrline      =  20+    tpa            = 100+    
cdisk          =   4+    imtpag         =  ff+    tpagelen       =   2+    
clkio          =   6+    imtsiz         = 400+    trnpag         =   d+    
clkrst         =   7+    intrdi         =fe0f+    trsta            3ec     
clksclk        =   5+    intren         =fdfe+    true           =ffff+    
cmdid          =  ec+    iobyte         =   3+    tsides           717     
cmdinit        =  91+    ival16           1b3     tsizelen       =   4+    
cmdread        =  20+    jfdcmd           528     tslen            71a     
cmdrecal       =  10+    jfstat           537     u0defspeed     =   6+    
cmdspindown    =  e0+    kbdbyte        =  4d+    u0isr          =fe25+    
cmdspinup      =  e1+    keybstrbbit    =   7+    u1defspeed     =   c+    
cmdwrite       =  30+    lf             =   a+    u1isr          =fe59+    
cnfbyte        =  27+    lngibd           1bd     u1nul          =fe70+    
codbeg         = 296+    manot            6dd     uart0          =  c0+    
colbuf         =  4f+    maxblk         =  14+    uart0base      =  c0+    
copsys         =  2d+    mcfm             552     uart0br        =  2c+    
cr             =   d+    mcho2            584     uart1          =  c8+    
crdureg        =fc27+    mchoi            565     uart115k2      =   1+    
crt6545adst    =  8c+    mcmda            53e     uart1200       =  60+    
crt6545data    =  8d+    mcrsh            654     uart19k2       =   6+    
crtbase        =  80+    mdcho            6c8     uart1base      =  c8+    
crtbeepport    =  8f+    menaprt        =  21+    uart1br        =  2b+    
crtblinkbit    =   0+    mfmts            68c     uart2400       =  30+    
crthilitbit    =   3+    mfmtt            67b     uart38k4       =   3+    
crtkeybcnt     =  87+    minds            6f1     uart4800       =  18+    
crtkeybdat     =  85+    miobyte        =  4c+    uart57k6       =   2+    
crtmodebit     =   4+    mmgetp         =fd78+    uart9600       =   c+    
crtprntcnt     =  83+    mmpmap         =fd6b+    uastav         =fe84+    
crtprntdat     =  81+    mmtpapag       =  ef+    uastkb         =fe86+    
crtram0cnt     =  82+    mmuport        =  20+    uisre          =fe4e+    
crtram0dat     =  80+    mmutstaddr     =d000+    uisri          =fe32+    
crtram1cnt     =  86+    mmutstpage     =   d+    unrerr           513     
crtram1dat     =  84+    mnsel            639     usel             2eb+    
crtram2cnt     =  8a+    monmaj         =  33+    ushw             34f     
crtram2dat     =  88+    monmin         =  32+    vconin         =fc15+    
crtram3port    =  8e+    msbfnd           1d9     vconout        =fc0f+    
crtrevrsbit    =   1+    mscnt          =  f6+    vconst         =fc1b+    
crtservcnt     =  8b+    mskfnd           1e7     vdbufsz        =   a+    
crtservdat     =  89+    musfm            694     vdrdsec        =   0+    
crtunderbit    =   2+    musnt            6a3     vdskbuf        =  30+    
crtwidthbit    =   1+    mussd            6ae     vdwrsec        =   1+    
cside            719     mussl            6b7     voidisr        =fe22+    
ctc0tc         =  2a+    mzmac          =   1+    vptr           = 1bb+    
ctc0tchi       =  20+    nocoul           202     waitky           51e     
ctc1tc         =  29+    nxtcnv           21c     wcmnd            4c9     
ctc1tc100hz    =   5+    nxtmsb           1c8     wfdc             3f8     
ctc1tc10hz     =  30+    nxtmsk           1dc     wfdc1            407     
ctc1tc25hz     =  13+    nxtopv           1f4     wfdc2            414     
ctc1tc2hz      =  f4+    opvdon           208     wfdc3            428     
ctc1tc50hz     =   a+    oval16           1b5     writecfg8255   =  80+    
ctcbase        =  e8+    pio2bit2       =   2+    wrngd            4cf     
ctcchan0       =  e8+    pio2bit3       =   3+    wsecd            402     
ctcchan1       =  e9+    pio2bit4       =   4+    wteag            43d     
ctcchan2       =  ea+    pldecs           2ad     wtend            44b     
ctcchan3       =  eb+    pldnxt           2b3     zsdsp            2a0     
curpbuf        =  48+    ppakstb        =   1+    zsdspcl          296     
cursoroff      =  20+    ppcntrp        =   2+    
