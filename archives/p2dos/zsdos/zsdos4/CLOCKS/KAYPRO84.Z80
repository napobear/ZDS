	TITLE	"Kaypro-84 Clock - (KAYPRO-84)"
	SUBTTL	"Description of Clock Module"
;-----------------------------------------------------------------
; Translated for Z80ASM and ZSDOS 06/11/88 from version of 4/14/85
; Ver 0.4 current as of 15 Oct 88.
;-----------------------------------------------------------------

VERS	EQU	04
	.Z80
	NAME	KAY84

	MACLIB	CLOCK.LIB

	COMMON	/_CLKID/

DESCST:	DEFW	88H		; Thisyr

CLKNAM:	DEFB	'Kaypro-84               '	; Exactly 24 chars
	DEFB	VERS/10+'0','.',VERS MOD 10 + '0',0

DESCR:	DEFB	'   Kaypro 4-84 built-in MM58167',CR,LF
	DEFB	'   (year held in .1 seconds latch) (Kaypro Corp.)',0


	PAGE
	SUBTTL	"Configurable Hardware Clock Parameters"

	COMMON	/_PARM_/

PARBAS:	DEFW	0		; Dummy parameters
	DEFW	0		; ..nothing to install


	PAGE
	SUBTTL	"Clock Code - Kaypro 84 with MM58167"

SECONDS	EQU	2
YEAR	EQU	9
RTCD	EQU	24H		; Data port of 58167 clock
RTCA	EQU	20H		; Address portion of pio
RTCS	EQU	22H		; Control/status reg of pio

;	D = Mask,  E = Preserved Buffer-Seconds value
;	B = Count, C = Data Port

REGMSK	EQU	01001000B	; Yr,thsec,mon,day,daywk,hr,min,sec
				; 9  8	   7   6   5	 4  3	2
	CSEG
;-------------------------------------------------------------
;	    Z S D O S    C L O C K    H E A D E R
;-------------------------------------------------------------
; Enter: HL points to a 6-byte buffer to Get/Set Time
; Exit :  A=1 on Success, A=FFH if error
;	 HL points to last char in buffer

;== Commented out til Set code written
;==	JP	GETTIM		; Jump to Read Clock
;==	JP	WRCLK		; Jump to Set Clock

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;		R e a d    T h e    C l o c k
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

GETTIM:	PUSH	HL
RETRY:	POP	HL
	PUSH	HL
	LD	D,REGMSK	; Set skip mask
	LD	BC,256*YEAR + RTCD ; Set count and port
	LD	A,SECONDS	; Read seconds
	OUT	(RTCA),A
	IN	A,(RTCD)
	PUSH	AF		; Save seconds on stack

LOOP:	SCF			; So 9th time will exit
	RL	D
	JR	C,SKIP
	LD	A,B
	OUT	(RTCA),A
	LD	E,(HL)
	INI
	INC	B
SKIP:	DJNZ	LOOP

	DEC	HL		; Point at seconds
	POP	AF		; Compare to initial read value
	CP	(HL)
	POP	BC		; Clear stack
	LD	A,01		; Return OK
	RET	Z		; No rollover, exit
	PUSH	BC		; Buf ptr back to stack
	LD	(HL),E		; Repair damage
	JR	RETRY

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;		S e t    T h e    C l o c k
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;== Commented out til written
;==WRCLK:
;==	RET


	PAGE
	SUBTTL	"Run-Time Configuration of Ports and Masks"

	COMMON	/_POST_/

	RET			; Dummy entry required

	DEFB	0,0,0		; Filler


	PAGE
	SUBTTL	"Pre-Execution Clock Checks"

	COMMON	/_PRE_/

KAYVID	EQU	1DH

PREVAL:	JR	PREVA1		; Jump around addr store

	DEFW	PREVAL		; Storage of executable address

PREVA1:	LD	C,CR		; Check for 84 board
	LD	HL,(1)
	LD	L,0CH
	LD	DE,RET2
	PUSH	DE
	JP	(HL)
RET2:	INC	A
	JR	NZ,IS84
	XOR	A		; Cy clear is bad clock
	RET

IS84:	LD	HL,PIOTAB	; Initialize the 4-84 pio
	LD	BC,3*256+RTCS
	OTIR

	XOR	A		; Clear accumulator
	LD	B,A		; Set up future count
	OUT	(RTCA),A	; Point to 1/10000 sec
	IN	A,(RTCD)
	LD	C,A
WAIT:	EX	(SP),HL		; Delay for 1/10000 rollover at 4mhz
	EX	(SP),HL
	EX	(SP),HL
	EX	(SP),HL
	DJNZ	WAIT
	IN	A,(RTCD)
	CP	C
	SCF
	RET	NZ
	CCF
	RET

PIOTAB:	DEFB	0CFH,0E0H,003H

	END
