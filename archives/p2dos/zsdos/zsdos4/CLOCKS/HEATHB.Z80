	TITLE	"HeathBIOS - Heath 2.2.03 BIOS HeartBeat Clock - (HEATH-BIOS)"
	SUBTTL	"Description of Clock Module"
;====================================================================
; Heath BIOS Organization:
;
;	0008H JMP CLOCK
;	...
;
; TODBUF: DEFS	6		; Sec,min,hr,da,mo,yr - binary values
; EVENT:  DEFW	0
; DLYMO:  DEFB	0
; DLYH:   DEFB	0
; DLYW:   DEFB	0
; CLOCK:  ...			; 2 millisec clock service routine
;	 IF	TOD
;	...			; Heartbeat clock service
;	 ENDIF
;====================================================================
; Translated for Z80ASM/ZSDOS 06/11/88 from ver of 3/10/85
; Vers 0.2 current as of 17 Oct 88
;====================================================================

VERS	EQU	02
	.Z80
	NAME	HEATHB

	MACLIB	CLOCK.LIB

	COMMON	/_CLKID_/

DESCST:	DEFW	0		; Thisyr

CLKNAM:	DEFB	'Heath Z80 BIOS HeartBeat'	; Exactly 24 chars
	DEFB	VERS/10+'0','.',VERS MOD 10 + '0',0

DESCR:	DEFB	'   Heath CP/M 2.2.03 BIOS heartbeat clock',CR,LF
	DEFB	'   (Heath/Zenith)',0

	  IF  [$-DESCST] > 256
	OVER2
	  ENDIF


	PAGE
	SUBTTL	"Configurable Clock Hardware Parameters"

	COMMON	/_PARM_/

PARBAS:	DEFW	NPARAMS		; # of parameters
	DEFW	STRS

NP0:
XMHZ	EQU	$+1
	DEFB	BYTE
	DEFW	MHZ
XSECOFF	EQU	$+1
	DEFB	WORD
	DEFW	SECOFF
NPARAMS	EQU	($-NP0)/3

STRS:	DEFB	'MHz CPU Speed                             ',0
	DEFB	'Offset to "TODVAL" (Seconds) from "Clock:"',0


	PAGE
	SUBTTL	"Clock Code - Heath BIOS HeartBeat"

CLKPTR	EQU	0009H		; 0008 : jmp clock
SECOFF	EQU	-(6+5)

YRPTR	EQU	$+1

	CSEG
;-----------------------------------------------------------
;	    Z S D O S    C L O C K    H E A D E R
;-----------------------------------------------------------
; Enter: HL points to a 6-byte buffer to Get/Set Time
; Exit :  A=1 on Success, A=FFH if error
;	 HL points to last char in buffer

;== Commented out til Set code written
;==	JP	GETTIM		; Jump to Read Clock
;==	JP	WRCLK		; Jump to Set Clock

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;		R e a d    T h e    C l o c k
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

GETTIM:	LD	BC,0000		; -> yr, installed by test routine
	LD	D,6		; 6 bytes
	DI			; Halt the ticks
LOOP:	LD	A,(BC)
	LD	E,(HL)		; Save buffer 'seconds'
	PUSH	BC
	CALL	BIN2BCD
	POP	BC
	LD	(HL),A		; Install bcd value
	DEC	BC		; -> mo, da,...
	INC	HL
	DEC	D
	JR	NZ,LOOP
	EI
	DEC	HL		; Point at seconds
	LD	A,01		;== Set Ok status return
	RET

; uses B

BIN2BCD:LD	B,0
BCDLP:	CP	10
	JR	C,BCDLP2
	INC	B
	SUB	10
	JR	BCDLP

BCDLP2:	DEC	B
	RET	M
	ADD	A,10H
	JR	BCDLP2

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;		S e t    T h e    C l o c k
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;== Commented out til written
;==WRCLK:
;==	RET


	PAGE
	SUBTTL	"Run-Time Configuration of Ports and Masks"

; This code installs configurable items into the clock module
; Enter with DE pointing to the physical address of the relocatable module

	COMMON	/_POST_/

	LD	HL,(XSECOFF)	; Get word
	LD	(YSECOFF),HL	; ..and put in Pre-Execution code
	SETBYT  XMHZ,YMHZ
	RET


	PAGE
	SUBTTL	"Pre-Execution Clock Checks"

; This module is executed just prior to installing the module to insure
; that a valid clock is present

	COMMON	/_PRE_/

VALID:	JR	VALID0		; Jump around address
	DEFW	VALID		; ORG address for this segment

VALID0:	LD	HL,(CLKPTR)
YSECOFF	EQU	$+1
	LD	DE,SECOFF
	ADD	HL,DE
	LD	A,(HL)		; Get seconds value
	PUSH	HL		; Save ptr to seconds
	PUSH	AF		; Save seconds
	LD	DE,5
	ADD	HL,DE
	LD	(YRPTR),HL	; Install ptr to year in bios
	CALL	DELAY
	POP	AF
	POP	HL
	CP	(HL)		; Has it ticked?
	SCF
	RET	NZ
	CCF
	RET

; delay 1.25 Sec at configured cpu speed

YMHZ	EQU	$+1
DELAY:	LD	B,MHZ
$$0:	LD	HL,40000+10000	; Constant plus slop
$$1:	DEC	HL		; 6
	LD	A,H		; 4
	OR	L		; 4
	JR	NZ,$$1		; 10 equ 24 cycles/loop
	DJNZ	$$0
	RET

	END
