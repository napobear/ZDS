	TITLE	"Heath H891-A MicroWidget 5832 Clock - (H89-WIDGET)"
	SUBTTL	"Description of Clock Module"
;====================================================================
; MICROWIDGET.
;  ZSDOS Clock driver for Heath-8 / -89 computer with the MicroWidget
;  board.
;
; Micro Widget Works, Inc.
; P.O. Box 15185
; Santa Ana, CA  92705
;					Harold F. Bower,  10 Jul 88
;====================================================================
; Translated for Z80ASM/ZSDOS 06/11/88 from ver of 7/6/85
; Ver 0.5 current as of 21 Oct 88
;====================================================================

VERS	EQU	05
	.Z80
	NAME	WIDGET

	MACLIB	CLOCK.LIB

	COMMON	/_CLKID/

DESCST:	DEFW	0		; Ptr to statyr

CLKNAM:	DEFB	'Heath MicroWidget       '	; Exactly 24 chars
	DEFB	VERS/10+'0','.',VERS MOD 10 +'0',0

DESCR:	DEFB	'  H891-A Multi-Function Utility Board',CR,LF
	DEFB	'  (MicroWidget Works)',0

	  IF  [$-DESCST] > 256
	OVER2
	  ENDIF

	PAGE
	SUBTTL	"Configurable Clock Hardware Parameters"

	COMMON	/_PARM_/

PARBAS:	DEFW	NPARAMS		; # of parameters
	DEFW	STRS		; Ptr to strings
NP0:
XMHZ	EQU	$+1
	DEFB	BYTE
	DEFW	MHZ
NPARAMS	EQU	($-NP0)/3

; Descriptions of configurable parameters

STRS:	DEFB	'MHz cpu speed',0

	PAGE
	SUBTTL	"Clock Code - H891-A MicroWidget Board"

; CCH-8/CCH-89 Port Assignments

STATUS	EQU	02CH		; Status port
CPBASE	EQU	020H		; Base port

CPCTL	EQU	CPBASE		; Control and address port (port a)
CPDAT	EQU	CPCTL+2		; Data port		   (port c)

CPMODE	EQU	CPBASE+3	; 8255 mode control port (23h)

; CCH-8/CCH-89 Control Port Bit Assignments

CBCS	EQU	080H		; Chip select
CBHOLD	EQU	010H		; Hold line
CBREAD	EQU	020H		; Read line
CBWRIT	EQU	040H		; Write line
CBTEST	EQU	040H		; Test line
CBSEC	EQU	080H		; +/- 30 seconds
CBIEN	EQU	008H		; Interrupt enable on status port

; CCH-8/CCH-89 Data Port Bit Assignments

CBCA0	EQU	01H		; Address bit 0
CBCA1	EQU	02H		; Address bit 1
CBCA2	EQU	04H		; Address bit 2
CBCA3	EQU	08H		; Address bit 3
CBCA15	EQU	0FH		; All address bits set

; CCH-8/CCH-89 Misc Equates

CBPM	EQU	004H		; PM bit in CRH10
CB24	EQU	008H		; 24 hour format bit in CRH10
CB29	EQU	004H		; 29 days in Feb bit in CR$D10
TC150	EQU	45		; Delay count
RMODE	EQU	089H		; Read mode for 8255A
WMODE	EQU	088H		; Write mode for 8255A


CNTRL	EQU	CPMODE
HLDBIT	EQU	CBHOLD
RDBIT	EQU	CBREAD
NDELY	EQU	TC150
YEARRG	EQU	12

FMTBIT	EQU	3		; Bit set if 24 Hr format
PMBIT	EQU	2		; Bit set if PM

	CSEG
;------------------------------------------------------------
;	    Z S D O S    C L O C K    H E A D E R
;------------------------------------------------------------
; Enter: HL points to a 6-byte buffer to Get/Set time
; Exit :  A=1 on Success, A=FFH if error
;	 HL points to last char in buffer

;== Commented out til Set code written
;==	JP	GETTIM		; Jump to Read Clock
;==	JP	WRCLK		; Jump to Set Clock

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;		R e a d    T h e    C l o c k
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

; Need DI and re-enable...

GETTIM:	IN	A,(STATUS)	; Save status mode
	LD	(IMODE),A
	DI			; No clock interrupts, please

	LD	A,RMODE		; Set read mode
	OUT	(CNTRL),A
	LD	A,CBCS		; Issue clock chip select
	OUT	(STATUS),A
	LD	A,HLDBIT	; Hold the clock while reading
	OUT	(CPCTL),A
YDELY	EQU	$+1
	LD	B,NDELY		; Wait til ready
$$WAIT:	DJNZ	$$WAIT
				; B equ hi byte equ 10's of year
				; C equ even/odd
	LD	BC,256*((RDBIT OR HLDBIT) + YEARRG) + 0

LOOP:	LD	A,B
	CP	RDBIT OR HLDBIT + 1
	JR	NZ,CKDONE
	LD	E,(HL)		; Save buffer 'seconds'
CKDONE:	CP	(RDBIT OR HLDBIT) - 1
	JR	Z,HLDOFF		; All done
	CP	(RDBIT OR HLDBIT) + 6
	JR	NZ,NOTDY
	DEC	B		; Skip reading day-of-week
	LD	A,B
NOTDY:	OUT	(CPCTL),A
	EX	(SP),HL		; Wait
	EX	(SP),HL
	IN	A,(CPDAT)
	RLD			; Install nybble

; check AM/PM format -
; reading backwards, so only after tens AND units have been read
	LD	A,B		; Get register
	CP	(RDBIT OR HLDBIT) + 4	; Check for units of hour
	JR	NZ,$$HRUX

; 1.	24 HR: TENS NYBBLE EQU BIT 2 EQU> 0100 OR 0101 OR 0110 DATA
; 2.	12 HR AM    0000 OR 0001
;	12 HR PM    1000 OR 1001
; NYBBLE: Will be Hi Nybble of BCD byte after RLD's

	LD	A,(HL)		; Get bcd-stored hour byte
	RES 	6,A		; Always kill 24 hr bit in bcd byte
	BIT	7,A		; Test pm bit in bcd byte
	JR	Z,$$PUT
	ADD	A,12 - (80H)	; Add 12 hrs, kill hi bit
	OR	A		; Clear cy
	DAA			; Adjust to bcd
$$PUT:	LD	(HL),A		; Install new bcd byte

$$HRUX:	DEC	B		; Count down
	DEC	C		; Toggle odd/even bit
	BIT	0,C
ODEVEN:	JR	NZ,LOOP		; Get 2nd nybble
	INC	HL		; Byte complete$$
	JR	LOOP			; $$do next one

HLDOFF:	DEC	HL		; Point at seconds
	XOR	A		; Turn off clock hold (not in mww code)
	OUT	(CPCTL),A
	EI			; Interrupts ok

IMODE	EQU	$+1		; Interrupt mode status byte
	LD	A,00		; Get saved status
	AND	00FH
	XOR	00001000B	; Invert ien-l to keep it the same
	LD	B,A
	AND	CBIEN		; Were interrupts enabled?
	JR	Z,$$1A		; Clean exit if there were not
	LD	A,CBREAD OR CBCA15
	OUT	(CPCTL),A	; Set read high and all address lines high
	LD	A,B		; Get status word back
	OR	CBCS		; Enable clock chip select

$$1A:	OUT	(STATUS),A	; Rewrite it
	LD	A,01		;== Set OK return status
	RET

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;		S e t    T h e    C l o c k
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
; Set not implemented yet, return error
;== Commented out til written
;==WRCLK:	OR	0FFH		; Set error return code
;==	RET


	PAGE
	SUBTTL	"Run-Time Configuration of Ports and Masks"

; This code installs configurable items into the clock module
; Enter with DE pointing to the physical address of the relocatable module

	COMMON	/_POST_/

; Set Delay

	SETBYT XMHZ,
	ADD	A,A		; *16
	ADD	A,A
	ADD	A,A
	ADD	A,A
	SETBYT ,YDELY
	RET


	PAGE
	SUBTTL	"Pre-Execution Clock Checks"

; This module is executed just prior to installing the module to insure
; that a valid clock is present

	COMMON	/_PRE_/

	IN	A,(STATUS)	; Save status mode
	LD	(IMODE),A

	LD	A,082H		; Verify presence of clock
	OUT	(STATUS),A	; This also sets clock chip select
	IN	A,(STATUS)	;
	AND	10011111B	; Mask off printer busy and printer fault
	CP	09AH		; I$d$ byte
	JR	NZ,BAD

; read clock, wait, read again

	INCLUDE	PRECLOCK.LIB

	END
