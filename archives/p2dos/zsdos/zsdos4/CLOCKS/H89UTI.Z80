	TITLE	"Heath 89UTI MM58167 Clock - (H89UTI)"
	SUBTTL	"Description of Clock Module"
;==========================================================
; Translated for Z80ASM/ZSDOS 06/11/88 from ver of 12/16/85
; Vers 0.4 current as of 17 Oct 88
;==========================================================

VERS	EQU	04
	.Z80
	NAME H89UTI

	MACLIB	CLOCK.LIB

	COMMON	/_CLKID/

DESCST:	DEFW	0		; Ptr to statyr

CLKNAM:	DEFB	'Heath-H89UTI - MM58167  '	; Exactly 24 chars
	DEFB	VERS/10+'0','.',VERS MOD 10 + '0',0

DESCR:	DEFB	'   Heath/Zenith 89/90 H89UTI board clock',CR,LF
	DEFB	'   (year held in .1 seconds latch) (FBE Research)',0

	  IF  [$-DESCST] > 256
	OVER2
	  ENDIF


	PAGE
	SUBTTL	"Configurable Clock Hardware Parameters"

	COMMON	/_PARM_/

PARBAS:	DEFW	0		; Dummy parameters
	DEFW	0


	PAGE
	SUBTTL	"Clock Code - H89UTI board, FBE Research"

CLKA	EQU	0D4H		; Clock address port
CLKD	EQU	0D2H		; Clock data port
PPIX	EQU	0D7H		; 8255 command port

YEAR	EQU	9
SECONDS	EQU	2

;  D = Mask,  E = Preserved Buffer-Seconds value
;  B = Count, C = Data Port

REGMSK	EQU	01001000B	; Yr,thsec,mon,day,daywk,hr,min,sec
				; 9  8	   7   6   5	 4  3	2

	CSEG
;-----------------------------------------------------------
;	    Z S D O S    C L O C K    H E A D E R
;-----------------------------------------------------------
; Enter: HL points to a 6-byte buffer to Get/Set Time
; Exit :  A=1 on Success, A=FFH if error
;	 HL points to last char in buffer

;== Commented out til Set code written
;==	JP	GETTIM		; Jump to Read Clock
;==	JP	WRCLK		; Jump to Set Clock

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;		R e a d    T h e    C l o c k
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

GETTIM:	PUSH	HL
RETRY:	POP	HL
	PUSH	HL

	DI			; Disallow interrupts
	LD	A,81H		; Initialize the 8255
	OUT	(PPIX),A
	LD	A,80H		; Restore clock
	OUT	(CLKA),A
	EI

	LD	D,REGMSK	; Set skip mask
	LD	BC,256*YEAR + CLKD ; Set count and port

	LD	A,SECONDS OR 80H	; Read seconds
	OUT	(CLKA),A
	IN	A,(CLKD)
	PUSH	AF		; Save seconds on stack

LOOP:	SCF			; So 9th time will exit
	RL	D
	JR	C,SKIP
	LD	A,B
	OR	80H		; Chip-enable bit
	OUT	(CLKA),A
	LD	E,(HL)		; Save buffer 'seconds'
	INI
	INC	B		; Offset auto-decrement B
SKIP:	DJNZ	LOOP

	DEC	HL		; Point at seconds
	POP	AF		; Compare to initial read value
	CP	(HL)
	POP	BC		; Clear stack
	LD	A,01		;== ..preset Ok status return
	RET	Z		; No rollover, exit

	PUSH	BC		; Buf ptr back to stack
	LD	(HL),E		; Repair damage
	JR	RETRY

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;		S e t    T h e    C l o c k
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;== Commented out til written
;==WRCLK:
;==	RET


	PAGE
	SUBTTL	"Run-Time Configuration of Ports and Masks"

; This code installs configurable items into the clock module
; Enter with DE pointing to the physical address of the relocatable module

	COMMON	/_POST_/

	RET			; Just return if come here

	DEFB	0,0,0		; Filler


	PAGE
	SUBTTL	"Pre-Execution Clock Checks"

; This module is executed just prior to installing the module to insure
; that a valid clock is present

	COMMON	/_PRE_/

	INCLUDE	PRECLOCK.LIB

	END
