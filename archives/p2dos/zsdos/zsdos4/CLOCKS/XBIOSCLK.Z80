	TITLE	"XBIOS Clock Driver for ZSDOS - (SB180-XBIOS)"
	SUBTTL	"Description of Clock Module"
;===================================================================
; XBIOS.Z80
;  ZSDOS Clock driver for XSystems' XBIOS Clock.  Derived from
;  XBIOSTST.180 code by Malcom Kemp.
;				Harold F. Bower   22 Jun 88
;===================================================================

VERS	EQU	02
	.Z80
	NAME	XBIOS

	MACLIB	CLOCK.LIB

	COMMON	/_CLKID_/

DESCST:	DEFW	0		; Ptr to statyr

CLKNAM:	DEFB	'XBIOS Clock for SB-180  '	; Exactly 24 chars
	DEFB	VERS/10+'0','.',VERS MOD 10 + '0',0

DESCR:	DEFB	'  XSystems'' XBIOS clock driver for',CR,LF
	DEFB	'  Micro-Mint SB/FX-180 computers',0

	  IF  [$-DESCST] > 256
	OVER2
	  ENDIF

	PAGE
	SUBTTL	"Configurable Clock Hardware Parameters"

	COMMON	/_PARM_/

PARBAS:	DEFW	0		; No parameters to set
	DEFW	0

	PAGE
	SUBTTL	"Clock Code - XBIOS Clock"

WBOOT	EQU	0		; Warm Boot Vector
B_TIME	EQU	18*3		; Offset addr in BIOS

	CSEG
;-------------------------------------------------------------
;	    Z S D O S    C L O C K    H E A D E R
;-------------------------------------------------------------
; Enter: HL points to a 6-byte buffer to Get/Set time
; Exit :  A = 1 on Success, A = FFH if error
;	 HL points to last char in buffer

	JP	GETTIM		; Jump to Read Clock
	JP	WRCLK		; Jump to Set Clock

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;		R E A D    T h e    C l o c k
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

GETTIM:	CALL	CKXBIO		; Check for presence of XBIOS.  SSet addr if Ok
	PUSH	HL		; Save destination addr for clock string
	LD	C,1		; Set to Read XBIOS clock
	LD	DE,BUFR		; Set local buffer address
	CALL	DOXBCLK		; "Call" the XBIOS clock
	POP	DE		; Restore destination addr saved on entry
	LD	HL,BUFR		; ..and string read from the clock
	LD	BC,5		; Move 5 bytes
	LDIR			; ..do it
	EX	DE,HL		; Swap source and destination
	LD	A,(DE)		; Get 6th byte of time (seconds)
	LD	E,(HL)		; Save original 6th byte of destination in E
	LD	(HL),A		; ..and replace with seconds
OKRET:	LD	A,01		; Set return code
	RET

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;		S E T    T h e    C l o c k
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

; Set an XBIOS clock via B_Time vector

WRCLK:	CALL	CKXBIO		; Check for XBIOS presence & Set addr
	EX	DE,HL		; Put the buffer in DE
	LD	C,2		; Subfunction call to set clock
	CALL	DOXBCLK		; Do the actual XBIOS Set
	OR	A
	JR	NZ,TIMERR	; ..Jump to error if can't set
	JR	OKRET		; Return Good status if Ok

;.....
; Locate and validate the presence of XBIOS.  Set the entry address

CKXBIO:	PUSH	HL		; Save the entry buffer address
	LD	HL,(DOXBCLK+1)	; Has it been set yet?
	LD	A,H
	OR	L
	JR	NZ,CLKOK	; ..jump to exit return if already set

	LD	HL,(WBOOT+1)	; Else get the BIOS address
	LD	L,B_TIME
	INC	HL		; Increment past jump
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	PUSH	DE		; Save vector in case it is good
	DEC	DE
	LD	HL,IDSTR+4
	LD	B,5
LOOP:	LD	A,(DE)
	CP	(HL)
	JR	NZ,MISMAT	; Exit if no match showing no XBIOS
	DEC	HL
	DEC	DE
	DJNZ	LOOP		; Loop til done or mismatch
	POP	HL		; Restore saved vector from before
	LD	(DOXBCLK+1),HL	; ..and store
MISMAT:	POP	HL		; Restore the entry buffer address
	RET	Z		; ..and return if XBIOS Located Ok
			;..else fall thru to error
	POP	HL		; Clear stack level on error (Entry buffer)
CLKOK:	POP	HL		; Clear return address (or entry HL)
TIMERR:	OR	0FFH		; Set error return to module caller
	RET			; ..and exit

;.....
; Fake a call to the address in HL by CALLing this address

DOXBCLK: LD	HL,0000		; Get the XBIOS clock vector (inline mod)
	 JP	(HL)		; Execute CALL to HL and return

;.....
; XBIOS ID string

IDSTR:	DEFB	'XBIOS'

;.....
; Data Storage/Buffer

BUFR:	DEFS	20		; XBIOS Date/Time buffer

	PAGE
	SUBTTL	"Run-Time Configuration of Ports and Masks"

; This code installs configurable items into the clock module
; Enter with DE pointing to the physical address of the relocatable module

	COMMON	/_POST_/

	RET			; Nothing to install

	DEFB	0,0,0		; Filler

	PAGE
	SUBTTL	"Pre-Execution Clock Checks"

; This module is executed just prior to installing the module to insure
; that a valid clock is present
; Enter with DE pointing to beginning of relocated clock CSEG

	COMMON	/_PRE_/

	INCLUDE	PRECLOCK.LIB

	END
