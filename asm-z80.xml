<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd">
<!--

*************************************************************************
*                                                                       *
*               Syntax highlighting for the Z80 Assembler               *
*                 Copyright (C) 2008, Piergiorgio Betti                 *
*                                                                       *
*************************************************************************

-->

<language name="Z80 Assembler" version="1.02" kateversion="2.1" section="Assembler" extensions="*.inc;*.z80;*.asm;*.Z80;*.mac" mimetype="text/x-asm;text/x-asm-z80" author="P.Betti info@z80cpu.eu" license="GPL" priority="99">
<highlighting>
	<list name="data_instructions">
		<item>ex</item>
		<item>exx</item>
		<item>ld</item>
		<item>ldd</item>
		<item>lddr</item>
		<item>ldi</item>
		<item>ldir</item>
		<item>EX</item>
		<item>EXX</item>
		<item>LD</item>
		<item>LDD</item>
		<item>LDDR</item>
		<item>LDI</item>
		<item>LDIR</item>
	</list>
	<list name="stack_instructions">
		<item>pop</item>
		<item>push</item>
		<item>POP</item>
		<item>PUSH</item>
	</list>
	<list name="arithmetic_instructions">
		<item>adc</item>
		<item>add</item>
		<item>cp</item>
		<item>cpd</item>
		<item>cpdr</item>
		<item>cpi</item>
		<item>cpir</item>
		<item>cpl</item>
		<item>daa</item>
		<item>dec</item>
		<item>inc</item>
		<item>neg</item>
		<item>sbc</item>
		<item>sub</item>
		<item>ADC</item>
		<item>ADD</item>
		<item>CP</item>
		<item>CPD</item>
		<item>CPDR</item>
		<item>CPI</item>
		<item>CPIR</item>
		<item>CPL</item>
		<item>DAA</item>
		<item>DEC</item>
		<item>INC</item>
		<item>NEG</item>
		<item>SBC</item>
		<item>SUB</item>
	</list>
	<list name="bit_instructions">
		<item>and</item>
		<item>bit</item>
		<item>ccf</item>
		<item>or</item>
		<item>res</item>
		<item>scf</item>
		<item>set</item>
		<item>xor</item>
		<item>AND</item>
		<item>BIT</item>
		<item>CCF</item>
		<item>OR</item>
		<item>RES</item>
		<item>SCF</item>
		<item>SET</item>
		<item>XOR</item>
	</list>
	<list name="shift_instructions">
		<item>rl</item>
		<item>rla</item>
		<item>rlc</item>
		<item>rlca</item>
		<item>rld</item>
		<item>rr</item>
		<item>rra</item>
		<item>rrc</item>
		<item>rrca</item>
		<item>rrd</item>
		<item>rst</item>
		<item>sla</item>
		<item>sra</item>
		<item>srl</item>
		<item>RL</item>
		<item>RLA</item>
		<item>RLC</item>
		<item>RLCA</item>
		<item>RLD</item>
		<item>RR</item>
		<item>RRA</item>
		<item>RRC</item>
		<item>RRCA</item>
		<item>RRD</item>
		<item>RST</item>
		<item>SLA</item>
		<item>SRA</item>
		<item>SRL</item>
	</list>
	<list name="control_instructions">
		<item>call</item>
		<item>djnz</item>
		<item>jp</item>
		<item>jr</item>
		<item>nop</item>
		<item>ret</item>
		<item>reti</item>
		<item>retn</item>
		<item>CALL</item>
		<item>DJNZ</item>
		<item>JP</item>
		<item>JR</item>
		<item>NOP</item>
		<item>RET</item>
		<item>RETI</item>
		<item>RETN</item>
	</list>
	<list name="hardware_instructions">
		<item>di</item>
		<item>ei</item>
		<item>halt</item>
		<item>im</item>
		<item>in</item>
		<item>ind</item>
		<item>indr</item>
		<item>ini</item>
		<item>inir</item>
		<item>otdr</item>
		<item>otir</item>
		<item>out</item>
		<item>outd</item>
		<item>outi</item>
		<item>DI</item>
		<item>EI</item>
		<item>HALT</item>
		<item>IM</item>
		<item>IN</item>
		<item>IND</item>
		<item>INDR</item>
		<item>INI</item>
		<item>INIR</item>
		<item>OTDR</item>
		<item>OTIR</item>
		<item>OUT</item>
		<item>OUTD</item>
		<item>OUTI</item>
	</list>
	
	<list name="codegen">
		<item> .z80 </item>
		<item> phase </item>
		<item> dephase </item>
		<item> cseg </item>
		<item> dseg </item>
		<item> aseg </item>
		<item> public </item>
		<item> extern </item>
		<item> .Z80 </item>
		<item> PHASE </item>
		<item> DEPHASE </item>
		<item> CSEG </item>
		<item> DSEG </item>
		<item> ASEG </item>
		<item> PUBLIC </item>
		<item> EXTERN </item>
	</list>

	<list name="pseudoinstructions">
		<item> cpu </item>
		<item> ent </item>
		<item> equ </item>
		<item> org </item>
		<item> defb </item>
		<item> defs </item>
		<item> defm </item>
		<item> defw </item>
		<item> db </item>
		<item> dw </item>
		<item> ds </item>
		<item> include </item>
		<item> binclude </item>
		<item> includebin </item>
		<item> macro </item>
		<item> endm </item>
		<item> endmacro </item>
		<item> irpt </item>
		<item> rept </item>
		<item> eval </item>
		<item> while </item>
		<item> ifdef </item>
		<item> ifndef </item>
		<item> if </item>
		<item> endif </item>
		<item> else </item>
		<item> warning </item>
		<item> list </item>
		<item> nolist </item>
		<item> ascii </item>
		<item> asciiz </item>
		<item> block </item>
		<item> .equ </item>
		<item> .org </item>
		<item> .word </item>
		<item> .byte </item>
		<item> CPU </item>
		<item> ENT </item>
		<item> EQU </item>
		<item> ORG </item>
		<item> DEFB </item>
		<item> DEFS </item>
		<item> DEFM </item>
		<item> DEFW </item>
		<item> DB </item>
		<item> DW </item>
		<item> DS </item>
		<item> INCLUDE </item>
		<item> BINCLUDE </item>
		<item> INCLUDEBIN </item>
		<item> MACRO </item>
		<item> ENDM </item>
		<item> ENDMACRO </item>
		<item> IRPT </item>
		<item> REPT </item>
		<item> EVAL </item>
		<item> WHILE </item>
		<item> IFDEF </item>
		<item> IFNDEf </item>
		<item> IF </item>
		<item> ENDIF </item>
		<item> ELSE </item>
		<item> WARNING </item>
		<item> LIST </item>
		<item> NOLIST </item>
		<item> ASCII </item>
		<item> ASCIIZ </item>
		<item> BLOCK </item>
		<item> .EQU </item>
		<item> .ORG </item>
		<item> .WORD </item>
		<item> .BYTE </item>
	</list>
	
	<list name="registers">
		<item> ix </item>
		<item> sp </item>
		<item> hl </item>
		<item> bc </item>
		<item> de </item>
		<item> af </item>
		<item> iy </item>
		<item> ixl </item>
		<item> ixh </item>
		<item> a </item>
		<item> b </item>
		<item> c </item>
		<item> d </item>
		<item> e </item>
		<item> h </item>
		<item> l </item>
		<item> af' </item>
		<item> IX </item>
		<item> SP </item>
		<item> HL </item>
		<item> BC </item>
		<item> DE </item>
		<item> AF </item>
		<item> IY </item>
		<item> IXL </item>
		<item> IXH </item>
		<item> A </item>
		<item> B </item>
		<item> C </item>
		<item> D </item>
		<item> E </item>
		<item> H </item>
		<item> L </item>
		<item> AF' </item>
	</list>

        <list name="flags">
		<item> z </item>
		<item> nz </item>
		<item> c </item>
		<item> nc </item>
		<item> pe </item>
		<item> po </item>
		<item> Z </item>
		<item> NZ </item>
		<item> C </item>
		<item> NC </item>
		<item> PE </item>
		<item> PO </item>
	</list>

    <contexts>
      <context attribute="Normal Text" lineEndContext="#stay" name="Normal">
        <RegExpr      attribute="Label" context="#stay" String="^\s*[A-Za-z0-9_.$]+:" />
        <keyword String="data_instructions" attribute="Data Instruction" context="#stay" casesensitive="1"/>
        <keyword String="stack_instructions" attribute="Stack Instruction" context="#stay"/>
        <keyword String="arithmetic_instructions" attribute="Arithmetic Instruction" context="#stay"/>
        <keyword String="bit_instructions" attribute="Bit Instruction" context="#stay"/>
        <keyword String="shift_instructions" attribute="Shift Instruction" context="#stay"/>
        <keyword String="control_instructions" attribute="Control Instruction" context="#stay"/>
        <keyword String="hardware_instructions" attribute="Hardware Instruction" context="#stay"/>
        <keyword      attribute="PseudoInstructions" context="#stay" String="pseudoinstructions" />
        <keyword      attribute="Registers" context="#stay" String="registers" />
	<keyword      attribute="Flags" context="#stay" String="flags" />
	<keyword      attribute="Code Gen" context="#stay" String="codegen" />
	<RegExpr      attribute="Binary" context="#stay" String="[01]+[bB%]+$" />
	<RegExpr      attribute="Binary" context="#stay" String="%+[01]" />
	<RegExpr String="0b[01]+" attribute="Binary" context="#stay"/>
	<RegExpr String="\.?\w+:" attribute="Label" context="#stay"/>
	
        <RegExpr      attribute="Hex" context="#stay" String="0x+[0-9A-Fa-f]+[0-9A-Fa-f]" />
	<RegExpr      attribute="Hex" context="#stay" String="[#\$]+[0-9A-Fa-f]+[0-9A-Fa-f]" />
	<RegExpr      attribute="Hex" context="#stay" String="[0-9A-Fa-f]+[0-9A-Fa-f]+[hH%]" />
	<Int          attribute="Decimal" context="#stay" />
        <RegExpr      attribute="Float" context="#stay" String="0[fFeEdD][-+]?[0-9]*\.?[0-9]*[eE]?[-+]?[0-9]+" />
        <RegExpr      attribute="Normal Text" context="#stay" String="[A-Za-z_.$][A-Za-z0-9_.$]*" />
        <DetectChar   attribute="String" context="String" char="&quot;" />
        <DetectChar   attribute="String" context="String" char="'" />
        <DetectChar   attribute="Comment" context="Commentar 2" char=";" />
        <AnyChar      attribute="Symbol" context="#stay" String="!#%&amp;*()+,-&lt;=&gt;?/:[]^{|}~" />
        <RegExpr      attribute="Preprocessor" context="Preprocessor" String="^#" />
	<RegExpr String="(FIXME|TODO):?" attribute="Alert" context="#stay"/>
      </context>
      
      <context attribute="Comment" lineEndContext="#stay" name="Commentar 1">
        <Detect2Chars attribute="Comment" context="#pop" char="*" char1="/" />
      </context>
      
      <context attribute="Comment" lineEndContext="#pop" name="Commentar 2" />
      
      <context attribute="Preprocessor" lineEndContext="#pop" name="Preprocessor" />
      
      <context attribute="String" lineEndContext="#pop" name="String">
        <LineContinue  attribute="String" context="Some Context" />
        <HlCStringChar attribute="String Char" context="#stay" />
        <DetectChar    attribute="String" context="#pop" char="&quot;" />
        <DetectChar    attribute="String" context="#pop" char="'" />
      </context>
      
      <context attribute="Normal Text" lineEndContext="#pop" name="Some Context" />

    </contexts>

    <itemDatas>
      <itemData name="Normal Text"        defStyleNum="dsNormal"   />
      <itemData name="Label"              defStyleNum="dsNormal"   />
      <itemData name="Data Instruction"       defStyleNum="dsKeyword"  />
      <itemData name="Stack Instruction"       defStyleNum="dsKeyword"  />
      <itemData name="Arithmetic Instruction"       defStyleNum="dsKeyword"  />
      <itemData name="Bit Instruction"       defStyleNum="dsKeyword"  />
      <itemData name="Shift Instruction"       defStyleNum="dsKeyword"  />
      <itemData name="Control Instruction"       defStyleNum="dsKeyword"  />
      <itemData name="Hardware Instruction"       defStyleNum="dsKeyword"  />
      <itemData name="Code Gen"       defStyleNum="dsKeyword"  />
      <itemData name="PseudoInstructions" defStyleNum="dsFunction" />
      <itemData name="Registers"          defStyleNum="dsDataType" />
      <itemData name="Flags"              defStyleNum="dsChar"     />
      <itemData name="Decimal"            defStyleNum="dsDecVal"   />
      <itemData name="Octal"              defStyleNum="dsBaseN"    />
      <itemData name="Hex"                defStyleNum="dsBaseN"    />
      <itemData name="Binary"             defStyleNum="dsBaseN"    />
      <itemData name="Float"              defStyleNum="dsFloat"    />
      <itemData name="Char"               defStyleNum="dsChar"     />
      <itemData name="String"             defStyleNum="dsString"   />
      <itemData name="String Char"        defStyleNum="dsString"   />
      <itemData name="Symbol"             defStyleNum="dsNormal"   />
      <itemData name="Comment"            defStyleNum="dsComment"  />
      <itemData name="Preprocessor"       defStyleNum="dsOthers"   />
      <itemData name="Label" defStyleNum="dsFunction" spellChecking="false"/>
      <itemData name="Alert" defStyleNum="dsAlert" spellChecking="false"/>
</itemDatas>
  </highlighting>

  <general>
    <comments>
      <comment name="singleLine" start=";" />
    </comments>
    <keywords casesensitive="1" weakDeliminator="_.$" />
  </general>
</language>
